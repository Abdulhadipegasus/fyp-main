{"version":3,"sources":["pages/uikit/Dropdowns.tsx","components/PageTitle.tsx","../node_modules/react-bootstrap/esm/divWithClassName.js","../node_modules/react-bootstrap/esm/CardHeaderContext.js","../node_modules/react-bootstrap/esm/Row.js","../node_modules/react-bootstrap/esm/BreadcrumbItem.js","../node_modules/react-bootstrap/esm/Breadcrumb.js","../node_modules/react-bootstrap/esm/Col.js","../node_modules/dom-helpers/esm/ownerDocument.js","../node_modules/@restart/hooks/esm/useMergedRefs.js","../node_modules/react-bootstrap/esm/CardImg.js","../node_modules/react-bootstrap/esm/CardHeader.js","../node_modules/react-bootstrap/esm/Card.js","../node_modules/warning/warning.js","../node_modules/dom-helpers/esm/canUseDOM.js","../node_modules/dom-helpers/esm/addEventListener.js","../node_modules/dom-helpers/esm/listen.js","../node_modules/react-bootstrap/esm/InputGroupContext.js","../node_modules/react-bootstrap/esm/Button.js","../node_modules/dom-helpers/esm/removeEventListener.js","../node_modules/react-bootstrap/esm/ButtonGroup.js"],"names":["colors","name","color","SingleButtonDropdown","_jsxs","children","_jsx","className","Row","Col","xs","Dropdown","Toggle","variant","id","Menu","Item","href","as","ColorVariantButtonDropdown","map","index","ButtonGroup","Divider","DropendVariationDropdowns","drop","Button","DropupVariationDropdowns","ActiveItemDropdown","active","DropdownWithHeader","Header","CustomDropdown","htmlFor","type","placeholder","eventKey","SplitColorVariantButtonDropdown","split","ButtonDropdownSizes","size","item","React","Fragment","DropstartVariationDropdowns","DropdownMenuAlignment","align","DisabledItemDropdown","disabled","DropdownWithText","style","maxWidth","Dropdowns","PageTitle","breadCrumbItems","label","path","title","Card","Body","xl","props","appSelector","useRedux","layoutType","state","Layout","classNames","LayoutTypes","LAYOUT_HORIZONTAL","LAYOUT_DETACHED","Breadcrumb","listProps","p","ref","context","displayName","DEVICE_SIZES","_ref","bsPrefix","Component","decoratedBsPrefix","useBootstrapPrefix","sizePrefix","concat","classes","forEach","brkPoint","propValue","cols","infix","push","BreadcrumbItem","linkAs","LinkComponent","Anchor","linkProps","target","prefix","undefined","defaultProps","Object","assign","useCol","spans","span","offset","order","colProps","length","ownerDocument","node","document","toFnRef","value","current","useMergedRefs","refA","refB","useMemo","a","b","mergeRefs","CardImg","CardHeader","contextValue","cardHeaderBsPrefix","CardHeaderContext","Provider","DivStyledAsH5","divWithClassName","DivStyledAsH6","CardBody","createWithBsPrefix","CardTitle","CardSubtitle","CardLink","CardText","CardFooter","CardImgOverlay","bg","text","border","body","Img","Title","Subtitle","Link","Text","Footer","ImgOverlay","warning","module","exports","window","createElement","optionsSupported","onceSupported","options","passive","once","canUseDOM","addEventListener","removeEventListener","e","eventName","handler","capture","wrappedHandler","__once","onceHandler","event","this","call","listen","buttonProps","tagName","useButtonProps","vertical","rest","baseClass","role"],"mappings":"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","file":"static/js/94.8976389f.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Row, Col, Card, Dropdown, ButtonGroup, Button } from 'react-bootstrap';\r\n\r\n// components\r\nimport PageTitle from '../../components/PageTitle';\r\n\r\nconst colors = [\r\n    {\r\n        name: 'Primary',\r\n        color: 'primary',\r\n    },\r\n    {\r\n        name: 'Secondary',\r\n        color: 'secondary',\r\n    },\r\n    {\r\n        name: 'Success',\r\n        color: 'success',\r\n    },\r\n    {\r\n        name: 'Info',\r\n        color: 'info',\r\n    },\r\n    {\r\n        name: 'Warning',\r\n        color: 'warning',\r\n    },\r\n    {\r\n        name: 'Danger',\r\n        color: 'danger',\r\n    },\r\n];\r\n\r\nconst SingleButtonDropdown = () => {\r\n    return (\r\n        <div>\r\n            <h5>Single button dropdowns</h5>\r\n            <p className=\"text-muted font-13 mb-2\">\r\n                You can use <code>DropdownButton</code> to create a simple dropdown. Also, you can use prop{' '}\r\n                <code>as</code> to create custom element typeof dropdown.\r\n            </p>\r\n            <Row>\r\n                <Col xs={6}>\r\n                    <Dropdown className=\"mt-2\">\r\n                        <Dropdown.Toggle variant=\"light\" id=\"dropdown-basic\">\r\n                            Dropdown Button <i className=\"mdi mdi-chevron-down\"></i>\r\n                        </Dropdown.Toggle>\r\n\r\n                        <Dropdown.Menu>\r\n                            <Dropdown.Item href=\"#/action-1\">Action</Dropdown.Item>\r\n                            <Dropdown.Item href=\"#/action-2\">Another action</Dropdown.Item>\r\n                            <Dropdown.Item href=\"#/action-3\">Something else</Dropdown.Item>\r\n                        </Dropdown.Menu>\r\n                    </Dropdown>\r\n                </Col>\r\n                <Col xs={6}>\r\n                    <Dropdown className=\"mt-2\">\r\n                        <Dropdown.Toggle as=\"a\" variant=\"light\" className=\"btn btn-light\">\r\n                            Dropdown link <i className=\"mdi mdi-chevron-down\"></i>\r\n                        </Dropdown.Toggle>\r\n\r\n                        <Dropdown.Menu>\r\n                            <Dropdown.Item href=\"#/action-1\">Action</Dropdown.Item>\r\n                            <Dropdown.Item href=\"#/action-2\">Another action</Dropdown.Item>\r\n                            <Dropdown.Item href=\"#/action-3\">Something else</Dropdown.Item>\r\n                        </Dropdown.Menu>\r\n                    </Dropdown>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst ColorVariantButtonDropdown = () => {\r\n    return (\r\n        <div className=\"mt-5\">\r\n            <h5 className=\"mb-1\">Variant</h5>\r\n            <p className=\"text-muted font-13 mb-2\">The best part is you can do this with any button variant, too:</p>\r\n\r\n            {(colors || []).map((color, index) => {\r\n                return (\r\n                    <Dropdown key={index} as={ButtonGroup} className=\"mt-2 me-1\">\r\n                        <Dropdown.Toggle variant={color.color}>\r\n                            {color.name} <i className=\"mdi mdi-chevron-down\"></i>\r\n                        </Dropdown.Toggle>\r\n                        <Dropdown.Menu>\r\n                            <Dropdown.Item href=\"#\">Action</Dropdown.Item>\r\n                            <Dropdown.Item href=\"#\">Another action</Dropdown.Item>\r\n                            <Dropdown.Item href=\"#\">Something else here</Dropdown.Item>\r\n                            <Dropdown.Divider />\r\n                            <Dropdown.Item href=\"#\">Separated link</Dropdown.Item>\r\n                        </Dropdown.Menu>\r\n                    </Dropdown>\r\n                );\r\n            })}\r\n        </div>\r\n    );\r\n};\r\n\r\nconst DropendVariationDropdowns = () => {\r\n    return (\r\n        <div className=\"mt-5\">\r\n            <h5 className=\"mb-1\">Dropend variation</h5>\r\n            <p className=\"text-muted font-13 mb-2\">\r\n                Trigger dropdown menus right of their toggle elements, with the <code>drop</code> prop.\r\n            </p>\r\n            <Dropdown as={ButtonGroup} className=\"mt-2 me-1\" drop=\"end\">\r\n                <Dropdown.Toggle variant=\"primary\" className=\"waves-effect waves-light\">\r\n                    Dropend <i className=\"mdi mdi-chevron-right\"></i>\r\n                </Dropdown.Toggle>\r\n                <Dropdown.Menu>\r\n                    <Dropdown.Item href=\"#\">Action</Dropdown.Item>\r\n                    <Dropdown.Item href=\"#\">Another action</Dropdown.Item>\r\n                    <Dropdown.Item href=\"#\">Something else here</Dropdown.Item>\r\n                    <Dropdown.Divider />\r\n                    <Dropdown.Item href=\"#\">Separated link</Dropdown.Item>\r\n                </Dropdown.Menu>\r\n            </Dropdown>\r\n            <Dropdown as={ButtonGroup} className=\"mt-2 me-1\" drop=\"end\">\r\n                <Button variant=\"light\" className=\"waves-effect\">\r\n                    Split Dropend\r\n                </Button>\r\n                <Dropdown.Toggle variant=\"light\" className=\"waves-effect\">\r\n                    <i className=\"mdi mdi-chevron-right\"></i>\r\n                </Dropdown.Toggle>\r\n\r\n                <Dropdown.Menu>\r\n                    <Dropdown.Item href=\"#/action-1\">Action</Dropdown.Item>\r\n                    <Dropdown.Item href=\"#/action-2\">Another action</Dropdown.Item>\r\n                    <Dropdown.Divider />\r\n                    <Dropdown.Item href=\"#/action-3\">Something else</Dropdown.Item>\r\n                </Dropdown.Menu>\r\n            </Dropdown>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst DropupVariationDropdowns = () => {\r\n    return (\r\n        <div className=\"mt-5\">\r\n            <h5 className=\"mb-1\">Dropup variation</h5>\r\n            <p className=\"text-muted font-13 mb-2\">\r\n                Trigger dropdown menus above of their toggle elements, with the <code>drop</code> prop.\r\n            </p>\r\n            <Dropdown as={ButtonGroup} className=\"mt-2 me-1\" drop=\"up\">\r\n                <Dropdown.Toggle variant=\"purple\">\r\n                    Dropup <i className=\"mdi mdi-chevron-up\"></i>\r\n                </Dropdown.Toggle>\r\n                <Dropdown.Menu>\r\n                    <Dropdown.Item href=\"#\">Action</Dropdown.Item>\r\n                    <Dropdown.Item href=\"#\">Another action</Dropdown.Item>\r\n                    <Dropdown.Item href=\"#\">Something else here</Dropdown.Item>\r\n                    <Dropdown.Divider as=\"div\" />\r\n                    <Dropdown.Item href=\"#\">Separated link</Dropdown.Item>\r\n                </Dropdown.Menu>\r\n            </Dropdown>\r\n            <Dropdown as={ButtonGroup} className=\"mt-2 me-1\" drop=\"up\">\r\n                <Button variant=\"light\">Split Dropup</Button>\r\n                <Dropdown.Toggle variant=\"light\">\r\n                    <i className=\"mdi mdi-chevron-up\"></i>\r\n                </Dropdown.Toggle>\r\n\r\n                <Dropdown.Menu>\r\n                    <Dropdown.Item href=\"#\">Action</Dropdown.Item>\r\n                    <Dropdown.Item href=\"#\">Another action</Dropdown.Item>\r\n                    <Dropdown.Item href=\"#\">Something else here</Dropdown.Item>\r\n                    <Dropdown.Divider as=\"div\" />\r\n                    <Dropdown.Item href=\"#\">Separated link</Dropdown.Item>\r\n                </Dropdown.Menu>\r\n            </Dropdown>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst ActiveItemDropdown = () => {\r\n    return (\r\n        <div className=\"mt-5\">\r\n            <h5 className=\"mb-1\">Active Item</h5>\r\n            <p className=\"text-muted font-13 mb-2\">\r\n                Add <code>active</code> prop to item in the dropdown to <strong>style them as active</strong>.\r\n            </p>\r\n\r\n            <Dropdown as={ButtonGroup} className=\"mt-2\">\r\n                <Dropdown.Toggle variant=\"secondary\">\r\n                    Active Item <i className=\"mdi mdi-chevron-down\"></i>\r\n                </Dropdown.Toggle>\r\n                <Dropdown.Menu>\r\n                    <Dropdown.Item>Regular link</Dropdown.Item>\r\n                    <Dropdown.Item active>Active link</Dropdown.Item>\r\n                    <Dropdown.Item>Another link</Dropdown.Item>\r\n                </Dropdown.Menu>\r\n            </Dropdown>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst DropdownWithHeader = () => {\r\n    return (\r\n        <div className=\"mt-5\">\r\n            <h5 className=\"mb-1\">Headers</h5>\r\n\r\n            <p className=\"text-muted font-13 mb-2\">Add a header to label sections of actions.</p>\r\n\r\n            <Dropdown as={ButtonGroup} className=\"mt-2\">\r\n                <Dropdown.Toggle variant=\"secondary\">\r\n                    Header <i className=\"mdi mdi-chevron-down\"></i>\r\n                </Dropdown.Toggle>\r\n                <Dropdown.Menu>\r\n                    <Dropdown.Header>Dropdown header</Dropdown.Header>\r\n                    <Dropdown.Item>Action</Dropdown.Item>\r\n                    <Dropdown.Item>Another action</Dropdown.Item>\r\n                </Dropdown.Menu>\r\n            </Dropdown>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst CustomDropdown = () => {\r\n    return (\r\n        <div className=\"mt-5\">\r\n            <h5 className=\"mb-1\">Forms</h5>\r\n            <p className=\"text-muted font-13 mb-2\">\r\n                Put a form within a dropdown menu, or make it into a dropdown menu, and use margin or padding utilities\r\n                to give it the negative space you require.\r\n            </p>\r\n\r\n            <Dropdown className=\"mt-2\">\r\n                <Dropdown.Toggle variant=\"secondary\">\r\n                    Form <i className=\"mdi mdi-chevron-down\"></i>\r\n                </Dropdown.Toggle>\r\n                <Dropdown.Menu>\r\n                    <form className=\"px-4 py-3\">\r\n                        <div className=\"mb-2\">\r\n                            <label htmlFor=\"exampleDropdownFormEmail1\" className=\"form-label\">\r\n                                Email address\r\n                            </label>\r\n                            <input\r\n                                type=\"email\"\r\n                                className=\"form-control\"\r\n                                id=\"exampleDropdownFormEmail1\"\r\n                                placeholder=\"email@example.com\"\r\n                            />\r\n                        </div>\r\n                        <div className=\"mb-2\">\r\n                            <label htmlFor=\"exampleDropdownFormPassword1\" className=\"form-label\">\r\n                                Password\r\n                            </label>\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                id=\"exampleDropdownFormPassword1\"\r\n                                placeholder=\"Password\"\r\n                            />\r\n                        </div>\r\n                        <div className=\"mb-2\">\r\n                            <div className=\"form-check\">\r\n                                <input type=\"checkbox\" className=\"form-check-input\" id=\"dropdownCheck\" />\r\n                                <label className=\"form-check-label\" htmlFor=\"dropdownCheck\">\r\n                                    Remember me\r\n                                </label>\r\n                            </div>\r\n                        </div>\r\n                        <button type=\"submit\" className=\"btn btn-primary\">\r\n                            Sign in\r\n                        </button>\r\n                    </form>\r\n                    <Dropdown.Divider />\r\n                    <Dropdown.Item eventKey=\"4\">New around here? Sign up</Dropdown.Item>\r\n                    <Dropdown.Item eventKey=\"4\">Forgot password?</Dropdown.Item>\r\n                </Dropdown.Menu>\r\n            </Dropdown>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst SplitColorVariantButtonDropdown = () => {\r\n    return (\r\n        <div className=\"mt-5 mt-xl-0\">\r\n            <h5 className=\"mb-1\">Split button dropdowns</h5>\r\n            <p className=\"text-muted font-13 mb-2\">\r\n                You can split button dropdowns by adding <code>SplitButton</code>.\r\n            </p>\r\n            {(colors || []).map((color, index) => {\r\n                return (\r\n                    <Dropdown key={index} as={ButtonGroup} className=\"me-1 mt-2\">\r\n                        <Button variant={color.color}>{color.name} </Button>\r\n\r\n                        <Dropdown.Toggle split variant={color.color}>\r\n                            <i className=\"mdi mdi-chevron-down\"></i>\r\n                        </Dropdown.Toggle>\r\n\r\n                        <Dropdown.Menu>\r\n                            <Dropdown.Item eventKey=\"1\">Action</Dropdown.Item>\r\n                            <Dropdown.Item eventKey=\"2\">Another action</Dropdown.Item>\r\n                            <Dropdown.Item eventKey=\"3\">Something else here</Dropdown.Item>\r\n                            <Dropdown.Divider />\r\n                            <Dropdown.Item eventKey=\"4\">Separated link</Dropdown.Item>\r\n                        </Dropdown.Menu>\r\n                    </Dropdown>\r\n                );\r\n            })}\r\n        </div>\r\n    );\r\n};\r\n\r\nconst ButtonDropdownSizes = () => {\r\n    const sizes = [\r\n        {\r\n            size: 'lg',\r\n            name: 'Large button',\r\n            variant: 'primary',\r\n        },\r\n        {\r\n            size: 'sm',\r\n            name: 'Small button',\r\n            variant: 'success',\r\n        },\r\n    ];\r\n    return (\r\n        <div className=\"mt-5\">\r\n            <p className=\"mb-1 h5 mt-5\">Sizing</p>\r\n            <p className=\"text-muted font-13 mb-2\">\r\n                Button dropdowns work with buttons of all sizes, including default and split dropdown buttons.\r\n            </p>\r\n            {(sizes || []).map((item, index) => {\r\n                return (\r\n                    <React.Fragment key={index}>\r\n                        <Dropdown as={ButtonGroup} size={item.size} className=\"mt-2 me-1\">\r\n                            <Dropdown.Toggle variant={item.variant}>\r\n                                {item.name} <i className=\"mdi mdi-chevron-down\"></i>\r\n                            </Dropdown.Toggle>\r\n                            <Dropdown.Menu>\r\n                                <Dropdown.Item href=\"#\">Action</Dropdown.Item>\r\n                                <Dropdown.Item href=\"#\">Another action</Dropdown.Item>\r\n                                <Dropdown.Item href=\"#\">Something else here</Dropdown.Item>\r\n                                <Dropdown.Divider as=\"div\" />\r\n                                <Dropdown.Item href=\"#\">Separated link</Dropdown.Item>\r\n                            </Dropdown.Menu>\r\n                        </Dropdown>\r\n                        <Dropdown as={ButtonGroup} size={item.size} className=\"mt-2 me-1\">\r\n                            <Button variant=\"light\">{item.name}</Button>\r\n                            <Dropdown.Toggle variant=\"light\">\r\n                                <i className=\"mdi mdi-chevron-down\"></i>\r\n                            </Dropdown.Toggle>\r\n\r\n                            <Dropdown.Menu>\r\n                                <Dropdown.Item href=\"#\">Action</Dropdown.Item>\r\n                                <Dropdown.Item href=\"#\">Another action</Dropdown.Item>\r\n                                <Dropdown.Item href=\"#\">Something else here</Dropdown.Item>\r\n                                <Dropdown.Divider as=\"div\" />\r\n                                <Dropdown.Item href=\"#\">Separated link</Dropdown.Item>\r\n                            </Dropdown.Menu>\r\n                        </Dropdown>\r\n                    </React.Fragment>\r\n                );\r\n            })}\r\n        </div>\r\n    );\r\n};\r\n\r\nconst DropstartVariationDropdowns = () => {\r\n    return (\r\n        <div className=\"mt-5\">\r\n            <h5 className=\"mb-1\">Dropstart variation</h5>\r\n            <p className=\"text-muted font-13 mb-2\">\r\n                Trigger dropdown menus left of their toggle elements, with the <code>drop</code> prop.\r\n            </p>\r\n            <Dropdown as={ButtonGroup} className=\"mb-2 me-1\" drop=\"start\">\r\n                <Dropdown.Toggle variant=\"info\">\r\n                    <i className=\"mdi mdi-chevron-left\"></i>Dropstart\r\n                </Dropdown.Toggle>\r\n                <Dropdown.Menu>\r\n                    <Dropdown.Item href=\"#\">Action</Dropdown.Item>\r\n                    <Dropdown.Item href=\"#\">Another action</Dropdown.Item>\r\n                    <Dropdown.Item href=\"#\">Something else here</Dropdown.Item>\r\n                    <Dropdown.Divider />\r\n                    <Dropdown.Item href=\"#\">Separated link</Dropdown.Item>\r\n                </Dropdown.Menu>\r\n            </Dropdown>\r\n            <Dropdown as={ButtonGroup} className=\"mb-2\" drop=\"start\">\r\n                <Dropdown.Toggle variant=\"secondary\">\r\n                    <i className=\"mdi mdi-chevron-left\"></i>\r\n                </Dropdown.Toggle>\r\n                <Button variant=\"secondary\">Split dropstart</Button>\r\n\r\n                <Dropdown.Menu>\r\n                    <Dropdown.Item href=\"#/action-1\">Action</Dropdown.Item>\r\n                    <Dropdown.Item href=\"#/action-2\">Another action</Dropdown.Item>\r\n                    <Dropdown.Item href=\"#/action-3\">Something else</Dropdown.Item>\r\n                </Dropdown.Menu>\r\n            </Dropdown>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst DropdownMenuAlignment = () => {\r\n    return (\r\n        <div className=\"mt-5\">\r\n            <p className=\"mb-1 h5 mt-5\">Menu alignment</p>\r\n            <p className=\"text-muted font-13 mb-2\">\r\n                Passing <code>right</code> to the <code>menuAligh</code> prop on the\r\n                <code> DropdownButton</code> to right align the dropdown menu.\r\n            </p>\r\n\r\n            <Dropdown as={ButtonGroup} className=\"mt-2\" align=\"end\">\r\n                <Dropdown.Toggle variant=\"light\">\r\n                    Right-aligned <i className=\"mdi mdi-chevron-down\"></i>\r\n                </Dropdown.Toggle>\r\n                <Dropdown.Menu>\r\n                    <Dropdown.Item href=\"#\">Action</Dropdown.Item>\r\n                    <Dropdown.Item href=\"#\">Another action</Dropdown.Item>\r\n                    <Dropdown.Item href=\"#\">Something else here</Dropdown.Item>\r\n                </Dropdown.Menu>\r\n            </Dropdown>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst DisabledItemDropdown = () => {\r\n    return (\r\n        <div className=\"mt-5\">\r\n            <h5 className=\"mb-1\">Disabled Item</h5>\r\n\r\n            <p className=\"text-muted font-13 mb-2\">\r\n                Add <code>disabled</code> prop to item in the dropdown to <strong>style them as disabled</strong>.\r\n            </p>\r\n\r\n            <Dropdown as={ButtonGroup} className=\"mt-2\">\r\n                <Dropdown.Toggle>\r\n                    Disabled <i className=\"mdi mdi-chevron-down\"></i>\r\n                </Dropdown.Toggle>\r\n                <Dropdown.Menu>\r\n                    <Dropdown.Item>Regular link</Dropdown.Item>\r\n                    <Dropdown.Item disabled>Disabled link</Dropdown.Item>\r\n                    <Dropdown.Item>Another link</Dropdown.Item>\r\n                </Dropdown.Menu>\r\n            </Dropdown>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst DropdownWithText = () => {\r\n    return (\r\n        <div className=\"mt-5\">\r\n            <h5 className=\"mb-1\">Text</h5>\r\n            <p className=\"text-muted font-13 mb-2\">\r\n                Place any freeform text within a dropdown menu with text and use spacing utilities. Note that you’ll\r\n                likely need additional sizing styles to constrain the menu width.\r\n            </p>\r\n\r\n            <Dropdown as={ButtonGroup} className=\"mt-2\">\r\n                <Dropdown.Toggle>\r\n                    Text Dropdown <i className=\"mdi mdi-chevron-down\"></i>\r\n                </Dropdown.Toggle>\r\n                <Dropdown.Menu className=\"p-3 text-muted\" style={{ maxWidth: '200px' }}>\r\n                    <p>Some example text that's free-flowing within the dropdown menu.</p>\r\n                    <p className=\"mb-0\">And this is more example text.</p>\r\n                </Dropdown.Menu>\r\n            </Dropdown>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst Dropdowns = () => {\r\n    return (\r\n        <React.Fragment>\r\n            <PageTitle\r\n                breadCrumbItems={[\r\n                    { label: 'Base UI', path: '/ui/dropdowns' },\r\n                    { label: 'Dropdowns', path: '/ui/dropdowns', active: true },\r\n                ]}\r\n                title={'Dropdowns'}\r\n            />\r\n\r\n            <Row>\r\n                <Col xs={12}>\r\n                    <Card>\r\n                        <Card.Body>\r\n                            <h4 className=\"header-title\">Examples</h4>\r\n                            <p className=\"sub-header\">\r\n                                Toggle contextual overlays for displaying lists of links and more with the Bootstrap\r\n                                dropdown plugin.\r\n                            </p>\r\n\r\n                            <Row>\r\n                                <Col xl={6}>\r\n                                    <SingleButtonDropdown />\r\n                                    <ColorVariantButtonDropdown />\r\n                                    <DropendVariationDropdowns />\r\n                                    <DropupVariationDropdowns />\r\n                                    <ActiveItemDropdown />\r\n                                    <DropdownWithHeader />\r\n                                    <CustomDropdown />\r\n                                </Col>\r\n\r\n                                <Col xl={6}>\r\n                                    <SplitColorVariantButtonDropdown />\r\n                                    <ButtonDropdownSizes />\r\n                                    <DropstartVariationDropdowns />\r\n                                    <DropdownMenuAlignment />\r\n                                    <DisabledItemDropdown />\r\n                                    <DropdownWithText />\r\n                                </Col>\r\n                            </Row>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default Dropdowns;\r\n","import React from 'react';\r\nimport { Row, Col, Breadcrumb } from 'react-bootstrap';\r\nimport classNames from 'classnames';\r\n\r\n// custom hoook\r\nimport { useRedux } from '../hooks/';\r\n\r\n// constants\r\nimport { LayoutTypes } from '../constants/';\r\n\r\ninterface BreadcrumbItems {\r\n    label: string;\r\n    path: string;\r\n    active?: boolean;\r\n}\r\n\r\ninterface PageTitleProps {\r\n    breadCrumbItems: Array<BreadcrumbItems>;\r\n    title: string;\r\n}\r\n\r\n/**\r\n * PageTitle\r\n */\r\nconst PageTitle = (props: PageTitleProps) => {\r\n    const { appSelector } = useRedux();\r\n\r\n    const { layoutType } = appSelector((state) => ({\r\n        layoutType: state.Layout.layoutType,\r\n    }));\r\n\r\n    return (\r\n        <Row>\r\n            <Col xs={12}>\r\n                <div\r\n                    className={classNames('page-title-box', {\r\n                        'page-title-box-alt':\r\n                            layoutType === LayoutTypes.LAYOUT_HORIZONTAL || layoutType === LayoutTypes.LAYOUT_DETACHED,\r\n                    })}\r\n                >\r\n                    <h4 className=\"page-title\">{props.title}</h4>\r\n                    <div className=\"page-title-right\">\r\n                        <Breadcrumb listProps={{ className: 'm-0' }}>\r\n                            <Breadcrumb.Item href=\"/\">Minton</Breadcrumb.Item>\r\n\r\n                            {(props['breadCrumbItems'] || []).map((item, index) => {\r\n                                return item.active ? (\r\n                                    <Breadcrumb.Item active key={index}>\r\n                                        {item.label}\r\n                                    </Breadcrumb.Item>\r\n                                ) : (\r\n                                    <Breadcrumb.Item key={index} href={item.path}>\r\n                                        {item.label}\r\n                                    </Breadcrumb.Item>\r\n                                );\r\n                            })}\r\n                        </Breadcrumb>\r\n                    </div>\r\n                </div>\r\n            </Col>\r\n        </Row>\r\n    );\r\n};\r\n\r\nexport default PageTitle;\r\n","import * as React from 'react';\nimport classNames from 'classnames';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default (className => /*#__PURE__*/React.forwardRef((p, ref) => /*#__PURE__*/_jsx(\"div\", { ...p,\n  ref: ref,\n  className: classNames(p.className, className)\n})));","import * as React from 'react';\nconst context = /*#__PURE__*/React.createContext(null);\ncontext.displayName = 'CardHeaderContext';\nexport default context;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DEVICE_SIZES = ['xxl', 'xl', 'lg', 'md', 'sm', 'xs'];\nconst Row = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'row');\n  const sizePrefix = `${decoratedBsPrefix}-cols`;\n  const classes = [];\n  DEVICE_SIZES.forEach(brkPoint => {\n    const propValue = props[brkPoint];\n    delete props[brkPoint];\n    let cols;\n\n    if (propValue != null && typeof propValue === 'object') {\n      ({\n        cols\n      } = propValue);\n    } else {\n      cols = propValue;\n    }\n\n    const infix = brkPoint !== 'xs' ? `-${brkPoint}` : '';\n    if (cols != null) classes.push(`${sizePrefix}${infix}-${cols}`);\n  });\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, decoratedBsPrefix, ...classes)\n  });\n});\nRow.displayName = 'Row';\nexport default Row;","import classNames from 'classnames';\nimport * as React from 'react';\nimport Anchor from '@restart/ui/Anchor';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  active: false,\n  linkProps: {}\n};\nconst BreadcrumbItem = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  active,\n  children,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'li',\n  linkAs: LinkComponent = Anchor,\n  linkProps,\n  href,\n  title,\n  target,\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'breadcrumb-item');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(prefix, className, {\n      active\n    }),\n    \"aria-current\": active ? 'page' : undefined,\n    children: active ? children : /*#__PURE__*/_jsx(LinkComponent, { ...linkProps,\n      href: href,\n      title: title,\n      target: target,\n      children: children\n    })\n  });\n});\nBreadcrumbItem.displayName = 'BreadcrumbItem';\nBreadcrumbItem.defaultProps = defaultProps;\nexport default BreadcrumbItem;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport BreadcrumbItem from './BreadcrumbItem';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  label: 'breadcrumb',\n  listProps: {}\n};\nconst Breadcrumb = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  listProps,\n  children,\n  label,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'nav',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'breadcrumb');\n  return /*#__PURE__*/_jsx(Component, {\n    \"aria-label\": label,\n    className: className,\n    ref: ref,\n    ...props,\n    children: /*#__PURE__*/_jsx(\"ol\", { ...listProps,\n      className: classNames(prefix, listProps == null ? void 0 : listProps.className),\n      children: children\n    })\n  });\n});\nBreadcrumb.displayName = 'Breadcrumb';\nBreadcrumb.defaultProps = defaultProps;\nexport default Object.assign(Breadcrumb, {\n  Item: BreadcrumbItem\n});","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DEVICE_SIZES = ['xxl', 'xl', 'lg', 'md', 'sm', 'xs'];\nexport function useCol({\n  as,\n  bsPrefix,\n  className,\n  ...props\n}) {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'col');\n  const spans = [];\n  const classes = [];\n  DEVICE_SIZES.forEach(brkPoint => {\n    const propValue = props[brkPoint];\n    delete props[brkPoint];\n    let span;\n    let offset;\n    let order;\n\n    if (typeof propValue === 'object' && propValue != null) {\n      ({\n        span,\n        offset,\n        order\n      } = propValue);\n    } else {\n      span = propValue;\n    }\n\n    const infix = brkPoint !== 'xs' ? `-${brkPoint}` : '';\n    if (span) spans.push(span === true ? `${bsPrefix}${infix}` : `${bsPrefix}${infix}-${span}`);\n    if (order != null) classes.push(`order${infix}-${order}`);\n    if (offset != null) classes.push(`offset${infix}-${offset}`);\n  });\n  return [{ ...props,\n    className: classNames(className, ...spans, ...classes)\n  }, {\n    as,\n    bsPrefix,\n    spans\n  }];\n}\nconst Col = /*#__PURE__*/React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n(props, ref) => {\n  const [{\n    className,\n    ...colProps\n  }, {\n    as: Component = 'div',\n    bsPrefix,\n    spans\n  }] = useCol(props);\n  return /*#__PURE__*/_jsx(Component, { ...colProps,\n    ref: ref,\n    className: classNames(className, !spans.length && bsPrefix)\n  });\n});\nCol.displayName = 'Col';\nexport default Col;","/**\n * Returns the owner document of a given element.\n * \n * @param node the element\n */\nexport default function ownerDocument(node) {\n  return node && node.ownerDocument || document;\n}","import { useMemo } from 'react';\n\nvar toFnRef = function toFnRef(ref) {\n  return !ref || typeof ref === 'function' ? ref : function (value) {\n    ref.current = value;\n  };\n};\n\nexport function mergeRefs(refA, refB) {\n  var a = toFnRef(refA);\n  var b = toFnRef(refB);\n  return function (value) {\n    if (a) a(value);\n    if (b) b(value);\n  };\n}\n/**\n * Create and returns a single callback ref composed from two other Refs.\n *\n * ```tsx\n * const Button = React.forwardRef((props, ref) => {\n *   const [element, attachRef] = useCallbackRef<HTMLButtonElement>();\n *   const mergedRef = useMergedRefs(ref, attachRef);\n *\n *   return <button ref={mergedRef} {...props}/>\n * })\n * ```\n *\n * @param refA A Callback or mutable Ref\n * @param refB A Callback or mutable Ref\n * @category refs\n */\n\nfunction useMergedRefs(refA, refB) {\n  return useMemo(function () {\n    return mergeRefs(refA, refB);\n  }, [refA, refB]);\n}\n\nexport default useMergedRefs;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardImg = /*#__PURE__*/React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n({\n  bsPrefix,\n  className,\n  variant,\n  as: Component = 'img',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card-img');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(variant ? `${prefix}-${variant}` : prefix, className),\n    ...props\n  });\n});\nCardImg.displayName = 'CardImg';\nexport default CardImg;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport CardHeaderContext from './CardHeaderContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardHeader = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card-header');\n  const contextValue = useMemo(() => ({\n    cardHeaderBsPrefix: prefix\n  }), [prefix]);\n  return /*#__PURE__*/_jsx(CardHeaderContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(Component, {\n      ref: ref,\n      ...props,\n      className: classNames(className, prefix)\n    })\n  });\n});\nCardHeader.displayName = 'CardHeader';\nexport default CardHeader;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport divWithClassName from './divWithClassName';\nimport CardImg from './CardImg';\nimport CardHeader from './CardHeader';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DivStyledAsH5 = divWithClassName('h5');\nconst DivStyledAsH6 = divWithClassName('h6');\nconst CardBody = createWithBsPrefix('card-body');\nconst CardTitle = createWithBsPrefix('card-title', {\n  Component: DivStyledAsH5\n});\nconst CardSubtitle = createWithBsPrefix('card-subtitle', {\n  Component: DivStyledAsH6\n});\nconst CardLink = createWithBsPrefix('card-link', {\n  Component: 'a'\n});\nconst CardText = createWithBsPrefix('card-text', {\n  Component: 'p'\n});\nconst CardFooter = createWithBsPrefix('card-footer');\nconst CardImgOverlay = createWithBsPrefix('card-img-overlay');\nconst defaultProps = {\n  body: false\n};\nconst Card = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  bg,\n  text,\n  border,\n  body,\n  children,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, prefix, bg && `bg-${bg}`, text && `text-${text}`, border && `border-${border}`),\n    children: body ? /*#__PURE__*/_jsx(CardBody, {\n      children: children\n    }) : children\n  });\n});\nCard.displayName = 'Card';\nCard.defaultProps = defaultProps;\nexport default Object.assign(Card, {\n  Img: CardImg,\n  Title: CardTitle,\n  Subtitle: CardSubtitle,\n  Body: CardBody,\n  Link: CardLink,\n  Text: CardText,\n  Header: CardHeader,\n  Footer: CardFooter,\n  ImgOverlay: CardImgOverlay\n});","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\n/**\n * Similar to invariant but only logs a warning if the condition is not met.\n * This can be used to log issues in development environments in critical\n * paths. Removing the logging code for production environments will keep the\n * same logic and follow the same code paths.\n */\n\nvar __DEV__ = process.env.NODE_ENV !== 'production';\n\nvar warning = function() {};\n\nif (__DEV__) {\n  var printWarning = function printWarning(format, args) {\n    var len = arguments.length;\n    args = new Array(len > 1 ? len - 1 : 0);\n    for (var key = 1; key < len; key++) {\n      args[key - 1] = arguments[key];\n    }\n    var argIndex = 0;\n    var message = 'Warning: ' +\n      format.replace(/%s/g, function() {\n        return args[argIndex++];\n      });\n    if (typeof console !== 'undefined') {\n      console.error(message);\n    }\n    try {\n      // --- Welcome to debugging React ---\n      // This error was thrown as a convenience so that you can use this stack\n      // to find the callsite that caused this warning to fire.\n      throw new Error(message);\n    } catch (x) {}\n  }\n\n  warning = function(condition, format, args) {\n    var len = arguments.length;\n    args = new Array(len > 2 ? len - 2 : 0);\n    for (var key = 2; key < len; key++) {\n      args[key - 2] = arguments[key];\n    }\n    if (format === undefined) {\n      throw new Error(\n          '`warning(condition, format, ...args)` requires a warning ' +\n          'message argument'\n      );\n    }\n    if (!condition) {\n      printWarning.apply(null, [format].concat(args));\n    }\n  };\n}\n\nmodule.exports = warning;\n","export default !!(typeof window !== 'undefined' && window.document && window.document.createElement);","/* eslint-disable no-return-assign */\nimport canUseDOM from './canUseDOM';\nexport var optionsSupported = false;\nexport var onceSupported = false;\n\ntry {\n  var options = {\n    get passive() {\n      return optionsSupported = true;\n    },\n\n    get once() {\n      // eslint-disable-next-line no-multi-assign\n      return onceSupported = optionsSupported = true;\n    }\n\n  };\n\n  if (canUseDOM) {\n    window.addEventListener('test', options, options);\n    window.removeEventListener('test', options, true);\n  }\n} catch (e) {\n  /* */\n}\n\n/**\n * An `addEventListener` ponyfill, supports the `once` option\n * \n * @param node the element\n * @param eventName the event name\n * @param handle the handler\n * @param options event options\n */\nfunction addEventListener(node, eventName, handler, options) {\n  if (options && typeof options !== 'boolean' && !onceSupported) {\n    var once = options.once,\n        capture = options.capture;\n    var wrappedHandler = handler;\n\n    if (!onceSupported && once) {\n      wrappedHandler = handler.__once || function onceHandler(event) {\n        this.removeEventListener(eventName, onceHandler, capture);\n        handler.call(this, event);\n      };\n\n      handler.__once = wrappedHandler;\n    }\n\n    node.addEventListener(eventName, wrappedHandler, optionsSupported ? options : capture);\n  }\n\n  node.addEventListener(eventName, handler, options);\n}\n\nexport default addEventListener;","import addEventListener from './addEventListener';\nimport removeEventListener from './removeEventListener';\n\nfunction listen(node, eventName, handler, options) {\n  addEventListener(node, eventName, handler, options);\n  return function () {\n    removeEventListener(node, eventName, handler, options);\n  };\n}\n\nexport default listen;","import * as React from 'react';\nconst context = /*#__PURE__*/React.createContext(null);\ncontext.displayName = 'InputGroupContext';\nexport default context;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useButtonProps } from '@restart/ui/Button';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  variant: 'primary',\n  active: false,\n  disabled: false\n};\nconst Button = /*#__PURE__*/React.forwardRef(({\n  as,\n  bsPrefix,\n  variant,\n  size,\n  active,\n  className,\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'btn');\n  const [buttonProps, {\n    tagName\n  }] = useButtonProps({\n    tagName: as,\n    ...props\n  });\n  const Component = tagName;\n  return /*#__PURE__*/_jsx(Component, { ...props,\n    ...buttonProps,\n    ref: ref,\n    className: classNames(className, prefix, active && 'active', variant && `${prefix}-${variant}`, size && `${prefix}-${size}`, props.href && props.disabled && 'disabled')\n  });\n});\nButton.displayName = 'Button';\nButton.defaultProps = defaultProps;\nexport default Button;","/**\n * A `removeEventListener` ponyfill\n * \n * @param node the element\n * @param eventName the event name\n * @param handle the handler\n * @param options event options\n */\nfunction removeEventListener(node, eventName, handler, options) {\n  var capture = options && typeof options !== 'boolean' ? options.capture : options;\n  node.removeEventListener(eventName, handler, capture);\n\n  if (handler.__once) {\n    node.removeEventListener(eventName, handler.__once, capture);\n  }\n}\n\nexport default removeEventListener;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  vertical: false,\n  role: 'group'\n};\nconst ButtonGroup = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  size,\n  vertical,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...rest\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'btn-group');\n  let baseClass = prefix;\n  if (vertical) baseClass = `${prefix}-vertical`;\n  return /*#__PURE__*/_jsx(Component, { ...rest,\n    ref: ref,\n    className: classNames(className, baseClass, size && `${prefix}-${size}`)\n  });\n});\nButtonGroup.displayName = 'ButtonGroup';\nButtonGroup.defaultProps = defaultProps;\nexport default ButtonGroup;"],"sourceRoot":""}