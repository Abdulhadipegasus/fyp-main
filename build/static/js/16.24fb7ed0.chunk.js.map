{"version":3,"sources":["../node_modules/@restart/ui/node_modules/@restart/hooks/esm/useCommittedRef.js","../node_modules/@restart/ui/node_modules/@restart/hooks/esm/useEventCallback.js","../node_modules/dom-helpers/esm/camelize.js","../node_modules/react-bootstrap/esm/createWithBsPrefix.js","../node_modules/@restart/ui/node_modules/@restart/hooks/esm/useEventListener.js","../node_modules/@restart/ui/node_modules/@restart/hooks/esm/useMounted.js","../node_modules/@restart/ui/node_modules/@restart/hooks/esm/usePrevious.js","../node_modules/@restart/ui/node_modules/@restart/hooks/esm/useResizeObserver.js","../node_modules/@restart/ui/esm/Anchor.js","../node_modules/@restart/ui/node_modules/@restart/hooks/esm/useCallbackRef.js","../node_modules/@restart/ui/esm/Button.js","../node_modules/@restart/ui/node_modules/@restart/hooks/esm/useGlobalListener.js","../node_modules/react-bootstrap/esm/divWithClassName.js","../node_modules/react-bootstrap/esm/CardHeaderContext.js","../node_modules/@restart/ui/node_modules/@restart/hooks/esm/useIsomorphicEffect.js","../node_modules/react-bootstrap/esm/Row.js","../node_modules/react-bootstrap/esm/BreadcrumbItem.js","../node_modules/react-bootstrap/esm/Breadcrumb.js","../node_modules/react-bootstrap/esm/Col.js","../node_modules/react-bootstrap/esm/CardImg.js","../node_modules/react-bootstrap/esm/CardHeader.js","../node_modules/react-bootstrap/esm/Card.js","../../../src/utils/isBrowser.js","../../../src/utils/debounce.js","../../../src/utils/isFunction.js","../../../src/utils/getStyleComputedProperty.js","../../../src/utils/getParentNode.js","../../../src/utils/getScrollParent.js","../../../src/utils/getReferenceNode.js","../../../src/utils/isIE.js","../../../src/utils/getOffsetParent.js","../../../src/utils/getRoot.js","../../../src/utils/findCommonOffsetParent.js","../../../src/utils/isOffsetContainer.js","../../../src/utils/getScroll.js","../../../src/utils/includeScroll.js","../../../src/utils/getBordersSize.js","../../../src/utils/getWindowSizes.js","../../../src/utils/getClientRect.js","../../../src/utils/getBoundingClientRect.js","../../../src/utils/getOffsetRectRelativeToArbitraryNode.js","../../../src/utils/getViewportOffsetRectRelativeToArtbitraryNode.js","../../../src/utils/isFixed.js","../../../src/utils/getFixedPositionOffsetParent.js","../../../src/utils/getBoundaries.js","../../../src/utils/computeAutoPlacement.js","../../../src/utils/getReferenceOffsets.js","../../../src/utils/getOuterSizes.js","../../../src/utils/getOppositePlacement.js","../../../src/utils/getPopperOffsets.js","../../../src/utils/find.js","../../../src/utils/runModifiers.js","../../../src/utils/findIndex.js","../../../src/methods/update.js","../../../src/utils/isModifierEnabled.js","../../../src/utils/getSupportedPropertyName.js","../../../src/methods/destroy.js","../../../src/utils/getWindow.js","../../../src/utils/setupEventListeners.js","../../../src/methods/enableEventListeners.js","../../../src/methods/disableEventListeners.js","../../../src/utils/removeEventListeners.js","../../../src/utils/isNumeric.js","../../../src/utils/setStyles.js","../../../src/modifiers/computeStyle.js","../../../src/utils/isModifierRequired.js","../../../src/methods/placements.js","../../../src/utils/clockwise.js","../../../src/modifiers/flip.js","../../../src/modifiers/offset.js","../../../src/modifiers/index.js","../../../src/modifiers/shift.js","../../../src/modifiers/preventOverflow.js","../../../src/modifiers/keepTogether.js","../../../src/modifiers/arrow.js","../../../src/utils/getOppositeVariation.js","../../../src/modifiers/inner.js","../../../src/modifiers/hide.js","../../../src/utils/getRoundedOffsets.js","../../../src/modifiers/applyStyle.js","../../../src/utils/setAttributes.js","../../../src/methods/defaults.js","../../../src/index.js"],"names":["useCommittedRef","value","ref","useRef","useEffect","current","useEventCallback","fn","useCallback","apply","arguments","rHyphen","pascalCase","str","toUpperCase","string","replace","_","chr","slice","createWithBsPrefix","prefix","displayName","Component","defaultProps","length","undefined","BsComponent","React","_ref","className","bsPrefix","as","Tag","props","resolvedPrefix","useBootstrapPrefix","_jsx","classNames","useEventListener","eventTarget","event","listener","capture","handler","target","addEventListener","removeEventListener","useMounted","mounted","isMounted","usePrevious","WeakMap","_excluded","Anchor","onKeyDown","source","excluded","key","i","sourceKeys","Object","keys","indexOf","_objectWithoutPropertiesLoose","buttonProps","useButtonProps","assign","tagName","handleKeyDown","e","href","trim","role","useCallbackRef","useState","_ref2","disabled","rel","onClick","tabIndex","type","meta","handleClick","isTrivialHref","preventDefault","stopPropagation","Button","asProp","useGlobalListener","documentTarget","document","p","context","isReactNative","global","navigator","product","isDOM","useLayoutEffect","DEVICE_SIZES","Row","decoratedBsPrefix","sizePrefix","concat","classes","forEach","brkPoint","propValue","cols","infix","push","BreadcrumbItem","active","children","linkAs","LinkComponent","linkProps","title","Breadcrumb","listProps","label","Item","useCol","spans","span","offset","order","Col","colProps","CardImg","variant","CardHeader","contextValue","useMemo","cardHeaderBsPrefix","CardHeaderContext","Provider","DivStyledAsH5","divWithClassName","DivStyledAsH6","CardBody","CardTitle","CardSubtitle","CardLink","CardText","CardFooter","CardImgOverlay","Card","bg","text","border","body","Img","Title","Subtitle","Body","Link","Text","Header","Footer","ImgOverlay","isBrowser","window","timeoutDuration","longerTimeoutBrowsers","userAgent","debounce","Promise","called","resolve","then","scheduled","isFunction","functionToCheck","toString","call","getStyleComputedProperty","element","property","nodeType","css","ownerDocument","defaultView","getComputedStyle","getParentNode","nodeName","parentNode","host","getScrollParent","overflow","_getStyleComputedProp","overflowX","overflowY","test","getReferenceNode","reference","referenceNode","isIE11","MSInputMethodContext","documentMode","isIE10","isIE","version","getOffsetParent","documentElement","noOffsetParent","offsetParent","nextElementSibling","getRoot","node","findCommonOffsetParent","element1","element2","compareDocumentPosition","Node","DOCUMENT_POSITION_FOLLOWING","start","end","range","createRange","setStart","setEnd","commonAncestorContainer","contains","firstElementChild","isOffsetContainer","element1root","getScroll","side","upperSide","html","scrollingElement","includeScroll","rect","subtract","scrollTop","scrollLeft","modifier","top","bottom","left","right","getBordersSize","styles","axis","sideA","sideB","parseFloat","getSize","computedStyle","Math","max","parseInt","getWindowSizes","getClientRect","offsets","width","height","getBoundingClientRect","result","sizes","clientWidth","clientHeight","horizScrollbar","offsetWidth","vertScrollbar","offsetHeight","getOffsetRectRelativeToArbitraryNode","parent","fixedPosition","isHTML","childrenRect","parentRect","scrollParent","borderTopWidth","borderLeftWidth","marginTop","marginLeft","getViewportOffsetRectRelativeToArtbitraryNode","excludeScroll","relativeOffset","innerWidth","innerHeight","isFixed","getFixedPositionOffsetParent","parentElement","el","getBoundaries","popper","padding","boundariesElement","boundaries","boundariesNode","_getWindowSizes","isPaddingNumber","getArea","computeAutoPlacement","placement","refRect","rects","sortedAreas","map","sort","a","b","area","filteredAreas","filter","computedPlacement","variation","split","getReferenceOffsets","state","commonOffsetParent","getOuterSizes","x","marginBottom","y","marginRight","getOppositePlacement","hash","matched","getPopperOffsets","referenceOffsets","popperRect","popperOffsets","isHoriz","mainSide","secondarySide","measurement","secondaryMeasurement","find","arr","check","Array","prototype","runModifiers","modifiers","data","ends","prop","findIndex","cur","match","obj","warn","enabled","update","this","isDestroyed","options","positionFixed","flip","originalPlacement","position","isCreated","onUpdate","onCreate","isModifierEnabled","modifierName","some","name","getSupportedPropertyName","prefixes","upperProp","charAt","toCheck","style","destroy","removeAttribute","willChange","disableEventListeners","removeOnDestroy","removeChild","getWindow","attachToScrollParents","callback","scrollParents","isBody","passive","setupEventListeners","updateBound","scrollElement","eventsEnabled","enableEventListeners","scheduleUpdate","isNumeric","n","isNaN","isFinite","setStyles","unit","isFirefox","isModifierRequired","requestingName","requestedName","requesting","isRequired","_requesting","requested","placements","validPlacements","clockwise","counter","index","reverse","BEHAVIORS","parseOffset","basePlacement","useHeight","fragments","frag","divider","search","splitRegex","ops","op","mergeWithPrevious","reduce","toValue","index2","shiftvariation","_data$offsets","isVertical","shiftOffsets","_extends","instance","transformProp","popperStyles","transform","priority","escapeWithReference","min","floor","opSide","arrowElement","querySelector","len","sideCapitalized","toLowerCase","altSide","arrowElementSize","center","popperMarginSide","popperBorderSide","sideValue","arrow","defineProperty","_data$offsets$arrow","round","flipped","placementOpposite","flipOrder","behavior","step","refOffsets","overlapsRef","overflowsLeft","overflowsRight","overflowsTop","overflowsBottom","overflowsBoundaries","flippedVariationByRef","flipVariations","flippedVariationByContent","flipVariationsByContent","flippedVariation","getOppositeVariation","subtractLength","bound","hide","attributes","legacyGpuAccelerationOption","gpuAcceleration","offsetParentRect","shouldRound","noRound","v","referenceWidth","popperWidth","isVariation","horizontalToInteger","verticalToInteger","getRoundedOffsets","devicePixelRatio","prefixedProperty","invertTop","invertLeft","arrowStyles","setAttribute","modifierOptions","Defaults","Popper","requestAnimationFrame","_this","bind","jquery","onLoad","Utils","PopperUtils"],"mappings":"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","file":"static/js/16.24fb7ed0.chunk.js","sourcesContent":["import { useEffect, useRef } from 'react';\n/**\n * Creates a `Ref` whose value is updated in an effect, ensuring the most recent\n * value is the one rendered with. Generally only required for Concurrent mode usage\n * where previous work in `render()` may be discarded befor being used.\n *\n * This is safe to access in an event handler.\n *\n * @param value The `Ref` value\n */\n\nfunction useCommittedRef(value) {\n  var ref = useRef(value);\n  useEffect(function () {\n    ref.current = value;\n  }, [value]);\n  return ref;\n}\n\nexport default useCommittedRef;","import { useCallback } from 'react';\nimport useCommittedRef from './useCommittedRef';\nexport default function useEventCallback(fn) {\n  var ref = useCommittedRef(fn);\n  return useCallback(function () {\n    return ref.current && ref.current.apply(ref, arguments);\n  }, [ref]);\n}","var rHyphen = /-(.)/g;\nexport default function camelize(string) {\n  return string.replace(rHyphen, function (_, chr) {\n    return chr.toUpperCase();\n  });\n}","import classNames from 'classnames';\nimport camelize from 'dom-helpers/camelize';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst pascalCase = str => str[0].toUpperCase() + camelize(str).slice(1);\n\n// TODO: emstricten & fix the typing here! `createWithBsPrefix<TElementType>...`\nexport default function createWithBsPrefix(prefix, {\n  displayName = pascalCase(prefix),\n  Component,\n  defaultProps\n} = {}) {\n  const BsComponent = /*#__PURE__*/React.forwardRef(({\n    className,\n    bsPrefix,\n    as: Tag = Component || 'div',\n    ...props\n  }, ref) => {\n    const resolvedPrefix = useBootstrapPrefix(bsPrefix, prefix);\n    return /*#__PURE__*/_jsx(Tag, {\n      ref: ref,\n      className: classNames(className, resolvedPrefix),\n      ...props\n    });\n  });\n  BsComponent.defaultProps = defaultProps;\n  BsComponent.displayName = displayName;\n  return BsComponent;\n}","import { useEffect } from 'react';\nimport useEventCallback from './useEventCallback';\n\n/**\n * Attaches an event handler outside directly to specified DOM element\n * bypassing the react synthetic event system.\n *\n * @param element The target to listen for events on\n * @param event The DOM event name\n * @param handler An event handler\n * @param capture Whether or not to listen during the capture event phase\n */\nexport default function useEventListener(eventTarget, event, listener, capture) {\n  if (capture === void 0) {\n    capture = false;\n  }\n\n  var handler = useEventCallback(listener);\n  useEffect(function () {\n    var target = typeof eventTarget === 'function' ? eventTarget() : eventTarget;\n    target.addEventListener(event, handler, capture);\n    return function () {\n      return target.removeEventListener(event, handler, capture);\n    };\n  }, [eventTarget]);\n}","import { useRef, useEffect } from 'react';\n/**\n * Track whether a component is current mounted. Generally less preferable than\n * properlly canceling effects so they don't run after a component is unmounted,\n * but helpful in cases where that isn't feasible, such as a `Promise` resolution.\n *\n * @returns a function that returns the current isMounted state of the component\n *\n * ```ts\n * const [data, setData] = useState(null)\n * const isMounted = useMounted()\n *\n * useEffect(() => {\n *   fetchdata().then((newData) => {\n *      if (isMounted()) {\n *        setData(newData);\n *      }\n *   })\n * })\n * ```\n */\n\nexport default function useMounted() {\n  var mounted = useRef(true);\n  var isMounted = useRef(function () {\n    return mounted.current;\n  });\n  useEffect(function () {\n    return function () {\n      mounted.current = false;\n    };\n  }, []);\n  return isMounted.current;\n}","import { useEffect, useRef } from 'react';\n/**\n * Store the last of some value. Tracked via a `Ref` only updating it\n * after the component renders.\n *\n * Helpful if you need to compare a prop value to it's previous value during render.\n *\n * ```ts\n * function Component(props) {\n *   const lastProps = usePrevious(props)\n *\n *   if (lastProps.foo !== props.foo)\n *     resetValueFromProps(props.foo)\n * }\n * ```\n *\n * @param value the value to track\n */\n\nexport default function usePrevious(value) {\n  var ref = useRef(null);\n  useEffect(function () {\n    ref.current = value;\n  });\n  return ref.current;\n}","import { useState } from 'react';\nimport useEffect from './useIsomorphicEffect';\nvar targetMap = new WeakMap();\nvar resizeObserver;\n\nfunction getResizeObserver() {\n  // eslint-disable-next-line no-return-assign\n  return resizeObserver = resizeObserver || new window.ResizeObserver(function (entries) {\n    entries.forEach(function (entry) {\n      var handler = targetMap.get(entry.target);\n      if (handler) handler(entry.contentRect);\n    });\n  });\n}\n/**\n * Efficiently observe size changes on an element. Depends on the `ResizeObserver` api,\n * and polyfills are needed in older browsers.\n *\n * ```ts\n * const [ref, attachRef] = useCallbackRef(null);\n *\n * const rect = useResizeObserver(ref);\n *\n * return (\n *  <div ref={attachRef}>\n *    {JSON.stringify(rect)}\n *  </div>\n * )\n * ```\n *\n * @param element The DOM element to observe\n */\n\n\nexport default function useResizeObserver(element) {\n  var _useState = useState(null),\n      rect = _useState[0],\n      setRect = _useState[1];\n\n  useEffect(function () {\n    if (!element) return;\n    getResizeObserver().observe(element);\n    setRect(element.getBoundingClientRect());\n    targetMap.set(element, function (rect) {\n      setRect(rect);\n    });\n    return function () {\n      targetMap.delete(element);\n    };\n  }, [element]);\n  return rect;\n}","const _excluded = [\"onKeyDown\"];\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* eslint-disable jsx-a11y/no-static-element-interactions */\n\n/* eslint-disable jsx-a11y/anchor-has-content */\nimport * as React from 'react';\nimport { useEventCallback } from '@restart/hooks';\nimport { useButtonProps } from './Button';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function isTrivialHref(href) {\n  return !href || href.trim() === '#';\n}\n\n/**\n * An generic `<a>` component that covers a few A11y cases, ensuring that\n * cases where the `href` is missing or trivial like \"#\" are treated like buttons.\n */\nconst Anchor = /*#__PURE__*/React.forwardRef((_ref, ref) => {\n  let {\n    onKeyDown\n  } = _ref,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  const [buttonProps] = useButtonProps(Object.assign({\n    tagName: 'a'\n  }, props));\n  const handleKeyDown = useEventCallback(e => {\n    buttonProps.onKeyDown(e);\n    onKeyDown == null ? void 0 : onKeyDown(e);\n  });\n\n  if (isTrivialHref(props.href) && !props.role || props.role === 'button') {\n    return /*#__PURE__*/_jsx(\"a\", Object.assign({\n      ref: ref\n    }, props, buttonProps, {\n      onKeyDown: handleKeyDown\n    }));\n  }\n\n  return /*#__PURE__*/_jsx(\"a\", Object.assign({\n    ref: ref\n  }, props, {\n    onKeyDown: onKeyDown\n  }));\n});\nAnchor.displayName = 'Anchor';\nexport default Anchor;","import { useState } from 'react';\n/**\n * A convenience hook around `useState` designed to be paired with\n * the component [callback ref](https://reactjs.org/docs/refs-and-the-dom.html#callback-refs) api.\n * Callback refs are useful over `useRef()` when you need to respond to the ref being set\n * instead of lazily accessing it in an effect.\n *\n * ```ts\n * const [element, attachRef] = useCallbackRef<HTMLDivElement>()\n *\n * useEffect(() => {\n *   if (!element) return\n *\n *   const calendar = new FullCalendar.Calendar(element)\n *\n *   return () => {\n *     calendar.destroy()\n *   }\n * }, [element])\n *\n * return <div ref={attachRef} />\n * ```\n *\n * @category refs\n */\n\nexport default function useCallbackRef() {\n  return useState(null);\n}","const _excluded = [\"as\", \"disabled\"];\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function isTrivialHref(href) {\n  return !href || href.trim() === '#';\n}\nexport function useButtonProps({\n  tagName,\n  disabled,\n  href,\n  target,\n  rel,\n  onClick,\n  tabIndex = 0,\n  type\n}) {\n  if (!tagName) {\n    if (href != null || target != null || rel != null) {\n      tagName = 'a';\n    } else {\n      tagName = 'button';\n    }\n  }\n\n  const meta = {\n    tagName\n  };\n\n  if (tagName === 'button') {\n    return [{\n      type: type || 'button',\n      disabled\n    }, meta];\n  }\n\n  const handleClick = event => {\n    if (disabled || tagName === 'a' && isTrivialHref(href)) {\n      event.preventDefault();\n    }\n\n    if (disabled) {\n      event.stopPropagation();\n      return;\n    }\n\n    onClick == null ? void 0 : onClick(event);\n  };\n\n  const handleKeyDown = event => {\n    if (event.key === ' ') {\n      event.preventDefault();\n      handleClick(event);\n    }\n  };\n\n  return [{\n    role: 'button',\n    // explicitly undefined so that it overrides the props disabled in a spread\n    // e.g. <Tag {...props} {...hookProps} />\n    disabled: undefined,\n    tabIndex: disabled ? undefined : tabIndex,\n    href: tagName === 'a' && disabled ? undefined : href,\n    target: tagName === 'a' ? target : undefined,\n    'aria-disabled': !disabled ? undefined : disabled,\n    rel: tagName === 'a' ? rel : undefined,\n    onClick: handleClick,\n    onKeyDown: handleKeyDown\n  }, meta];\n}\nconst Button = /*#__PURE__*/React.forwardRef((_ref, ref) => {\n  let {\n    as: asProp,\n    disabled\n  } = _ref,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  const [buttonProps, {\n    tagName: Component\n  }] = useButtonProps(Object.assign({\n    tagName: asProp,\n    disabled\n  }, props));\n  return /*#__PURE__*/_jsx(Component, Object.assign({}, props, buttonProps, {\n    ref: ref\n  }));\n});\nButton.displayName = 'Button';\nexport default Button;","import useEventListener from './useEventListener';\nimport { useCallback } from 'react';\n\n/**\n * Attaches an event handler outside directly to the `document`,\n * bypassing the react synthetic event system.\n *\n * ```ts\n * useGlobalListener('keydown', (event) => {\n *  console.log(event.key)\n * })\n * ```\n *\n * @param event The DOM event name\n * @param handler An event handler\n * @param capture Whether or not to listen during the capture event phase\n */\nexport default function useGlobalListener(event, handler, capture) {\n  if (capture === void 0) {\n    capture = false;\n  }\n\n  var documentTarget = useCallback(function () {\n    return document;\n  }, []);\n  return useEventListener(documentTarget, event, handler, capture);\n}","import * as React from 'react';\nimport classNames from 'classnames';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default (className => /*#__PURE__*/React.forwardRef((p, ref) => /*#__PURE__*/_jsx(\"div\", { ...p,\n  ref: ref,\n  className: classNames(p.className, className)\n})));","import * as React from 'react';\nconst context = /*#__PURE__*/React.createContext(null);\ncontext.displayName = 'CardHeaderContext';\nexport default context;","import { useEffect, useLayoutEffect } from 'react';\nvar isReactNative = typeof global !== 'undefined' && // @ts-ignore\nglobal.navigator && // @ts-ignore\nglobal.navigator.product === 'ReactNative';\nvar isDOM = typeof document !== 'undefined';\n/**\n * Is `useLayoutEffect` in a DOM or React Native environment, otherwise resolves to useEffect\n * Only useful to avoid the console warning.\n *\n * PREFER `useEffect` UNLESS YOU KNOW WHAT YOU ARE DOING.\n *\n * @category effects\n */\n\nexport default isDOM || isReactNative ? useLayoutEffect : useEffect;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DEVICE_SIZES = ['xxl', 'xl', 'lg', 'md', 'sm', 'xs'];\nconst Row = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'row');\n  const sizePrefix = `${decoratedBsPrefix}-cols`;\n  const classes = [];\n  DEVICE_SIZES.forEach(brkPoint => {\n    const propValue = props[brkPoint];\n    delete props[brkPoint];\n    let cols;\n\n    if (propValue != null && typeof propValue === 'object') {\n      ({\n        cols\n      } = propValue);\n    } else {\n      cols = propValue;\n    }\n\n    const infix = brkPoint !== 'xs' ? `-${brkPoint}` : '';\n    if (cols != null) classes.push(`${sizePrefix}${infix}-${cols}`);\n  });\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, decoratedBsPrefix, ...classes)\n  });\n});\nRow.displayName = 'Row';\nexport default Row;","import classNames from 'classnames';\nimport * as React from 'react';\nimport Anchor from '@restart/ui/Anchor';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  active: false,\n  linkProps: {}\n};\nconst BreadcrumbItem = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  active,\n  children,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'li',\n  linkAs: LinkComponent = Anchor,\n  linkProps,\n  href,\n  title,\n  target,\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'breadcrumb-item');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(prefix, className, {\n      active\n    }),\n    \"aria-current\": active ? 'page' : undefined,\n    children: active ? children : /*#__PURE__*/_jsx(LinkComponent, { ...linkProps,\n      href: href,\n      title: title,\n      target: target,\n      children: children\n    })\n  });\n});\nBreadcrumbItem.displayName = 'BreadcrumbItem';\nBreadcrumbItem.defaultProps = defaultProps;\nexport default BreadcrumbItem;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport BreadcrumbItem from './BreadcrumbItem';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  label: 'breadcrumb',\n  listProps: {}\n};\nconst Breadcrumb = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  listProps,\n  children,\n  label,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'nav',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'breadcrumb');\n  return /*#__PURE__*/_jsx(Component, {\n    \"aria-label\": label,\n    className: className,\n    ref: ref,\n    ...props,\n    children: /*#__PURE__*/_jsx(\"ol\", { ...listProps,\n      className: classNames(prefix, listProps == null ? void 0 : listProps.className),\n      children: children\n    })\n  });\n});\nBreadcrumb.displayName = 'Breadcrumb';\nBreadcrumb.defaultProps = defaultProps;\nexport default Object.assign(Breadcrumb, {\n  Item: BreadcrumbItem\n});","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DEVICE_SIZES = ['xxl', 'xl', 'lg', 'md', 'sm', 'xs'];\nexport function useCol({\n  as,\n  bsPrefix,\n  className,\n  ...props\n}) {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'col');\n  const spans = [];\n  const classes = [];\n  DEVICE_SIZES.forEach(brkPoint => {\n    const propValue = props[brkPoint];\n    delete props[brkPoint];\n    let span;\n    let offset;\n    let order;\n\n    if (typeof propValue === 'object' && propValue != null) {\n      ({\n        span,\n        offset,\n        order\n      } = propValue);\n    } else {\n      span = propValue;\n    }\n\n    const infix = brkPoint !== 'xs' ? `-${brkPoint}` : '';\n    if (span) spans.push(span === true ? `${bsPrefix}${infix}` : `${bsPrefix}${infix}-${span}`);\n    if (order != null) classes.push(`order${infix}-${order}`);\n    if (offset != null) classes.push(`offset${infix}-${offset}`);\n  });\n  return [{ ...props,\n    className: classNames(className, ...spans, ...classes)\n  }, {\n    as,\n    bsPrefix,\n    spans\n  }];\n}\nconst Col = /*#__PURE__*/React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n(props, ref) => {\n  const [{\n    className,\n    ...colProps\n  }, {\n    as: Component = 'div',\n    bsPrefix,\n    spans\n  }] = useCol(props);\n  return /*#__PURE__*/_jsx(Component, { ...colProps,\n    ref: ref,\n    className: classNames(className, !spans.length && bsPrefix)\n  });\n});\nCol.displayName = 'Col';\nexport default Col;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardImg = /*#__PURE__*/React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n({\n  bsPrefix,\n  className,\n  variant,\n  as: Component = 'img',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card-img');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(variant ? `${prefix}-${variant}` : prefix, className),\n    ...props\n  });\n});\nCardImg.displayName = 'CardImg';\nexport default CardImg;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport CardHeaderContext from './CardHeaderContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardHeader = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card-header');\n  const contextValue = useMemo(() => ({\n    cardHeaderBsPrefix: prefix\n  }), [prefix]);\n  return /*#__PURE__*/_jsx(CardHeaderContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(Component, {\n      ref: ref,\n      ...props,\n      className: classNames(className, prefix)\n    })\n  });\n});\nCardHeader.displayName = 'CardHeader';\nexport default CardHeader;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport divWithClassName from './divWithClassName';\nimport CardImg from './CardImg';\nimport CardHeader from './CardHeader';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DivStyledAsH5 = divWithClassName('h5');\nconst DivStyledAsH6 = divWithClassName('h6');\nconst CardBody = createWithBsPrefix('card-body');\nconst CardTitle = createWithBsPrefix('card-title', {\n  Component: DivStyledAsH5\n});\nconst CardSubtitle = createWithBsPrefix('card-subtitle', {\n  Component: DivStyledAsH6\n});\nconst CardLink = createWithBsPrefix('card-link', {\n  Component: 'a'\n});\nconst CardText = createWithBsPrefix('card-text', {\n  Component: 'p'\n});\nconst CardFooter = createWithBsPrefix('card-footer');\nconst CardImgOverlay = createWithBsPrefix('card-img-overlay');\nconst defaultProps = {\n  body: false\n};\nconst Card = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  bg,\n  text,\n  border,\n  body,\n  children,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, prefix, bg && `bg-${bg}`, text && `text-${text}`, border && `border-${border}`),\n    children: body ? /*#__PURE__*/_jsx(CardBody, {\n      children: children\n    }) : children\n  });\n});\nCard.displayName = 'Card';\nCard.defaultProps = defaultProps;\nexport default Object.assign(Card, {\n  Img: CardImg,\n  Title: CardTitle,\n  Subtitle: CardSubtitle,\n  Body: CardBody,\n  Link: CardLink,\n  Text: CardText,\n  Header: CardHeader,\n  Footer: CardFooter,\n  ImgOverlay: CardImgOverlay\n});","export default typeof window !== 'undefined' && typeof document !== 'undefined' && typeof navigator !== 'undefined';\n","import isBrowser from './isBrowser';\n\nconst timeoutDuration = (function(){\n  const longerTimeoutBrowsers = ['Edge', 'Trident', 'Firefox'];\n  for (let i = 0; i < longerTimeoutBrowsers.length; i += 1) {\n    if (isBrowser && navigator.userAgent.indexOf(longerTimeoutBrowsers[i]) >= 0) {\n      return 1;\n    }\n  }\n  return 0;\n}());\n\nexport function microtaskDebounce(fn) {\n  let called = false\n  return () => {\n    if (called) {\n      return\n    }\n    called = true\n    window.Promise.resolve().then(() => {\n      called = false\n      fn()\n    })\n  }\n}\n\nexport function taskDebounce(fn) {\n  let scheduled = false;\n  return () => {\n    if (!scheduled) {\n      scheduled = true;\n      setTimeout(() => {\n        scheduled = false;\n        fn();\n      }, timeoutDuration);\n    }\n  };\n}\n\nconst supportsMicroTasks = isBrowser && window.Promise\n\n\n/**\n* Create a debounced version of a method, that's asynchronously deferred\n* but called in the minimum time possible.\n*\n* @method\n* @memberof Popper.Utils\n* @argument {Function} fn\n* @returns {Function}\n*/\nexport default (supportsMicroTasks\n  ? microtaskDebounce\n  : taskDebounce);\n","/**\n * Check if the given variable is a function\n * @method\n * @memberof Popper.Utils\n * @argument {Any} functionToCheck - variable to check\n * @returns {Boolean} answer to: is a function?\n */\nexport default function isFunction(functionToCheck) {\n  const getType = {};\n  return (\n    functionToCheck &&\n    getType.toString.call(functionToCheck) === '[object Function]'\n  );\n}\n","/**\n * Get CSS computed property of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Eement} element\n * @argument {String} property\n */\nexport default function getStyleComputedProperty(element, property) {\n  if (element.nodeType !== 1) {\n    return [];\n  }\n  // NOTE: 1 DOM access here\n  const window = element.ownerDocument.defaultView;\n  const css = window.getComputedStyle(element, null);\n  return property ? css[property] : css;\n}\n","/**\n * Returns the parentNode or the host of the element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} parent\n */\nexport default function getParentNode(element) {\n  if (element.nodeName === 'HTML') {\n    return element;\n  }\n  return element.parentNode || element.host;\n}\n","import getStyleComputedProperty from './getStyleComputedProperty';\nimport getParentNode from './getParentNode';\n\n/**\n * Returns the scrolling parent of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} scroll parent\n */\nexport default function getScrollParent(element) {\n  // Return body, `getScroll` will take care to get the correct `scrollTop` from it\n  if (!element) {\n    return document.body\n  }\n\n  switch (element.nodeName) {\n    case 'HTML':\n    case 'BODY':\n      return element.ownerDocument.body\n    case '#document':\n      return element.body\n  }\n\n  // Firefox want us to check `-x` and `-y` variations as well\n  const { overflow, overflowX, overflowY } = getStyleComputedProperty(element);\n  if (/(auto|scroll|overlay)/.test(overflow + overflowY + overflowX)) {\n    return element;\n  }\n\n  return getScrollParent(getParentNode(element));\n}\n","/**\n * Returns the reference node of the reference object, or the reference object itself.\n * @method\n * @memberof Popper.Utils\n * @param {Element|Object} reference - the reference element (the popper will be relative to this)\n * @returns {Element} parent\n */\nexport default function getReferenceNode(reference) {\n  return reference && reference.referenceNode ? reference.referenceNode : reference;\n}\n","import isBrowser from './isBrowser';\n\nconst isIE11 = isBrowser && !!(window.MSInputMethodContext && document.documentMode);\nconst isIE10 = isBrowser && /MSIE 10/.test(navigator.userAgent);\n\n/**\n * Determines if the browser is Internet Explorer\n * @method\n * @memberof Popper.Utils\n * @param {Number} version to check\n * @returns {Boolean} isIE\n */\nexport default function isIE(version) {\n  if (version === 11) {\n    return isIE11;\n  }\n  if (version === 10) {\n    return isIE10;\n  }\n  return isIE11 || isIE10;\n}\n","import getStyleComputedProperty from './getStyleComputedProperty';\nimport isIE from './isIE';\n/**\n * Returns the offset parent of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} offset parent\n */\nexport default function getOffsetParent(element) {\n  if (!element) {\n    return document.documentElement;\n  }\n\n  const noOffsetParent = isIE(10) ? document.body : null;\n\n  // NOTE: 1 DOM access here\n  let offsetParent = element.offsetParent || null;\n  // Skip hidden elements which don't have an offsetParent\n  while (offsetParent === noOffsetParent && element.nextElementSibling) {\n    offsetParent = (element = element.nextElementSibling).offsetParent;\n  }\n\n  const nodeName = offsetParent && offsetParent.nodeName;\n\n  if (!nodeName || nodeName === 'BODY' || nodeName === 'HTML') {\n    return element ? element.ownerDocument.documentElement : document.documentElement;\n  }\n\n  // .offsetParent will return the closest TH, TD or TABLE in case\n  // no offsetParent is present, I hate this job...\n  if (\n    ['TH', 'TD', 'TABLE'].indexOf(offsetParent.nodeName) !== -1 &&\n    getStyleComputedProperty(offsetParent, 'position') === 'static'\n  ) {\n    return getOffsetParent(offsetParent);\n  }\n\n  return offsetParent;\n}\n","/**\n * Finds the root node (document, shadowDOM root) of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} node\n * @returns {Element} root node\n */\nexport default function getRoot(node) {\n  if (node.parentNode !== null) {\n    return getRoot(node.parentNode);\n  }\n\n  return node;\n}\n","import isOffsetContainer from './isOffsetContainer';\nimport getRoot from './getRoot';\nimport getOffsetParent from './getOffsetParent';\n\n/**\n * Finds the offset parent common to the two provided nodes\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element1\n * @argument {Element} element2\n * @returns {Element} common offset parent\n */\nexport default function findCommonOffsetParent(element1, element2) {\n  // This check is needed to avoid errors in case one of the elements isn't defined for any reason\n  if (!element1 || !element1.nodeType || !element2 || !element2.nodeType) {\n    return document.documentElement;\n  }\n\n  // Here we make sure to give as \"start\" the element that comes first in the DOM\n  const order =\n    element1.compareDocumentPosition(element2) &\n    Node.DOCUMENT_POSITION_FOLLOWING;\n  const start = order ? element1 : element2;\n  const end = order ? element2 : element1;\n\n  // Get common ancestor container\n  const range = document.createRange();\n  range.setStart(start, 0);\n  range.setEnd(end, 0);\n  const { commonAncestorContainer } = range;\n\n  // Both nodes are inside #document\n  if (\n    (element1 !== commonAncestorContainer &&\n      element2 !== commonAncestorContainer) ||\n    start.contains(end)\n  ) {\n    if (isOffsetContainer(commonAncestorContainer)) {\n      return commonAncestorContainer;\n    }\n\n    return getOffsetParent(commonAncestorContainer);\n  }\n\n  // one of the nodes is inside shadowDOM, find which one\n  const element1root = getRoot(element1);\n  if (element1root.host) {\n    return findCommonOffsetParent(element1root.host, element2);\n  } else {\n    return findCommonOffsetParent(element1, getRoot(element2).host);\n  }\n}\n","import getOffsetParent from './getOffsetParent';\n\nexport default function isOffsetContainer(element) {\n  const { nodeName } = element;\n  if (nodeName === 'BODY') {\n    return false;\n  }\n  return (\n    nodeName === 'HTML' || getOffsetParent(element.firstElementChild) === element\n  );\n}\n","/**\n * Gets the scroll value of the given element in the given side (top and left)\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @argument {String} side `top` or `left`\n * @returns {number} amount of scrolled pixels\n */\nexport default function getScroll(element, side = 'top') {\n  const upperSide = side === 'top' ? 'scrollTop' : 'scrollLeft';\n  const nodeName = element.nodeName;\n\n  if (nodeName === 'BODY' || nodeName === 'HTML') {\n    const html = element.ownerDocument.documentElement;\n    const scrollingElement = element.ownerDocument.scrollingElement || html;\n    return scrollingElement[upperSide];\n  }\n\n  return element[upperSide];\n}\n","import getScroll from './getScroll';\n\n/*\n * Sum or subtract the element scroll values (left and top) from a given rect object\n * @method\n * @memberof Popper.Utils\n * @param {Object} rect - Rect object you want to change\n * @param {HTMLElement} element - The element from the function reads the scroll values\n * @param {Boolean} subtract - set to true if you want to subtract the scroll values\n * @return {Object} rect - The modifier rect object\n */\nexport default function includeScroll(rect, element, subtract = false) {\n  const scrollTop = getScroll(element, 'top');\n  const scrollLeft = getScroll(element, 'left');\n  const modifier = subtract ? -1 : 1;\n  rect.top += scrollTop * modifier;\n  rect.bottom += scrollTop * modifier;\n  rect.left += scrollLeft * modifier;\n  rect.right += scrollLeft * modifier;\n  return rect;\n}\n","/*\n * Helper to detect borders of a given element\n * @method\n * @memberof Popper.Utils\n * @param {CSSStyleDeclaration} styles\n * Result of `getStyleComputedProperty` on the given element\n * @param {String} axis - `x` or `y`\n * @return {number} borders - The borders size of the given axis\n */\n\nexport default function getBordersSize(styles, axis) {\n  const sideA = axis === 'x' ? 'Left' : 'Top';\n  const sideB = sideA === 'Left' ? 'Right' : 'Bottom';\n\n  return (\n    parseFloat(styles[`border${sideA}Width`]) +\n    parseFloat(styles[`border${sideB}Width`])\n  );\n}\n","import isIE from './isIE';\n\nfunction getSize(axis, body, html, computedStyle) {\n  return Math.max(\n    body[`offset${axis}`],\n    body[`scroll${axis}`],\n    html[`client${axis}`],\n    html[`offset${axis}`],\n    html[`scroll${axis}`],\n    isIE(10)\n      ? (parseInt(html[`offset${axis}`]) + \n      parseInt(computedStyle[`margin${axis === 'Height' ? 'Top' : 'Left'}`]) + \n      parseInt(computedStyle[`margin${axis === 'Height' ? 'Bottom' : 'Right'}`]))\n    : 0 \n  );\n}\n\nexport default function getWindowSizes(document) {\n  const body = document.body;\n  const html = document.documentElement;\n  const computedStyle = isIE(10) && getComputedStyle(html);\n\n  return {\n    height: getSize('Height', body, html, computedStyle),\n    width: getSize('Width', body, html, computedStyle),\n  };\n}\n","/**\n * Given element offsets, generate an output similar to getBoundingClientRect\n * @method\n * @memberof Popper.Utils\n * @argument {Object} offsets\n * @returns {Object} ClientRect like output\n */\nexport default function getClientRect(offsets) {\n  return {\n    ...offsets,\n    right: offsets.left + offsets.width,\n    bottom: offsets.top + offsets.height,\n  };\n}\n","import getStyleComputedProperty from './getStyleComputedProperty';\nimport getBordersSize from './getBordersSize';\nimport getWindowSizes from './getWindowSizes';\nimport getScroll from './getScroll';\nimport getClientRect from './getClientRect';\nimport isIE from './isIE';\n\n/**\n * Get bounding client rect of given element\n * @method\n * @memberof Popper.Utils\n * @param {HTMLElement} element\n * @return {Object} client rect\n */\nexport default function getBoundingClientRect(element) {\n  let rect = {};\n\n  // IE10 10 FIX: Please, don't ask, the element isn't\n  // considered in DOM in some circumstances...\n  // This isn't reproducible in IE10 compatibility mode of IE11\n  try {\n    if (isIE(10)) {\n      rect = element.getBoundingClientRect();\n      const scrollTop = getScroll(element, 'top');\n      const scrollLeft = getScroll(element, 'left');\n      rect.top += scrollTop;\n      rect.left += scrollLeft;\n      rect.bottom += scrollTop;\n      rect.right += scrollLeft;\n    }\n    else {\n      rect = element.getBoundingClientRect();\n    }\n  }\n  catch(e){}\n\n  const result = {\n    left: rect.left,\n    top: rect.top,\n    width: rect.right - rect.left,\n    height: rect.bottom - rect.top,\n  };\n\n  // subtract scrollbar size from sizes\n  const sizes = element.nodeName === 'HTML' ? getWindowSizes(element.ownerDocument) : {};\n  const width =\n    sizes.width || element.clientWidth || result.width;\n  const height =\n    sizes.height || element.clientHeight || result.height;\n\n  let horizScrollbar = element.offsetWidth - width;\n  let vertScrollbar = element.offsetHeight - height;\n\n  // if an hypothetical scrollbar is detected, we must be sure it's not a `border`\n  // we make this check conditional for performance reasons\n  if (horizScrollbar || vertScrollbar) {\n    const styles = getStyleComputedProperty(element);\n    horizScrollbar -= getBordersSize(styles, 'x');\n    vertScrollbar -= getBordersSize(styles, 'y');\n\n    result.width -= horizScrollbar;\n    result.height -= vertScrollbar;\n  }\n\n  return getClientRect(result);\n}\n","import getStyleComputedProperty from './getStyleComputedProperty';\nimport includeScroll from './includeScroll';\nimport getScrollParent from './getScrollParent';\nimport getBoundingClientRect from './getBoundingClientRect';\nimport runIsIE from './isIE';\nimport getClientRect from './getClientRect';\n\nexport default function getOffsetRectRelativeToArbitraryNode(children, parent, fixedPosition = false) {\n  const isIE10 = runIsIE(10);\n  const isHTML = parent.nodeName === 'HTML';\n  const childrenRect = getBoundingClientRect(children);\n  const parentRect = getBoundingClientRect(parent);\n  const scrollParent = getScrollParent(children);\n\n  const styles = getStyleComputedProperty(parent);\n  const borderTopWidth = parseFloat(styles.borderTopWidth);\n  const borderLeftWidth = parseFloat(styles.borderLeftWidth);\n\n  // In cases where the parent is fixed, we must ignore negative scroll in offset calc\n  if(fixedPosition && isHTML) {\n    parentRect.top = Math.max(parentRect.top, 0);\n    parentRect.left = Math.max(parentRect.left, 0);\n  }\n  let offsets = getClientRect({\n    top: childrenRect.top - parentRect.top - borderTopWidth,\n    left: childrenRect.left - parentRect.left - borderLeftWidth,\n    width: childrenRect.width,\n    height: childrenRect.height,\n  });\n  offsets.marginTop = 0;\n  offsets.marginLeft = 0;\n\n  // Subtract margins of documentElement in case it's being used as parent\n  // we do this only on HTML because it's the only element that behaves\n  // differently when margins are applied to it. The margins are included in\n  // the box of the documentElement, in the other cases not.\n  if (!isIE10 && isHTML) {\n    const marginTop = parseFloat(styles.marginTop);\n    const marginLeft = parseFloat(styles.marginLeft);\n\n    offsets.top -= borderTopWidth - marginTop;\n    offsets.bottom -= borderTopWidth - marginTop;\n    offsets.left -= borderLeftWidth - marginLeft;\n    offsets.right -= borderLeftWidth - marginLeft;\n\n    // Attach marginTop and marginLeft because in some circumstances we may need them\n    offsets.marginTop = marginTop;\n    offsets.marginLeft = marginLeft;\n  }\n\n  if (\n    isIE10 && !fixedPosition\n      ? parent.contains(scrollParent)\n      : parent === scrollParent && scrollParent.nodeName !== 'BODY'\n  ) {\n    offsets = includeScroll(offsets, parent);\n  }\n\n  return offsets;\n}\n","import getOffsetRectRelativeToArbitraryNode from './getOffsetRectRelativeToArbitraryNode';\nimport getScroll from './getScroll';\nimport getClientRect from './getClientRect';\n\nexport default function getViewportOffsetRectRelativeToArtbitraryNode(element, excludeScroll = false) {\n  const html = element.ownerDocument.documentElement;\n  const relativeOffset = getOffsetRectRelativeToArbitraryNode(element, html);\n  const width = Math.max(html.clientWidth, window.innerWidth || 0);\n  const height = Math.max(html.clientHeight, window.innerHeight || 0);\n\n  const scrollTop = !excludeScroll ? getScroll(html) : 0;\n  const scrollLeft = !excludeScroll ? getScroll(html, 'left') : 0;\n\n  const offset = {\n    top: scrollTop - relativeOffset.top + relativeOffset.marginTop,\n    left: scrollLeft - relativeOffset.left + relativeOffset.marginLeft,\n    width,\n    height,\n  };\n\n  return getClientRect(offset);\n}\n","import getStyleComputedProperty from './getStyleComputedProperty';\nimport getParentNode from './getParentNode';\n\n/**\n * Check if the given element is fixed or is inside a fixed parent\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @argument {Element} customContainer\n * @returns {Boolean} answer to \"isFixed?\"\n */\nexport default function isFixed(element) {\n  const nodeName = element.nodeName;\n  if (nodeName === 'BODY' || nodeName === 'HTML') {\n    return false;\n  }\n  if (getStyleComputedProperty(element, 'position') === 'fixed') {\n    return true;\n  }\n  const parentNode = getParentNode(element);\n  if (!parentNode) {\n    return false;\n  }\n  return isFixed(parentNode);\n}\n","import getStyleComputedProperty from './getStyleComputedProperty';\nimport isIE from './isIE';\n/**\n * Finds the first parent of an element that has a transformed property defined\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} first transformed parent or documentElement\n */\n\nexport default function getFixedPositionOffsetParent(element) {\n  // This check is needed to avoid errors in case one of the elements isn't defined for any reason\n   if (!element || !element.parentElement || isIE()) {\n    return document.documentElement;\n  }\n  let el = element.parentElement;\n  while (el && getStyleComputedProperty(el, 'transform') === 'none') {\n    el = el.parentElement;\n  }\n  return el || document.documentElement;\n\n}\n","import getScrollParent from './getScrollParent';\nimport getParentNode from './getParentNode';\nimport getReferenceNode from './getReferenceNode';\nimport findCommonOffsetParent from './findCommonOffsetParent';\nimport getOffsetRectRelativeToArbitraryNode from './getOffsetRectRelativeToArbitraryNode';\nimport getViewportOffsetRectRelativeToArtbitraryNode from './getViewportOffsetRectRelativeToArtbitraryNode';\nimport getWindowSizes from './getWindowSizes';\nimport isFixed from './isFixed';\nimport getFixedPositionOffsetParent from './getFixedPositionOffsetParent';\n\n/**\n * Computed the boundaries limits and return them\n * @method\n * @memberof Popper.Utils\n * @param {HTMLElement} popper\n * @param {HTMLElement} reference\n * @param {number} padding\n * @param {HTMLElement} boundariesElement - Element used to define the boundaries\n * @param {Boolean} fixedPosition - Is in fixed position mode\n * @returns {Object} Coordinates of the boundaries\n */\nexport default function getBoundaries(\n  popper,\n  reference,\n  padding,\n  boundariesElement,\n  fixedPosition = false\n) {\n  // NOTE: 1 DOM access here\n\n  let boundaries = { top: 0, left: 0 };\n  const offsetParent = fixedPosition ? getFixedPositionOffsetParent(popper) : findCommonOffsetParent(popper, getReferenceNode(reference));\n\n  // Handle viewport case\n  if (boundariesElement === 'viewport' ) {\n    boundaries = getViewportOffsetRectRelativeToArtbitraryNode(offsetParent, fixedPosition);\n  }\n\n  else {\n    // Handle other cases based on DOM element used as boundaries\n    let boundariesNode;\n    if (boundariesElement === 'scrollParent') {\n      boundariesNode = getScrollParent(getParentNode(reference));\n      if (boundariesNode.nodeName === 'BODY') {\n        boundariesNode = popper.ownerDocument.documentElement;\n      }\n    } else if (boundariesElement === 'window') {\n      boundariesNode = popper.ownerDocument.documentElement;\n    } else {\n      boundariesNode = boundariesElement;\n    }\n\n    const offsets = getOffsetRectRelativeToArbitraryNode(\n      boundariesNode,\n      offsetParent,\n      fixedPosition\n    );\n\n    // In case of HTML, we need a different computation\n    if (boundariesNode.nodeName === 'HTML' && !isFixed(offsetParent)) {\n      const { height, width } = getWindowSizes(popper.ownerDocument);\n      boundaries.top += offsets.top - offsets.marginTop;\n      boundaries.bottom = height + offsets.top;\n      boundaries.left += offsets.left - offsets.marginLeft;\n      boundaries.right = width + offsets.left;\n    } else {\n      // for all the other DOM elements, this one is good\n      boundaries = offsets;\n    }\n  }\n\n  // Add paddings\n  padding = padding || 0;\n  const isPaddingNumber = typeof padding === 'number';\n  boundaries.left += isPaddingNumber ? padding : padding.left || 0; \n  boundaries.top += isPaddingNumber ? padding : padding.top || 0; \n  boundaries.right -= isPaddingNumber ? padding : padding.right || 0; \n  boundaries.bottom -= isPaddingNumber ? padding : padding.bottom || 0; \n\n  return boundaries;\n}\n","import getBoundaries from '../utils/getBoundaries';\n\nfunction getArea({ width, height }) {\n  return width * height;\n}\n\n/**\n * Utility used to transform the `auto` placement to the placement with more\n * available space.\n * @method\n * @memberof Popper.Utils\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function computeAutoPlacement(\n  placement,\n  refRect,\n  popper,\n  reference,\n  boundariesElement,\n  padding = 0\n) {\n  if (placement.indexOf('auto') === -1) {\n    return placement;\n  }\n\n  const boundaries = getBoundaries(\n    popper,\n    reference,\n    padding,\n    boundariesElement\n  );\n\n  const rects = {\n    top: {\n      width: boundaries.width,\n      height: refRect.top - boundaries.top,\n    },\n    right: {\n      width: boundaries.right - refRect.right,\n      height: boundaries.height,\n    },\n    bottom: {\n      width: boundaries.width,\n      height: boundaries.bottom - refRect.bottom,\n    },\n    left: {\n      width: refRect.left - boundaries.left,\n      height: boundaries.height,\n    },\n  };\n\n  const sortedAreas = Object.keys(rects)\n    .map(key => ({\n      key,\n      ...rects[key],\n      area: getArea(rects[key]),\n    }))\n    .sort((a, b) => b.area - a.area);\n\n  const filteredAreas = sortedAreas.filter(\n    ({ width, height }) =>\n      width >= popper.clientWidth && height >= popper.clientHeight\n  );\n\n  const computedPlacement = filteredAreas.length > 0\n    ? filteredAreas[0].key\n    : sortedAreas[0].key;\n\n  const variation = placement.split('-')[1];\n\n  return computedPlacement + (variation ? `-${variation}` : '');\n}\n","import findCommonOffsetParent from './findCommonOffsetParent';\nimport getOffsetRectRelativeToArbitraryNode from './getOffsetRectRelativeToArbitraryNode';\nimport getFixedPositionOffsetParent from './getFixedPositionOffsetParent';\nimport getReferenceNode from './getReferenceNode';\n\n/**\n * Get offsets to the reference element\n * @method\n * @memberof Popper.Utils\n * @param {Object} state\n * @param {Element} popper - the popper element\n * @param {Element} reference - the reference element (the popper will be relative to this)\n * @param {Element} fixedPosition - is in fixed position mode\n * @returns {Object} An object containing the offsets which will be applied to the popper\n */\nexport default function getReferenceOffsets(state, popper, reference, fixedPosition = null) {\n  const commonOffsetParent = fixedPosition ? getFixedPositionOffsetParent(popper) : findCommonOffsetParent(popper, getReferenceNode(reference));\n  return getOffsetRectRelativeToArbitraryNode(reference, commonOffsetParent, fixedPosition);\n}\n","/**\n * Get the outer sizes of the given element (offset size + margins)\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Object} object containing width and height properties\n */\nexport default function getOuterSizes(element) {\n  const window = element.ownerDocument.defaultView;\n  const styles = window.getComputedStyle(element);\n  const x = parseFloat(styles.marginTop || 0) + parseFloat(styles.marginBottom || 0);\n  const y = parseFloat(styles.marginLeft || 0) + parseFloat(styles.marginRight || 0);\n  const result = {\n    width: element.offsetWidth + y,\n    height: element.offsetHeight + x,\n  };\n  return result;\n}\n","/**\n * Get the opposite placement of the given one\n * @method\n * @memberof Popper.Utils\n * @argument {String} placement\n * @returns {String} flipped placement\n */\nexport default function getOppositePlacement(placement) {\n  const hash = { left: 'right', right: 'left', bottom: 'top', top: 'bottom' };\n  return placement.replace(/left|right|bottom|top/g, matched => hash[matched]);\n}\n","import getOuterSizes from './getOuterSizes';\nimport getOppositePlacement from './getOppositePlacement';\n\n/**\n * Get offsets to the popper\n * @method\n * @memberof Popper.Utils\n * @param {Object} position - CSS position the Popper will get applied\n * @param {HTMLElement} popper - the popper element\n * @param {Object} referenceOffsets - the reference offsets (the popper will be relative to this)\n * @param {String} placement - one of the valid placement options\n * @returns {Object} popperOffsets - An object containing the offsets which will be applied to the popper\n */\nexport default function getPopperOffsets(popper, referenceOffsets, placement) {\n  placement = placement.split('-')[0];\n\n  // Get popper node sizes\n  const popperRect = getOuterSizes(popper);\n\n  // Add position, width and height to our offsets object\n  const popperOffsets = {\n    width: popperRect.width,\n    height: popperRect.height,\n  };\n\n  // depending by the popper placement we have to compute its offsets slightly differently\n  const isHoriz = ['right', 'left'].indexOf(placement) !== -1;\n  const mainSide = isHoriz ? 'top' : 'left';\n  const secondarySide = isHoriz ? 'left' : 'top';\n  const measurement = isHoriz ? 'height' : 'width';\n  const secondaryMeasurement = !isHoriz ? 'height' : 'width';\n\n  popperOffsets[mainSide] =\n    referenceOffsets[mainSide] +\n    referenceOffsets[measurement] / 2 -\n    popperRect[measurement] / 2;\n  if (placement === secondarySide) {\n    popperOffsets[secondarySide] =\n      referenceOffsets[secondarySide] - popperRect[secondaryMeasurement];\n  } else {\n    popperOffsets[secondarySide] =\n      referenceOffsets[getOppositePlacement(secondarySide)];\n  }\n\n  return popperOffsets;\n}\n","/**\n * Mimics the `find` method of Array\n * @method\n * @memberof Popper.Utils\n * @argument {Array} arr\n * @argument prop\n * @argument value\n * @returns index or -1\n */\nexport default function find(arr, check) {\n  // use native find if supported\n  if (Array.prototype.find) {\n    return arr.find(check);\n  }\n\n  // use `filter` to obtain the same behavior of `find`\n  return arr.filter(check)[0];\n}\n","import isFunction from './isFunction';\nimport findIndex from './findIndex';\nimport getClientRect from '../utils/getClientRect';\n\n/**\n * Loop trough the list of modifiers and run them in order,\n * each of them will then edit the data object.\n * @method\n * @memberof Popper.Utils\n * @param {dataObject} data\n * @param {Array} modifiers\n * @param {String} ends - Optional modifier name used as stopper\n * @returns {dataObject}\n */\nexport default function runModifiers(modifiers, data, ends) {\n  const modifiersToRun = ends === undefined\n    ? modifiers\n    : modifiers.slice(0, findIndex(modifiers, 'name', ends));\n\n  modifiersToRun.forEach(modifier => {\n    if (modifier['function']) { // eslint-disable-line dot-notation\n      console.warn('`modifier.function` is deprecated, use `modifier.fn`!');\n    }\n    const fn = modifier['function'] || modifier.fn; // eslint-disable-line dot-notation\n    if (modifier.enabled && isFunction(fn)) {\n      // Add properties to offsets to make them a complete clientRect object\n      // we do this before each modifier to make sure the previous one doesn't\n      // mess with these values\n      data.offsets.popper = getClientRect(data.offsets.popper);\n      data.offsets.reference = getClientRect(data.offsets.reference);\n\n      data = fn(data, modifier);\n    }\n  });\n\n  return data;\n}\n","import find from './find';\n\n/**\n * Return the index of the matching object\n * @method\n * @memberof Popper.Utils\n * @argument {Array} arr\n * @argument prop\n * @argument value\n * @returns index or -1\n */\nexport default function findIndex(arr, prop, value) {\n  // use native findIndex if supported\n  if (Array.prototype.findIndex) {\n    return arr.findIndex(cur => cur[prop] === value);\n  }\n\n  // use `find` + `indexOf` if `findIndex` isn't supported\n  const match = find(arr, obj => obj[prop] === value);\n  return arr.indexOf(match);\n}\n","import computeAutoPlacement from '../utils/computeAutoPlacement';\nimport getReferenceOffsets from '../utils/getReferenceOffsets';\nimport getPopperOffsets from '../utils/getPopperOffsets';\nimport runModifiers from '../utils/runModifiers';\n\n/**\n * Updates the position of the popper, computing the new offsets and applying\n * the new style.<br />\n * Prefer `scheduleUpdate` over `update` because of performance reasons.\n * @method\n * @memberof Popper\n */\nexport default function update() {\n  // if popper is destroyed, don't perform any further update\n  if (this.state.isDestroyed) {\n    return;\n  }\n\n  let data = {\n    instance: this,\n    styles: {},\n    arrowStyles: {},\n    attributes: {},\n    flipped: false,\n    offsets: {},\n  };\n\n  // compute reference element offsets\n  data.offsets.reference = getReferenceOffsets(\n    this.state,\n    this.popper,\n    this.reference,\n    this.options.positionFixed\n  );\n\n  // compute auto placement, store placement inside the data object,\n  // modifiers will be able to edit `placement` if needed\n  // and refer to originalPlacement to know the original value\n  data.placement = computeAutoPlacement(\n    this.options.placement,\n    data.offsets.reference,\n    this.popper,\n    this.reference,\n    this.options.modifiers.flip.boundariesElement,\n    this.options.modifiers.flip.padding\n  );\n\n  // store the computed placement inside `originalPlacement`\n  data.originalPlacement = data.placement;\n\n  data.positionFixed = this.options.positionFixed;\n\n  // compute the popper offsets\n  data.offsets.popper = getPopperOffsets(\n    this.popper,\n    data.offsets.reference,\n    data.placement\n  );\n\n  data.offsets.popper.position = this.options.positionFixed\n    ? 'fixed'\n    : 'absolute';\n\n  // run the modifiers\n  data = runModifiers(this.modifiers, data);\n\n  // the first `update` will call `onCreate` callback\n  // the other ones will call `onUpdate` callback\n  if (!this.state.isCreated) {\n    this.state.isCreated = true;\n    this.options.onCreate(data);\n  } else {\n    this.options.onUpdate(data);\n  }\n}\n","/**\n * Helper used to know if the given modifier is enabled.\n * @method\n * @memberof Popper.Utils\n * @returns {Boolean}\n */\nexport default function isModifierEnabled(modifiers, modifierName) {\n  return modifiers.some(\n    ({ name, enabled }) => enabled && name === modifierName\n  );\n}\n","/**\n * Get the prefixed supported property name\n * @method\n * @memberof Popper.Utils\n * @argument {String} property (camelCase)\n * @returns {String} prefixed property (camelCase or PascalCase, depending on the vendor prefix)\n */\nexport default function getSupportedPropertyName(property) {\n  const prefixes = [false, 'ms', 'Webkit', 'Moz', 'O'];\n  const upperProp = property.charAt(0).toUpperCase() + property.slice(1);\n\n  for (let i = 0; i < prefixes.length; i++) {\n    const prefix = prefixes[i];\n    const toCheck = prefix ? `${prefix}${upperProp}` : property;\n    if (typeof document.body.style[toCheck] !== 'undefined') {\n      return toCheck;\n    }\n  }\n  return null;\n}\n","import isModifierEnabled from '../utils/isModifierEnabled';\nimport getSupportedPropertyName from '../utils/getSupportedPropertyName';\n\n/**\n * Destroys the popper.\n * @method\n * @memberof Popper\n */\nexport default function destroy() {\n  this.state.isDestroyed = true;\n\n  // touch DOM only if `applyStyle` modifier is enabled\n  if (isModifierEnabled(this.modifiers, 'applyStyle')) {\n    this.popper.removeAttribute('x-placement');\n    this.popper.style.position = '';\n    this.popper.style.top = '';\n    this.popper.style.left = '';\n    this.popper.style.right = '';\n    this.popper.style.bottom = '';\n    this.popper.style.willChange = '';\n    this.popper.style[getSupportedPropertyName('transform')] = '';\n  }\n\n  this.disableEventListeners();\n\n  // remove the popper if user explicitly asked for the deletion on destroy\n  // do not use `remove` because IE11 doesn't support it\n  if (this.options.removeOnDestroy) {\n    this.popper.parentNode.removeChild(this.popper);\n  }\n  return this;\n}\n","/**\n * Get the window associated with the element\n * @argument {Element} element\n * @returns {Window}\n */\nexport default function getWindow(element) {\n  const ownerDocument = element.ownerDocument;\n  return ownerDocument ? ownerDocument.defaultView : window;\n}\n","import getScrollParent from './getScrollParent';\nimport getWindow from './getWindow';\n\nfunction attachToScrollParents(scrollParent, event, callback, scrollParents) {\n  const isBody = scrollParent.nodeName === 'BODY';\n  const target = isBody ? scrollParent.ownerDocument.defaultView : scrollParent;\n  target.addEventListener(event, callback, { passive: true });\n\n  if (!isBody) {\n    attachToScrollParents(\n      getScrollParent(target.parentNode),\n      event,\n      callback,\n      scrollParents\n    );\n  }\n  scrollParents.push(target);\n}\n\n/**\n * Setup needed event listeners used to update the popper position\n * @method\n * @memberof Popper.Utils\n * @private\n */\nexport default function setupEventListeners(\n  reference,\n  options,\n  state,\n  updateBound\n) {\n  // Resize event listener on window\n  state.updateBound = updateBound;\n  getWindow(reference).addEventListener('resize', state.updateBound, { passive: true });\n\n  // Scroll event listener on scroll parents\n  const scrollElement = getScrollParent(reference);\n  attachToScrollParents(\n    scrollElement,\n    'scroll',\n    state.updateBound,\n    state.scrollParents\n  );\n  state.scrollElement = scrollElement;\n  state.eventsEnabled = true;\n\n  return state;\n}\n","import setupEventListeners from '../utils/setupEventListeners';\n\n/**\n * It will add resize/scroll events and start recalculating\n * position of the popper element when they are triggered.\n * @method\n * @memberof Popper\n */\nexport default function enableEventListeners() {\n  if (!this.state.eventsEnabled) {\n    this.state = setupEventListeners(\n      this.reference,\n      this.options,\n      this.state,\n      this.scheduleUpdate\n    );\n  }\n}\n","import removeEventListeners from '../utils/removeEventListeners';\n\n/**\n * It will remove resize/scroll events and won't recalculate popper position\n * when they are triggered. It also won't trigger `onUpdate` callback anymore,\n * unless you call `update` method manually.\n * @method\n * @memberof Popper\n */\nexport default function disableEventListeners() {\n  if (this.state.eventsEnabled) {\n    cancelAnimationFrame(this.scheduleUpdate);\n    this.state = removeEventListeners(this.reference, this.state);\n  }\n}\n","import getWindow from './getWindow';\n\n/**\n * Remove event listeners used to update the popper position\n * @method\n * @memberof Popper.Utils\n * @private\n */\nexport default function removeEventListeners(reference, state) {\n  // Remove resize event listener on window\n  getWindow(reference).removeEventListener('resize', state.updateBound);\n\n  // Remove scroll event listener on scroll parents\n  state.scrollParents.forEach(target => {\n    target.removeEventListener('scroll', state.updateBound);\n  });\n\n  // Reset state\n  state.updateBound = null;\n  state.scrollParents = [];\n  state.scrollElement = null;\n  state.eventsEnabled = false;\n  return state;\n}\n","/**\n * Tells if a given input is a number\n * @method\n * @memberof Popper.Utils\n * @param {*} input to check\n * @return {Boolean}\n */\nexport default function isNumeric(n) {\n  return n !== '' && !isNaN(parseFloat(n)) && isFinite(n);\n}\n","import isNumeric from './isNumeric';\n\n/**\n * Set the style to the given popper\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element - Element to apply the style to\n * @argument {Object} styles\n * Object with a list of properties and values which will be applied to the element\n */\nexport default function setStyles(element, styles) {\n  Object.keys(styles).forEach(prop => {\n    let unit = '';\n    // add unit if the value is numeric and is one of the following\n    if (\n      ['width', 'height', 'top', 'right', 'bottom', 'left'].indexOf(prop) !==\n        -1 &&\n      isNumeric(styles[prop])\n    ) {\n      unit = 'px';\n    }\n    element.style[prop] = styles[prop] + unit;\n  });\n}\n","import getSupportedPropertyName from '../utils/getSupportedPropertyName';\nimport find from '../utils/find';\nimport getOffsetParent from '../utils/getOffsetParent';\nimport getBoundingClientRect from '../utils/getBoundingClientRect';\nimport getRoundedOffsets from '../utils/getRoundedOffsets';\nimport isBrowser from '../utils/isBrowser';\n\nconst isFirefox = isBrowser && /Firefox/i.test(navigator.userAgent);\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function computeStyle(data, options) {\n  const { x, y } = options;\n  const { popper } = data.offsets;\n\n  // Remove this legacy support in Popper.js v2\n  const legacyGpuAccelerationOption = find(\n    data.instance.modifiers,\n    modifier => modifier.name === 'applyStyle'\n  ).gpuAcceleration;\n  if (legacyGpuAccelerationOption !== undefined) {\n    console.warn(\n      'WARNING: `gpuAcceleration` option moved to `computeStyle` modifier and will not be supported in future versions of Popper.js!'\n    );\n  }\n  const gpuAcceleration =\n    legacyGpuAccelerationOption !== undefined\n      ? legacyGpuAccelerationOption\n      : options.gpuAcceleration;\n\n  const offsetParent = getOffsetParent(data.instance.popper);\n  const offsetParentRect = getBoundingClientRect(offsetParent);\n\n  // Styles\n  const styles = {\n    position: popper.position,\n  };\n\n  const offsets = getRoundedOffsets(\n    data,\n    window.devicePixelRatio < 2 || !isFirefox\n  );\n\n  const sideA = x === 'bottom' ? 'top' : 'bottom';\n  const sideB = y === 'right' ? 'left' : 'right';\n\n  // if gpuAcceleration is set to `true` and transform is supported,\n  //  we use `translate3d` to apply the position to the popper we\n  // automatically use the supported prefixed version if needed\n  const prefixedProperty = getSupportedPropertyName('transform');\n\n  // now, let's make a step back and look at this code closely (wtf?)\n  // If the content of the popper grows once it's been positioned, it\n  // may happen that the popper gets misplaced because of the new content\n  // overflowing its reference element\n  // To avoid this problem, we provide two options (x and y), which allow\n  // the consumer to define the offset origin.\n  // If we position a popper on top of a reference element, we can set\n  // `x` to `top` to make the popper grow towards its top instead of\n  // its bottom.\n  let left, top;\n  if (sideA === 'bottom') {\n    // when offsetParent is <html> the positioning is relative to the bottom of the screen (excluding the scrollbar)\n    // and not the bottom of the html element\n    if (offsetParent.nodeName === 'HTML') {\n      top = -offsetParent.clientHeight + offsets.bottom;\n    } else {\n      top = -offsetParentRect.height + offsets.bottom;\n    }\n  } else {\n    top = offsets.top;\n  }\n  if (sideB === 'right') {\n    if (offsetParent.nodeName === 'HTML') {\n      left = -offsetParent.clientWidth + offsets.right;\n    } else {\n      left = -offsetParentRect.width + offsets.right;\n    }\n  } else {\n    left = offsets.left;\n  }\n  if (gpuAcceleration && prefixedProperty) {\n    styles[prefixedProperty] = `translate3d(${left}px, ${top}px, 0)`;\n    styles[sideA] = 0;\n    styles[sideB] = 0;\n    styles.willChange = 'transform';\n  } else {\n    // othwerise, we use the standard `top`, `left`, `bottom` and `right` properties\n    const invertTop = sideA === 'bottom' ? -1 : 1;\n    const invertLeft = sideB === 'right' ? -1 : 1;\n    styles[sideA] = top * invertTop;\n    styles[sideB] = left * invertLeft;\n    styles.willChange = `${sideA}, ${sideB}`;\n  }\n\n  // Attributes\n  const attributes = {\n    'x-placement': data.placement,\n  };\n\n  // Update `data` attributes, styles and arrowStyles\n  data.attributes = { ...attributes, ...data.attributes };\n  data.styles = { ...styles, ...data.styles };\n  data.arrowStyles = { ...data.offsets.arrow, ...data.arrowStyles };\n\n  return data;\n}\n","import find from './find';\n\n/**\n * Helper used to know if the given modifier depends from another one.<br />\n * It checks if the needed modifier is listed and enabled.\n * @method\n * @memberof Popper.Utils\n * @param {Array} modifiers - list of modifiers\n * @param {String} requestingName - name of requesting modifier\n * @param {String} requestedName - name of requested modifier\n * @returns {Boolean}\n */\nexport default function isModifierRequired(\n  modifiers,\n  requestingName,\n  requestedName\n) {\n  const requesting = find(modifiers, ({ name }) => name === requestingName);\n\n  const isRequired =\n    !!requesting &&\n    modifiers.some(modifier => {\n      return (\n        modifier.name === requestedName &&\n        modifier.enabled &&\n        modifier.order < requesting.order\n      );\n    });\n\n  if (!isRequired) {\n    const requesting = `\\`${requestingName}\\``;\n    const requested = `\\`${requestedName}\\``;\n    console.warn(\n      `${requested} modifier is required by ${requesting} modifier in order to work, be sure to include it before ${requesting}!`\n    );\n  }\n  return isRequired;\n}\n","/**\n * List of accepted placements to use as values of the `placement` option.<br />\n * Valid placements are:\n * - `auto`\n * - `top`\n * - `right`\n * - `bottom`\n * - `left`\n *\n * Each placement can have a variation from this list:\n * - `-start`\n * - `-end`\n *\n * Variations are interpreted easily if you think of them as the left to right\n * written languages. Horizontally (`top` and `bottom`), `start` is left and `end`\n * is right.<br />\n * Vertically (`left` and `right`), `start` is top and `end` is bottom.\n *\n * Some valid examples are:\n * - `top-end` (on top of reference, right aligned)\n * - `right-start` (on right of reference, top aligned)\n * - `bottom` (on bottom, centered)\n * - `auto-end` (on the side with more space available, alignment depends by placement)\n *\n * @static\n * @type {Array}\n * @enum {String}\n * @readonly\n * @method placements\n * @memberof Popper\n */\nexport default [\n  'auto-start',\n  'auto',\n  'auto-end',\n  'top-start',\n  'top',\n  'top-end',\n  'right-start',\n  'right',\n  'right-end',\n  'bottom-end',\n  'bottom',\n  'bottom-start',\n  'left-end',\n  'left',\n  'left-start',\n];\n","import placements from '../methods/placements';\n\n// Get rid of `auto` `auto-start` and `auto-end`\nconst validPlacements = placements.slice(3);\n\n/**\n * Given an initial placement, returns all the subsequent placements\n * clockwise (or counter-clockwise).\n *\n * @method\n * @memberof Popper.Utils\n * @argument {String} placement - A valid placement (it accepts variations)\n * @argument {Boolean} counter - Set to true to walk the placements counterclockwise\n * @returns {Array} placements including their variations\n */\nexport default function clockwise(placement, counter = false) {\n  const index = validPlacements.indexOf(placement);\n  const arr = validPlacements\n    .slice(index + 1)\n    .concat(validPlacements.slice(0, index));\n  return counter ? arr.reverse() : arr;\n}\n","import getOppositePlacement from '../utils/getOppositePlacement';\nimport getOppositeVariation from '../utils/getOppositeVariation';\nimport getPopperOffsets from '../utils/getPopperOffsets';\nimport runModifiers from '../utils/runModifiers';\nimport getBoundaries from '../utils/getBoundaries';\nimport isModifierEnabled from '../utils/isModifierEnabled';\nimport clockwise from '../utils/clockwise';\n\nconst BEHAVIORS = {\n  FLIP: 'flip',\n  CLOCKWISE: 'clockwise',\n  COUNTERCLOCKWISE: 'counterclockwise',\n};\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function flip(data, options) {\n  // if `inner` modifier is enabled, we can't use the `flip` modifier\n  if (isModifierEnabled(data.instance.modifiers, 'inner')) {\n    return data;\n  }\n\n  if (data.flipped && data.placement === data.originalPlacement) {\n    // seems like flip is trying to loop, probably there's not enough space on any of the flippable sides\n    return data;\n  }\n\n  const boundaries = getBoundaries(\n    data.instance.popper,\n    data.instance.reference,\n    options.padding,\n    options.boundariesElement,\n    data.positionFixed\n  );\n\n  let placement = data.placement.split('-')[0];\n  let placementOpposite = getOppositePlacement(placement);\n  let variation = data.placement.split('-')[1] || '';\n\n  let flipOrder = [];\n\n  switch (options.behavior) {\n    case BEHAVIORS.FLIP:\n      flipOrder = [placement, placementOpposite];\n      break;\n    case BEHAVIORS.CLOCKWISE:\n      flipOrder = clockwise(placement);\n      break;\n    case BEHAVIORS.COUNTERCLOCKWISE:\n      flipOrder = clockwise(placement, true);\n      break;\n    default:\n      flipOrder = options.behavior;\n  }\n\n  flipOrder.forEach((step, index) => {\n    if (placement !== step || flipOrder.length === index + 1) {\n      return data;\n    }\n\n    placement = data.placement.split('-')[0];\n    placementOpposite = getOppositePlacement(placement);\n\n    const popperOffsets = data.offsets.popper;\n    const refOffsets = data.offsets.reference;\n\n    // using floor because the reference offsets may contain decimals we are not going to consider here\n    const floor = Math.floor;\n    const overlapsRef =\n      (placement === 'left' &&\n        floor(popperOffsets.right) > floor(refOffsets.left)) ||\n      (placement === 'right' &&\n        floor(popperOffsets.left) < floor(refOffsets.right)) ||\n      (placement === 'top' &&\n        floor(popperOffsets.bottom) > floor(refOffsets.top)) ||\n      (placement === 'bottom' &&\n        floor(popperOffsets.top) < floor(refOffsets.bottom));\n\n    const overflowsLeft = floor(popperOffsets.left) < floor(boundaries.left);\n    const overflowsRight = floor(popperOffsets.right) > floor(boundaries.right);\n    const overflowsTop = floor(popperOffsets.top) < floor(boundaries.top);\n    const overflowsBottom =\n      floor(popperOffsets.bottom) > floor(boundaries.bottom);\n\n    const overflowsBoundaries =\n      (placement === 'left' && overflowsLeft) ||\n      (placement === 'right' && overflowsRight) ||\n      (placement === 'top' && overflowsTop) ||\n      (placement === 'bottom' && overflowsBottom);\n\n    // flip the variation if required\n    const isVertical = ['top', 'bottom'].indexOf(placement) !== -1;\n\n    // flips variation if reference element overflows boundaries\n    const flippedVariationByRef =\n      !!options.flipVariations &&\n      ((isVertical && variation === 'start' && overflowsLeft) ||\n        (isVertical && variation === 'end' && overflowsRight) ||\n        (!isVertical && variation === 'start' && overflowsTop) ||\n        (!isVertical && variation === 'end' && overflowsBottom));\n\n    // flips variation if popper content overflows boundaries\n    const flippedVariationByContent =\n      !!options.flipVariationsByContent &&\n      ((isVertical && variation === 'start' && overflowsRight) ||\n        (isVertical && variation === 'end' && overflowsLeft) ||\n        (!isVertical && variation === 'start' && overflowsBottom) ||\n        (!isVertical && variation === 'end' && overflowsTop));\n\n    const flippedVariation = flippedVariationByRef || flippedVariationByContent;\n\n    if (overlapsRef || overflowsBoundaries || flippedVariation) {\n      // this boolean to detect any flip loop\n      data.flipped = true;\n\n      if (overlapsRef || overflowsBoundaries) {\n        placement = flipOrder[index + 1];\n      }\n\n      if (flippedVariation) {\n        variation = getOppositeVariation(variation);\n      }\n\n      data.placement = placement + (variation ? '-' + variation : '');\n\n      // this object contains `position`, we want to preserve it along with\n      // any additional property we may add in the future\n      data.offsets.popper = {\n        ...data.offsets.popper,\n        ...getPopperOffsets(\n          data.instance.popper,\n          data.offsets.reference,\n          data.placement\n        ),\n      };\n\n      data = runModifiers(data.instance.modifiers, data, 'flip');\n    }\n  });\n  return data;\n}\n","import isNumeric from '../utils/isNumeric';\nimport getClientRect from '../utils/getClientRect';\nimport find from '../utils/find';\n\n/**\n * Converts a string containing value + unit into a px value number\n * @function\n * @memberof {modifiers~offset}\n * @private\n * @argument {String} str - Value + unit string\n * @argument {String} measurement - `height` or `width`\n * @argument {Object} popperOffsets\n * @argument {Object} referenceOffsets\n * @returns {Number|String}\n * Value in pixels, or original string if no values were extracted\n */\nexport function toValue(str, measurement, popperOffsets, referenceOffsets) {\n  // separate value from unit\n  const split = str.match(/((?:\\-|\\+)?\\d*\\.?\\d*)(.*)/);\n  const value = +split[1];\n  const unit = split[2];\n\n  // If it's not a number it's an operator, I guess\n  if (!value) {\n    return str;\n  }\n\n  if (unit.indexOf('%') === 0) {\n    let element;\n    switch (unit) {\n      case '%p':\n        element = popperOffsets;\n        break;\n      case '%':\n      case '%r':\n      default:\n        element = referenceOffsets;\n    }\n\n    const rect = getClientRect(element);\n    return rect[measurement] / 100 * value;\n  } else if (unit === 'vh' || unit === 'vw') {\n    // if is a vh or vw, we calculate the size based on the viewport\n    let size;\n    if (unit === 'vh') {\n      size = Math.max(\n        document.documentElement.clientHeight,\n        window.innerHeight || 0\n      );\n    } else {\n      size = Math.max(\n        document.documentElement.clientWidth,\n        window.innerWidth || 0\n      );\n    }\n    return size / 100 * value;\n  } else {\n    // if is an explicit pixel unit, we get rid of the unit and keep the value\n    // if is an implicit unit, it's px, and we return just the value\n    return value;\n  }\n}\n\n/**\n * Parse an `offset` string to extrapolate `x` and `y` numeric offsets.\n * @function\n * @memberof {modifiers~offset}\n * @private\n * @argument {String} offset\n * @argument {Object} popperOffsets\n * @argument {Object} referenceOffsets\n * @argument {String} basePlacement\n * @returns {Array} a two cells array with x and y offsets in numbers\n */\nexport function parseOffset(\n  offset,\n  popperOffsets,\n  referenceOffsets,\n  basePlacement\n) {\n  const offsets = [0, 0];\n\n  // Use height if placement is left or right and index is 0 otherwise use width\n  // in this way the first offset will use an axis and the second one\n  // will use the other one\n  const useHeight = ['right', 'left'].indexOf(basePlacement) !== -1;\n\n  // Split the offset string to obtain a list of values and operands\n  // The regex addresses values with the plus or minus sign in front (+10, -20, etc)\n  const fragments = offset.split(/(\\+|\\-)/).map(frag => frag.trim());\n\n  // Detect if the offset string contains a pair of values or a single one\n  // they could be separated by comma or space\n  const divider = fragments.indexOf(\n    find(fragments, frag => frag.search(/,|\\s/) !== -1)\n  );\n\n  if (fragments[divider] && fragments[divider].indexOf(',') === -1) {\n    console.warn(\n      'Offsets separated by white space(s) are deprecated, use a comma (,) instead.'\n    );\n  }\n\n  // If divider is found, we divide the list of values and operands to divide\n  // them by ofset X and Y.\n  const splitRegex = /\\s*,\\s*|\\s+/;\n  let ops = divider !== -1\n    ? [\n        fragments\n          .slice(0, divider)\n          .concat([fragments[divider].split(splitRegex)[0]]),\n        [fragments[divider].split(splitRegex)[1]].concat(\n          fragments.slice(divider + 1)\n        ),\n      ]\n    : [fragments];\n\n  // Convert the values with units to absolute pixels to allow our computations\n  ops = ops.map((op, index) => {\n    // Most of the units rely on the orientation of the popper\n    const measurement = (index === 1 ? !useHeight : useHeight)\n      ? 'height'\n      : 'width';\n    let mergeWithPrevious = false;\n    return (\n      op\n        // This aggregates any `+` or `-` sign that aren't considered operators\n        // e.g.: 10 + +5 => [10, +, +5]\n        .reduce((a, b) => {\n          if (a[a.length - 1] === '' && ['+', '-'].indexOf(b) !== -1) {\n            a[a.length - 1] = b;\n            mergeWithPrevious = true;\n            return a;\n          } else if (mergeWithPrevious) {\n            a[a.length - 1] += b;\n            mergeWithPrevious = false;\n            return a;\n          } else {\n            return a.concat(b);\n          }\n        }, [])\n        // Here we convert the string values into number values (in px)\n        .map(str => toValue(str, measurement, popperOffsets, referenceOffsets))\n    );\n  });\n\n  // Loop trough the offsets arrays and execute the operations\n  ops.forEach((op, index) => {\n    op.forEach((frag, index2) => {\n      if (isNumeric(frag)) {\n        offsets[index] += frag * (op[index2 - 1] === '-' ? -1 : 1);\n      }\n    });\n  });\n  return offsets;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @argument {Number|String} options.offset=0\n * The offset value as described in the modifier description\n * @returns {Object} The data object, properly modified\n */\nexport default function offset(data, { offset }) {\n  const { placement, offsets: { popper, reference } } = data;\n  const basePlacement = placement.split('-')[0];\n\n  let offsets;\n  if (isNumeric(+offset)) {\n    offsets = [+offset, 0];\n  } else {\n    offsets = parseOffset(offset, popper, reference, basePlacement);\n  }\n\n  if (basePlacement === 'left') {\n    popper.top += offsets[0];\n    popper.left -= offsets[1];\n  } else if (basePlacement === 'right') {\n    popper.top += offsets[0];\n    popper.left += offsets[1];\n  } else if (basePlacement === 'top') {\n    popper.left += offsets[0];\n    popper.top -= offsets[1];\n  } else if (basePlacement === 'bottom') {\n    popper.left += offsets[0];\n    popper.top += offsets[1];\n  }\n\n  data.popper = popper;\n  return data;\n}\n","import applyStyle, { applyStyleOnLoad } from './applyStyle';\nimport computeStyle from './computeStyle';\nimport arrow from './arrow';\nimport flip from './flip';\nimport keepTogether from './keepTogether';\nimport offset from './offset';\nimport preventOverflow from './preventOverflow';\nimport shift from './shift';\nimport hide from './hide';\nimport inner from './inner';\n\n/**\n * Modifier function, each modifier can have a function of this type assigned\n * to its `fn` property.<br />\n * These functions will be called on each update, this means that you must\n * make sure they are performant enough to avoid performance bottlenecks.\n *\n * @function ModifierFn\n * @argument {dataObject} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {dataObject} The data object, properly modified\n */\n\n/**\n * Modifiers are plugins used to alter the behavior of your poppers.<br />\n * Popper.js uses a set of 9 modifiers to provide all the basic functionalities\n * needed by the library.\n *\n * Usually you don't want to override the `order`, `fn` and `onLoad` props.\n * All the other properties are configurations that could be tweaked.\n * @namespace modifiers\n */\nexport default {\n  /**\n   * Modifier used to shift the popper on the start or end of its reference\n   * element.<br />\n   * It will read the variation of the `placement` property.<br />\n   * It can be one either `-end` or `-start`.\n   * @memberof modifiers\n   * @inner\n   */\n  shift: {\n    /** @prop {number} order=100 - Index used to define the order of execution */\n    order: 100,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: shift,\n  },\n\n  /**\n   * The `offset` modifier can shift your popper on both its axis.\n   *\n   * It accepts the following units:\n   * - `px` or unit-less, interpreted as pixels\n   * - `%` or `%r`, percentage relative to the length of the reference element\n   * - `%p`, percentage relative to the length of the popper element\n   * - `vw`, CSS viewport width unit\n   * - `vh`, CSS viewport height unit\n   *\n   * For length is intended the main axis relative to the placement of the popper.<br />\n   * This means that if the placement is `top` or `bottom`, the length will be the\n   * `width`. In case of `left` or `right`, it will be the `height`.\n   *\n   * You can provide a single value (as `Number` or `String`), or a pair of values\n   * as `String` divided by a comma or one (or more) white spaces.<br />\n   * The latter is a deprecated method because it leads to confusion and will be\n   * removed in v2.<br />\n   * Additionally, it accepts additions and subtractions between different units.\n   * Note that multiplications and divisions aren't supported.\n   *\n   * Valid examples are:\n   * ```\n   * 10\n   * '10%'\n   * '10, 10'\n   * '10%, 10'\n   * '10 + 10%'\n   * '10 - 5vh + 3%'\n   * '-10px + 5vh, 5px - 6%'\n   * ```\n   * > **NB**: If you desire to apply offsets to your poppers in a way that may make them overlap\n   * > with their reference element, unfortunately, you will have to disable the `flip` modifier.\n   * > You can read more on this at this [issue](https://github.com/FezVrasta/popper.js/issues/373).\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  offset: {\n    /** @prop {number} order=200 - Index used to define the order of execution */\n    order: 200,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: offset,\n    /** @prop {Number|String} offset=0\n     * The offset value as described in the modifier description\n     */\n    offset: 0,\n  },\n\n  /**\n   * Modifier used to prevent the popper from being positioned outside the boundary.\n   *\n   * A scenario exists where the reference itself is not within the boundaries.<br />\n   * We can say it has \"escaped the boundaries\" — or just \"escaped\".<br />\n   * In this case we need to decide whether the popper should either:\n   *\n   * - detach from the reference and remain \"trapped\" in the boundaries, or\n   * - if it should ignore the boundary and \"escape with its reference\"\n   *\n   * When `escapeWithReference` is set to`true` and reference is completely\n   * outside its boundaries, the popper will overflow (or completely leave)\n   * the boundaries in order to remain attached to the edge of the reference.\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  preventOverflow: {\n    /** @prop {number} order=300 - Index used to define the order of execution */\n    order: 300,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: preventOverflow,\n    /**\n     * @prop {Array} [priority=['left','right','top','bottom']]\n     * Popper will try to prevent overflow following these priorities by default,\n     * then, it could overflow on the left and on top of the `boundariesElement`\n     */\n    priority: ['left', 'right', 'top', 'bottom'],\n    /**\n     * @prop {number} padding=5\n     * Amount of pixel used to define a minimum distance between the boundaries\n     * and the popper. This makes sure the popper always has a little padding\n     * between the edges of its container\n     */\n    padding: 5,\n    /**\n     * @prop {String|HTMLElement} boundariesElement='scrollParent'\n     * Boundaries used by the modifier. Can be `scrollParent`, `window`,\n     * `viewport` or any DOM element.\n     */\n    boundariesElement: 'scrollParent',\n  },\n\n  /**\n   * Modifier used to make sure the reference and its popper stay near each other\n   * without leaving any gap between the two. Especially useful when the arrow is\n   * enabled and you want to ensure that it points to its reference element.\n   * It cares only about the first axis. You can still have poppers with margin\n   * between the popper and its reference element.\n   * @memberof modifiers\n   * @inner\n   */\n  keepTogether: {\n    /** @prop {number} order=400 - Index used to define the order of execution */\n    order: 400,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: keepTogether,\n  },\n\n  /**\n   * This modifier is used to move the `arrowElement` of the popper to make\n   * sure it is positioned between the reference element and its popper element.\n   * It will read the outer size of the `arrowElement` node to detect how many\n   * pixels of conjunction are needed.\n   *\n   * It has no effect if no `arrowElement` is provided.\n   * @memberof modifiers\n   * @inner\n   */\n  arrow: {\n    /** @prop {number} order=500 - Index used to define the order of execution */\n    order: 500,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: arrow,\n    /** @prop {String|HTMLElement} element='[x-arrow]' - Selector or node used as arrow */\n    element: '[x-arrow]',\n  },\n\n  /**\n   * Modifier used to flip the popper's placement when it starts to overlap its\n   * reference element.\n   *\n   * Requires the `preventOverflow` modifier before it in order to work.\n   *\n   * **NOTE:** this modifier will interrupt the current update cycle and will\n   * restart it if it detects the need to flip the placement.\n   * @memberof modifiers\n   * @inner\n   */\n  flip: {\n    /** @prop {number} order=600 - Index used to define the order of execution */\n    order: 600,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: flip,\n    /**\n     * @prop {String|Array} behavior='flip'\n     * The behavior used to change the popper's placement. It can be one of\n     * `flip`, `clockwise`, `counterclockwise` or an array with a list of valid\n     * placements (with optional variations)\n     */\n    behavior: 'flip',\n    /**\n     * @prop {number} padding=5\n     * The popper will flip if it hits the edges of the `boundariesElement`\n     */\n    padding: 5,\n    /**\n     * @prop {String|HTMLElement} boundariesElement='viewport'\n     * The element which will define the boundaries of the popper position.\n     * The popper will never be placed outside of the defined boundaries\n     * (except if `keepTogether` is enabled)\n     */\n    boundariesElement: 'viewport',\n    /**\n     * @prop {Boolean} flipVariations=false\n     * The popper will switch placement variation between `-start` and `-end` when\n     * the reference element overlaps its boundaries.\n     *\n     * The original placement should have a set variation.\n     */\n    flipVariations: false,\n    /**\n     * @prop {Boolean} flipVariationsByContent=false\n     * The popper will switch placement variation between `-start` and `-end` when\n     * the popper element overlaps its reference boundaries.\n     *\n     * The original placement should have a set variation.\n     */\n    flipVariationsByContent: false,\n  },\n\n  /**\n   * Modifier used to make the popper flow toward the inner of the reference element.\n   * By default, when this modifier is disabled, the popper will be placed outside\n   * the reference element.\n   * @memberof modifiers\n   * @inner\n   */\n  inner: {\n    /** @prop {number} order=700 - Index used to define the order of execution */\n    order: 700,\n    /** @prop {Boolean} enabled=false - Whether the modifier is enabled or not */\n    enabled: false,\n    /** @prop {ModifierFn} */\n    fn: inner,\n  },\n\n  /**\n   * Modifier used to hide the popper when its reference element is outside of the\n   * popper boundaries. It will set a `x-out-of-boundaries` attribute which can\n   * be used to hide with a CSS selector the popper when its reference is\n   * out of boundaries.\n   *\n   * Requires the `preventOverflow` modifier before it in order to work.\n   * @memberof modifiers\n   * @inner\n   */\n  hide: {\n    /** @prop {number} order=800 - Index used to define the order of execution */\n    order: 800,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: hide,\n  },\n\n  /**\n   * Computes the style that will be applied to the popper element to gets\n   * properly positioned.\n   *\n   * Note that this modifier will not touch the DOM, it just prepares the styles\n   * so that `applyStyle` modifier can apply it. This separation is useful\n   * in case you need to replace `applyStyle` with a custom implementation.\n   *\n   * This modifier has `850` as `order` value to maintain backward compatibility\n   * with previous versions of Popper.js. Expect the modifiers ordering method\n   * to change in future major versions of the library.\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  computeStyle: {\n    /** @prop {number} order=850 - Index used to define the order of execution */\n    order: 850,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: computeStyle,\n    /**\n     * @prop {Boolean} gpuAcceleration=true\n     * If true, it uses the CSS 3D transformation to position the popper.\n     * Otherwise, it will use the `top` and `left` properties\n     */\n    gpuAcceleration: true,\n    /**\n     * @prop {string} [x='bottom']\n     * Where to anchor the X axis (`bottom` or `top`). AKA X offset origin.\n     * Change this if your popper should grow in a direction different from `bottom`\n     */\n    x: 'bottom',\n    /**\n     * @prop {string} [x='left']\n     * Where to anchor the Y axis (`left` or `right`). AKA Y offset origin.\n     * Change this if your popper should grow in a direction different from `right`\n     */\n    y: 'right',\n  },\n\n  /**\n   * Applies the computed styles to the popper element.\n   *\n   * All the DOM manipulations are limited to this modifier. This is useful in case\n   * you want to integrate Popper.js inside a framework or view library and you\n   * want to delegate all the DOM manipulations to it.\n   *\n   * Note that if you disable this modifier, you must make sure the popper element\n   * has its position set to `absolute` before Popper.js can do its work!\n   *\n   * Just disable this modifier and define your own to achieve the desired effect.\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  applyStyle: {\n    /** @prop {number} order=900 - Index used to define the order of execution */\n    order: 900,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: applyStyle,\n    /** @prop {Function} */\n    onLoad: applyStyleOnLoad,\n    /**\n     * @deprecated since version 1.10.0, the property moved to `computeStyle` modifier\n     * @prop {Boolean} gpuAcceleration=true\n     * If true, it uses the CSS 3D transformation to position the popper.\n     * Otherwise, it will use the `top` and `left` properties\n     */\n    gpuAcceleration: undefined,\n  },\n};\n\n/**\n * The `dataObject` is an object containing all the information used by Popper.js.\n * This object is passed to modifiers and to the `onCreate` and `onUpdate` callbacks.\n * @name dataObject\n * @property {Object} data.instance The Popper.js instance\n * @property {String} data.placement Placement applied to popper\n * @property {String} data.originalPlacement Placement originally defined on init\n * @property {Boolean} data.flipped True if popper has been flipped by flip modifier\n * @property {Boolean} data.hide True if the reference element is out of boundaries, useful to know when to hide the popper\n * @property {HTMLElement} data.arrowElement Node used as arrow by arrow modifier\n * @property {Object} data.styles Any CSS property defined here will be applied to the popper. It expects the JavaScript nomenclature (eg. `marginBottom`)\n * @property {Object} data.arrowStyles Any CSS property defined here will be applied to the popper arrow. It expects the JavaScript nomenclature (eg. `marginBottom`)\n * @property {Object} data.boundaries Offsets of the popper boundaries\n * @property {Object} data.offsets The measurements of popper, reference and arrow elements\n * @property {Object} data.offsets.popper `top`, `left`, `width`, `height` values\n * @property {Object} data.offsets.reference `top`, `left`, `width`, `height` values\n * @property {Object} data.offsets.arrow] `top` and `left` offsets, only one of them will be different from 0\n */\n","/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function shift(data) {\n  const placement = data.placement;\n  const basePlacement = placement.split('-')[0];\n  const shiftvariation = placement.split('-')[1];\n\n  // if shift shiftvariation is specified, run the modifier\n  if (shiftvariation) {\n    const { reference, popper } = data.offsets;\n    const isVertical = ['bottom', 'top'].indexOf(basePlacement) !== -1;\n    const side = isVertical ? 'left' : 'top';\n    const measurement = isVertical ? 'width' : 'height';\n\n    const shiftOffsets = {\n      start: { [side]: reference[side] },\n      end: {\n        [side]: reference[side] + reference[measurement] - popper[measurement],\n      },\n    };\n\n    data.offsets.popper = { ...popper, ...shiftOffsets[shiftvariation] };\n  }\n\n  return data;\n}\n","import getOffsetParent from '../utils/getOffsetParent';\nimport getBoundaries from '../utils/getBoundaries';\nimport getSupportedPropertyName from '../utils/getSupportedPropertyName';\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function preventOverflow(data, options) {\n  let boundariesElement =\n    options.boundariesElement || getOffsetParent(data.instance.popper);\n\n  // If offsetParent is the reference element, we really want to\n  // go one step up and use the next offsetParent as reference to\n  // avoid to make this modifier completely useless and look like broken\n  if (data.instance.reference === boundariesElement) {\n    boundariesElement = getOffsetParent(boundariesElement);\n  }\n\n  // NOTE: DOM access here\n  // resets the popper's position so that the document size can be calculated excluding\n  // the size of the popper element itself\n  const transformProp = getSupportedPropertyName('transform');\n  const popperStyles = data.instance.popper.style; // assignment to help minification\n  const { top, left, [transformProp]: transform } = popperStyles;\n  popperStyles.top = '';\n  popperStyles.left = '';\n  popperStyles[transformProp] = '';\n\n  const boundaries = getBoundaries(\n    data.instance.popper,\n    data.instance.reference,\n    options.padding,\n    boundariesElement,\n    data.positionFixed\n  );\n\n  // NOTE: DOM access here\n  // restores the original style properties after the offsets have been computed\n  popperStyles.top = top;\n  popperStyles.left = left;\n  popperStyles[transformProp] = transform;\n\n  options.boundaries = boundaries;\n\n  const order = options.priority;\n  let popper = data.offsets.popper;\n\n  const check = {\n    primary(placement) {\n      let value = popper[placement];\n      if (\n        popper[placement] < boundaries[placement] &&\n        !options.escapeWithReference\n      ) {\n        value = Math.max(popper[placement], boundaries[placement]);\n      }\n      return { [placement]: value };\n    },\n    secondary(placement) {\n      const mainSide = placement === 'right' ? 'left' : 'top';\n      let value = popper[mainSide];\n      if (\n        popper[placement] > boundaries[placement] &&\n        !options.escapeWithReference\n      ) {\n        value = Math.min(\n          popper[mainSide],\n          boundaries[placement] -\n            (placement === 'right' ? popper.width : popper.height)\n        );\n      }\n      return { [mainSide]: value };\n    },\n  };\n\n  order.forEach(placement => {\n    const side =\n      ['left', 'top'].indexOf(placement) !== -1 ? 'primary' : 'secondary';\n    popper = { ...popper, ...check[side](placement) };\n  });\n\n  data.offsets.popper = popper;\n\n  return data;\n}\n","/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function keepTogether(data) {\n  const { popper, reference } = data.offsets;\n  const placement = data.placement.split('-')[0];\n  const floor = Math.floor;\n  const isVertical = ['top', 'bottom'].indexOf(placement) !== -1;\n  const side = isVertical ? 'right' : 'bottom';\n  const opSide = isVertical ? 'left' : 'top';\n  const measurement = isVertical ? 'width' : 'height';\n\n  if (popper[side] < floor(reference[opSide])) {\n    data.offsets.popper[opSide] =\n      floor(reference[opSide]) - popper[measurement];\n  }\n  if (popper[opSide] > floor(reference[side])) {\n    data.offsets.popper[opSide] = floor(reference[side]);\n  }\n\n  return data;\n}\n","import getClientRect from '../utils/getClientRect';\nimport getOuterSizes from '../utils/getOuterSizes';\nimport isModifierRequired from '../utils/isModifierRequired';\nimport getStyleComputedProperty from '../utils/getStyleComputedProperty';\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function arrow(data, options) {\n  // arrow depends on keepTogether in order to work\n  if (!isModifierRequired(data.instance.modifiers, 'arrow', 'keepTogether')) {\n    return data;\n  }\n\n  let arrowElement = options.element;\n\n  // if arrowElement is a string, suppose it's a CSS selector\n  if (typeof arrowElement === 'string') {\n    arrowElement = data.instance.popper.querySelector(arrowElement);\n\n    // if arrowElement is not found, don't run the modifier\n    if (!arrowElement) {\n      return data;\n    }\n  } else {\n    // if the arrowElement isn't a query selector we must check that the\n    // provided DOM node is child of its popper node\n    if (!data.instance.popper.contains(arrowElement)) {\n      console.warn(\n        'WARNING: `arrow.element` must be child of its popper element!'\n      );\n      return data;\n    }\n  }\n\n  const placement = data.placement.split('-')[0];\n  const { popper, reference } = data.offsets;\n  const isVertical = ['left', 'right'].indexOf(placement) !== -1;\n\n  const len = isVertical ? 'height' : 'width';\n  const sideCapitalized = isVertical ? 'Top' : 'Left';\n  const side = sideCapitalized.toLowerCase();\n  const altSide = isVertical ? 'left' : 'top';\n  const opSide = isVertical ? 'bottom' : 'right';\n  const arrowElementSize = getOuterSizes(arrowElement)[len];\n\n  //\n  // extends keepTogether behavior making sure the popper and its\n  // reference have enough pixels in conjunction\n  //\n\n  // top/left side\n  if (reference[opSide] - arrowElementSize < popper[side]) {\n    data.offsets.popper[side] -=\n      popper[side] - (reference[opSide] - arrowElementSize);\n  }\n  // bottom/right side\n  if (reference[side] + arrowElementSize > popper[opSide]) {\n    data.offsets.popper[side] +=\n      reference[side] + arrowElementSize - popper[opSide];\n  }\n  data.offsets.popper = getClientRect(data.offsets.popper);\n\n  // compute center of the popper\n  const center = reference[side] + reference[len] / 2 - arrowElementSize / 2;\n\n  // Compute the sideValue using the updated popper offsets\n  // take popper margin in account because we don't have this info available\n  const css = getStyleComputedProperty(data.instance.popper);\n  const popperMarginSide = parseFloat(css[`margin${sideCapitalized}`]);\n  const popperBorderSide = parseFloat(css[`border${sideCapitalized}Width`]);\n  let sideValue =\n    center - data.offsets.popper[side] - popperMarginSide - popperBorderSide;\n\n  // prevent arrowElement from being placed not contiguously to its popper\n  sideValue = Math.max(Math.min(popper[len] - arrowElementSize, sideValue), 0);\n\n  data.arrowElement = arrowElement;\n  data.offsets.arrow = {\n    [side]: Math.round(sideValue),\n    [altSide]: '', // make sure to unset any eventual altSide value from the DOM node\n  };\n\n  return data;\n}\n","/**\n * Get the opposite placement variation of the given one\n * @method\n * @memberof Popper.Utils\n * @argument {String} placement variation\n * @returns {String} flipped placement variation\n */\nexport default function getOppositeVariation(variation) {\n  if (variation === 'end') {\n    return 'start';\n  } else if (variation === 'start') {\n    return 'end';\n  }\n  return variation;\n}\n","import getClientRect from '../utils/getClientRect';\nimport getOppositePlacement from '../utils/getOppositePlacement';\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function inner(data) {\n  const placement = data.placement;\n  const basePlacement = placement.split('-')[0];\n  const { popper, reference } = data.offsets;\n  const isHoriz = ['left', 'right'].indexOf(basePlacement) !== -1;\n\n  const subtractLength = ['top', 'left'].indexOf(basePlacement) === -1;\n\n  popper[isHoriz ? 'left' : 'top'] =\n    reference[basePlacement] -\n    (subtractLength ? popper[isHoriz ? 'width' : 'height'] : 0);\n\n  data.placement = getOppositePlacement(placement);\n  data.offsets.popper = getClientRect(popper);\n\n  return data;\n}\n","import isModifierRequired from '../utils/isModifierRequired';\nimport find from '../utils/find';\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function hide(data) {\n  if (!isModifierRequired(data.instance.modifiers, 'hide', 'preventOverflow')) {\n    return data;\n  }\n\n  const refRect = data.offsets.reference;\n  const bound = find(\n    data.instance.modifiers,\n    modifier => modifier.name === 'preventOverflow'\n  ).boundaries;\n\n  if (\n    refRect.bottom < bound.top ||\n    refRect.left > bound.right ||\n    refRect.top > bound.bottom ||\n    refRect.right < bound.left\n  ) {\n    // Avoid unnecessary DOM access if visibility hasn't changed\n    if (data.hide === true) {\n      return data;\n    }\n\n    data.hide = true;\n    data.attributes['x-out-of-boundaries'] = '';\n  } else {\n    // Avoid unnecessary DOM access if visibility hasn't changed\n    if (data.hide === false) {\n      return data;\n    }\n\n    data.hide = false;\n    data.attributes['x-out-of-boundaries'] = false;\n  }\n\n  return data;\n}\n","/**\n * @function\n * @memberof Popper.Utils\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Boolean} shouldRound - If the offsets should be rounded at all\n * @returns {Object} The popper's position offsets rounded\n *\n * The tale of pixel-perfect positioning. It's still not 100% perfect, but as\n * good as it can be within reason.\n * Discussion here: https://github.com/FezVrasta/popper.js/pull/715\n *\n * Low DPI screens cause a popper to be blurry if not using full pixels (Safari\n * as well on High DPI screens).\n *\n * Firefox prefers no rounding for positioning and does not have blurriness on\n * high DPI screens.\n *\n * Only horizontal placement and left/right values need to be considered.\n */\nexport default function getRoundedOffsets(data, shouldRound) {\n  const { popper, reference } = data.offsets;\n  const { round, floor } = Math;\n  const noRound = v => v;\n  \n  const referenceWidth = round(reference.width);\n  const popperWidth = round(popper.width);\n  \n  const isVertical = ['left', 'right'].indexOf(data.placement) !== -1;\n  const isVariation = data.placement.indexOf('-') !== -1;\n  const sameWidthParity = referenceWidth % 2 === popperWidth % 2;\n  const bothOddWidth = referenceWidth % 2 === 1 && popperWidth % 2 === 1;\n\n  const horizontalToInteger = !shouldRound\n    ? noRound\n    : isVertical || isVariation || sameWidthParity\n    ? round\n    : floor;\n  const verticalToInteger = !shouldRound ? noRound : round;\n\n  return {\n    left: horizontalToInteger(\n      bothOddWidth && !isVariation && shouldRound\n        ? popper.left - 1\n        : popper.left\n    ),\n    top: verticalToInteger(popper.top),\n    bottom: verticalToInteger(popper.bottom),\n    right: horizontalToInteger(popper.right),\n  };\n}\n","import setStyles from '../utils/setStyles';\nimport setAttributes from '../utils/setAttributes';\nimport getReferenceOffsets from '../utils/getReferenceOffsets';\nimport computeAutoPlacement from '../utils/computeAutoPlacement';\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} data.styles - List of style properties - values to apply to popper element\n * @argument {Object} data.attributes - List of attribute properties - values to apply to popper element\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The same data object\n */\nexport default function applyStyle(data) {\n  // any property present in `data.styles` will be applied to the popper,\n  // in this way we can make the 3rd party modifiers add custom styles to it\n  // Be aware, modifiers could override the properties defined in the previous\n  // lines of this modifier!\n  setStyles(data.instance.popper, data.styles);\n\n  // any property present in `data.attributes` will be applied to the popper,\n  // they will be set as HTML attributes of the element\n  setAttributes(data.instance.popper, data.attributes);\n\n  // if arrowElement is defined and arrowStyles has some properties\n  if (data.arrowElement && Object.keys(data.arrowStyles).length) {\n    setStyles(data.arrowElement, data.arrowStyles);\n  }\n\n  return data;\n}\n\n/**\n * Set the x-placement attribute before everything else because it could be used\n * to add margins to the popper margins needs to be calculated to get the\n * correct popper offsets.\n * @method\n * @memberof Popper.modifiers\n * @param {HTMLElement} reference - The reference element used to position the popper\n * @param {HTMLElement} popper - The HTML element used as popper\n * @param {Object} options - Popper.js options\n */\nexport function applyStyleOnLoad(\n  reference,\n  popper,\n  options,\n  modifierOptions,\n  state\n) {\n  // compute reference element offsets\n  const referenceOffsets = getReferenceOffsets(state, popper, reference, options.positionFixed);\n\n  // compute auto placement, store placement inside the data object,\n  // modifiers will be able to edit `placement` if needed\n  // and refer to originalPlacement to know the original value\n  const placement = computeAutoPlacement(\n    options.placement,\n    referenceOffsets,\n    popper,\n    reference,\n    options.modifiers.flip.boundariesElement,\n    options.modifiers.flip.padding\n  );\n\n  popper.setAttribute('x-placement', placement);\n\n  // Apply `position` to popper before anything else because\n  // without the position applied we can't guarantee correct computations\n  setStyles(popper, { position: options.positionFixed ? 'fixed' : 'absolute' });\n\n  return options;\n}\n","/**\n * Set the attributes to the given popper\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element - Element to apply the attributes to\n * @argument {Object} styles\n * Object with a list of properties and values which will be applied to the element\n */\nexport default function setAttributes(element, attributes) {\n  Object.keys(attributes).forEach(function(prop) {\n    const value = attributes[prop];\n    if (value !== false) {\n      element.setAttribute(prop, attributes[prop]);\n    } else {\n      element.removeAttribute(prop);\n    }\n  });\n}\n","import modifiers from '../modifiers/index';\n\n/**\n * Default options provided to Popper.js constructor.<br />\n * These can be overridden using the `options` argument of Popper.js.<br />\n * To override an option, simply pass an object with the same\n * structure of the `options` object, as the 3rd argument. For example:\n * ```\n * new Popper(ref, pop, {\n *   modifiers: {\n *     preventOverflow: { enabled: false }\n *   }\n * })\n * ```\n * @type {Object}\n * @static\n * @memberof Popper\n */\nexport default {\n  /**\n   * Popper's placement.\n   * @prop {Popper.placements} placement='bottom'\n   */\n  placement: 'bottom',\n\n  /**\n   * Set this to true if you want popper to position it self in 'fixed' mode\n   * @prop {Boolean} positionFixed=false\n   */\n  positionFixed: false,\n\n  /**\n   * Whether events (resize, scroll) are initially enabled.\n   * @prop {Boolean} eventsEnabled=true\n   */\n  eventsEnabled: true,\n\n  /**\n   * Set to true if you want to automatically remove the popper when\n   * you call the `destroy` method.\n   * @prop {Boolean} removeOnDestroy=false\n   */\n  removeOnDestroy: false,\n\n  /**\n   * Callback called when the popper is created.<br />\n   * By default, it is set to no-op.<br />\n   * Access Popper.js instance with `data.instance`.\n   * @prop {onCreate}\n   */\n  onCreate: () => {},\n\n  /**\n   * Callback called when the popper is updated. This callback is not called\n   * on the initialization/creation of the popper, but only on subsequent\n   * updates.<br />\n   * By default, it is set to no-op.<br />\n   * Access Popper.js instance with `data.instance`.\n   * @prop {onUpdate}\n   */\n  onUpdate: () => {},\n\n  /**\n   * List of modifiers used to modify the offsets before they are applied to the popper.\n   * They provide most of the functionalities of Popper.js.\n   * @prop {modifiers}\n   */\n  modifiers,\n};\n\n/**\n * @callback onCreate\n * @param {dataObject} data\n */\n\n/**\n * @callback onUpdate\n * @param {dataObject} data\n */\n","// Utils\nimport debounce from './utils/debounce';\nimport isFunction from './utils/isFunction';\n\n// Methods\nimport update from './methods/update';\nimport destroy from './methods/destroy';\nimport enableEventListeners from './methods/enableEventListeners';\nimport disableEventListeners from './methods/disableEventListeners';\nimport Defaults from './methods/defaults';\nimport placements from './methods/placements';\n\nexport default class Popper {\n  /**\n   * Creates a new Popper.js instance.\n   * @class Popper\n   * @param {Element|referenceObject} reference - The reference element used to position the popper\n   * @param {Element} popper - The HTML / XML element used as the popper\n   * @param {Object} options - Your custom options to override the ones defined in [Defaults](#defaults)\n   * @return {Object} instance - The generated Popper.js instance\n   */\n  constructor(reference, popper, options = {}) {\n    // make update() debounced, so that it only runs at most once-per-tick\n    this.update = debounce(this.update.bind(this));\n\n    // with {} we create a new object with the options inside it\n    this.options = { ...Popper.Defaults, ...options };\n\n    // init state\n    this.state = {\n      isDestroyed: false,\n      isCreated: false,\n      scrollParents: [],\n    };\n\n    // get reference and popper elements (allow jQuery wrappers)\n    this.reference = reference && reference.jquery ? reference[0] : reference;\n    this.popper = popper && popper.jquery ? popper[0] : popper;\n\n    // Deep merge modifiers options\n    this.options.modifiers = {};\n    Object.keys({\n      ...Popper.Defaults.modifiers,\n      ...options.modifiers,\n    }).forEach(name => {\n      this.options.modifiers[name] = {\n        // If it's a built-in modifier, use it as base\n        ...(Popper.Defaults.modifiers[name] || {}),\n        // If there are custom options, override and merge with default ones\n        ...(options.modifiers ? options.modifiers[name] : {}),\n      };\n    });\n\n    // Refactoring modifiers' list (Object => Array)\n    this.modifiers = Object.keys(this.options.modifiers)\n      .map(name => ({\n        name,\n        ...this.options.modifiers[name],\n      }))\n      // sort the modifiers by order\n      .sort((a, b) => a.order - b.order);\n\n    // modifiers have the ability to execute arbitrary code when Popper.js get inited\n    // such code is executed in the same order of its modifier\n    // they could add new properties to their options configuration\n    // BE AWARE: don't add options to `options.modifiers.name` but to `modifierOptions`!\n    this.modifiers.forEach(modifierOptions => {\n      if (modifierOptions.enabled && isFunction(modifierOptions.onLoad)) {\n        modifierOptions.onLoad(\n          this.reference,\n          this.popper,\n          this.options,\n          modifierOptions,\n          this.state\n        );\n      }\n    });\n\n    // fire the first update to position the popper in the right place\n    this.update();\n\n    const eventsEnabled = this.options.eventsEnabled;\n    if (eventsEnabled) {\n      // setup event listeners, they will take care of update the position in specific situations\n      this.enableEventListeners();\n    }\n\n    this.state.eventsEnabled = eventsEnabled;\n  }\n\n  // We can't use class properties because they don't get listed in the\n  // class prototype and break stuff like Sinon stubs\n  update() {\n    return update.call(this);\n  }\n  destroy() {\n    return destroy.call(this);\n  }\n  enableEventListeners() {\n    return enableEventListeners.call(this);\n  }\n  disableEventListeners() {\n    return disableEventListeners.call(this);\n  }\n\n  /**\n   * Schedules an update. It will run on the next UI update available.\n   * @method scheduleUpdate\n   * @memberof Popper\n   */\n  scheduleUpdate = () => requestAnimationFrame(this.update);\n\n  /**\n   * Collection of utilities useful when writing custom modifiers.\n   * Starting from version 1.7, this method is available only if you\n   * include `popper-utils.js` before `popper.js`.\n   *\n   * **DEPRECATION**: This way to access PopperUtils is deprecated\n   * and will be removed in v2! Use the PopperUtils module directly instead.\n   * Due to the high instability of the methods contained in Utils, we can't\n   * guarantee them to follow semver. Use them at your own risk!\n   * @static\n   * @private\n   * @type {Object}\n   * @deprecated since version 1.8\n   * @member Utils\n   * @memberof Popper\n   */\n  static Utils = (typeof window !== 'undefined' ? window : global).PopperUtils;\n\n  static placements = placements;\n\n  static Defaults = Defaults;\n}\n\n/**\n * The `referenceObject` is an object that provides an interface compatible with Popper.js\n * and lets you use it as replacement of a real DOM node.<br />\n * You can use this method to position a popper relatively to a set of coordinates\n * in case you don't have a DOM node to use as reference.\n *\n * ```\n * new Popper(referenceObject, popperNode);\n * ```\n *\n * NB: This feature isn't supported in Internet Explorer 10.\n * @name referenceObject\n * @property {Function} data.getBoundingClientRect\n * A function that returns a set of coordinates compatible with the native `getBoundingClientRect` method.\n * @property {number} data.clientWidth\n * An ES6 getter that will return the width of the virtual reference element.\n * @property {number} data.clientHeight\n * An ES6 getter that will return the height of the virtual reference element.\n */\n"],"sourceRoot":""}