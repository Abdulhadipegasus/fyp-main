{"version":3,"sources":["config/supabaseClient.js","pages/dashboard/Analytics/EmployeeInfo.tsx","pages/dashboard/Analytics/index.tsx","components/PageTitle.tsx"],"names":["supabase","createClient","process","EmployeeInfo","_ref","empId","empName","designation","empTagBattery","empStatus","sensorId","sensorStatus","lastUpdate","styles","container","display","flexDirection","alignItems","justifyContent","width","padding","backgroundColor","borderRadius","boxShadow","title","marginBottom","info","button","marginTop","color","border","cursor","fetchError","setFetchError","useState","fypData","setFypData","mapping","useEffect","async","data","error","from","select","order","ascending","uniqueNamesMap","Map","forEach","record","name","Employee_Name","trim","has","Timestamp","get","set","uniqueRecords","Array","values","console","log","fetchFypData","_jsxs","style","children","_jsx","map","fontSize","RSSI","id","AnalyticsDashboard","showAlert","setShowAlert","_Fragment","PageTitle","breadCrumbItems","label","path","active","props","appSelector","useRedux","layoutType","state","Layout","Row","Col","xs","className","classNames","LayoutTypes","LAYOUT_HORIZONTAL","LAYOUT_DETACHED","Breadcrumb","listProps","Item","href","item","index"],"mappings":"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","file":"static/js/143.56bc34e9.chunk.js","sourcesContent":["\r\nimport { createClient } from '@supabase/supabase-js'\r\n\r\nconst supabaseUrl = process.env.REACT_APP_SUPABASE_URL\r\nconst supabaseKey = process.env.REACT_APP_ANION_KEY\r\nconst supabase = createClient(supabaseUrl, supabaseKey)\r\n\r\nexport default supabase","import React, { useEffect, useState } from \"react\";\r\n// supabase\r\nimport supabase from \"../../../config/supabaseClient\";\r\ninterface EmployeeInfoProps {\r\n  empId: string;\r\n  empName: string;\r\n  designation: string;\r\n  empTagBattery: string;\r\n  empStatus: string;\r\n  sensorId: string;\r\n  sensorStatus: string;\r\n  lastUpdate: string;\r\n}\r\n\r\nconst EmployeeInfo: React.FC<EmployeeInfoProps> = ({\r\n  empId,\r\n  empName,\r\n  designation,\r\n  empTagBattery,\r\n  empStatus,\r\n  sensorId,\r\n  sensorStatus,\r\n  lastUpdate,\r\n}) => {\r\n  const styles: { [key: string]: React.CSSProperties } = {\r\n    container: {\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n      alignItems: \"center\",\r\n      justifyContent: \"center\",\r\n      width: \"100%\",\r\n      padding: \"50px\",\r\n      backgroundColor: \"#f8f9fa\",\r\n      borderRadius: \"5px\",\r\n      boxShadow: \"0 0 10px rgba(0, 0, 0, 0.1)\",\r\n    },\r\n    title: {\r\n      marginBottom: \"20px\",\r\n    },\r\n    info: {\r\n      display: \"flex\",\r\n      justifyContent: \"space-between\",\r\n      width: \"100%\",\r\n      marginBottom: \"10px\",\r\n    },\r\n    button: {\r\n      marginTop: \"20px\",\r\n      padding: \"10px 20px\",\r\n      backgroundColor: \"#007bff\",\r\n      color: \"#fff\",\r\n      border: \"none\",\r\n      borderRadius: \"5px\",\r\n      cursor: \"pointer\",\r\n    },\r\n  };\r\n  const [fetchError, setFetchError] = useState(\"\");\r\n  const [fypData, setFypData] = useState<any>(\"\");\r\n  const myStyle = {\r\n    width: \"100%\",\r\n  };\r\n  const mapping = {\r\n    marginBottom: \"60px\",\r\n    border: \"1px solid blue\",\r\n    padding: \"30px\",\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchFypData = async () => {\r\n      try {\r\n        const { data, error } = await supabase\r\n          .from(\"main\")\r\n          .select(\"*\")\r\n          .order(\"Timestamp\", { ascending: false }); // Order by timestamp_column in descending order\r\n\r\n        if (error) {\r\n          throw error;\r\n        }\r\n\r\n        if (data) {\r\n          const uniqueNamesMap = new Map();\r\n\r\n          // Iterate over the data and update the map with the latest record for each unique name\r\n          data.forEach((record) => {\r\n            const name = record.Employee_Name.trim();\r\n\r\n            // If the name is not in the map or if the current record is newer, update the map\r\n            if (\r\n              !uniqueNamesMap.has(name) ||\r\n              record.Timestamp > uniqueNamesMap.get(name).Timestamp\r\n            ) {\r\n              uniqueNamesMap.set(name, record);\r\n            }\r\n          });\r\n\r\n          // Extract the values from the map to get unique records with the latest values\r\n          const uniqueRecords = Array.from(uniqueNamesMap.values());\r\n          setFypData(uniqueRecords);\r\n          setFetchError(\"\");\r\n          console.log(uniqueRecords);\r\n        }\r\n      } catch (error) {\r\n        setFetchError(\"Could not fetch data\");\r\n        console.error(error);\r\n      }\r\n    };\r\n\r\n    fetchFypData();\r\n  }, []);\r\n\r\n  return (\r\n    <div style={styles.container}>\r\n      <h1 style={styles.title}>Live Tracking</h1>\r\n      {fetchError && <p>{fetchError}</p>}\r\n      {fypData && (\r\n        <div style={myStyle}>\r\n          {fypData.map((data: any) => (\r\n            <div key={data.id} style={mapping}>\r\n              {/* <div style={styles.info}>\r\n                <span>Emp ID:</span>\r\n                <span>{data.empId}</span>\r\n              </div> */}\r\n              <div style={styles.info}>\r\n                <span>Emp Name:</span>\r\n                <span style={{ fontSize: \"30px\" }}>{data.Employee_Name}</span>\r\n              </div>\r\n              <div style={styles.info}>\r\n                <span>Designation:</span>\r\n                <span>Worker</span>\r\n              </div>\r\n              <div style={styles.info}>\r\n                <span>Emp Tag Battery:</span>\r\n                <span style={{ color: \"green\" }}>80%</span>\r\n              </div>\r\n              <div style={styles.info}>\r\n                <span>Location:</span>\r\n                <span style={{ color: \"red\" }}>Warehouse</span>\r\n              </div>\r\n              <div style={styles.info}>\r\n                <span>Sensor ID:</span>\r\n                <span>{data.RSSI}</span>\r\n              </div>\r\n              <div style={styles.info}>\r\n                <span>Employee Status:</span>\r\n                <span style={{ color: \"green\" }}>\r\n                  {data.RSSI ? \"Active\" : \"Offline\"}\r\n                </span>\r\n              </div>\r\n              {/* <div style={styles.info}>\r\n                <span>Last Update:</span>\r\n                <span>{data.lastUpdate}</span>\r\n              </div> */}\r\n              {/* ... */}\r\n              {/* <button style={styles.button}>Detail</button> */}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport defaultÂ EmployeeInfo;","import React, { useState } from 'react';\r\nimport { Alert, Col, Row } from 'react-bootstrap';\r\n\r\n// component\r\nimport PageTitle from '../../../components/PageTitle';\r\nimport EmployeeInfo from './EmployeeInfo'; // import the EmployeeInfo component\r\n\r\nimport Statistics from './Statistics';\r\nimport SessionOverview from './SessionOverview';\r\nimport BrowserUsage from './BrowserUsage';\r\nimport TrafficSources from './TrafficSources';\r\nimport Channels from './Channels';\r\nimport SocialMediaTraffic from './SocialMediaTraffic';\r\nimport EngagementOverviews from './EngagementOverviews';\r\n\r\n// dummy data\r\nimport {\r\n    sessionSummary,\r\n    browserUsageData,\r\n    trafficSources,\r\n    channels,\r\n    socialMediaTraffic,\r\n    engagementOverview,\r\n} from './data';\r\n\r\nconst AnalyticsDashboard = () => {\r\n    const [showAlert, setShowAlert] = useState<boolean>(true);\r\n\r\n    return (\r\n        <>\r\n            <PageTitle\r\n                breadCrumbItems={[\r\n                    { label: 'Tracking', path: '/dashboard/analytics' },\r\n                    { label: 'Employees Tracking', path: 'dashboard/analytics', active: true },\r\n                ]}\r\n                title={'Employees Tracking'}\r\n            />\r\n\r\n            <EmployeeInfo\r\n                empId=\"1412\"\r\n                empName=\"Raza\"\r\n                designation=\"Support\"\r\n                empTagBattery=\"80%\"\r\n                empStatus=\"Not at assigned location\"\r\n                sensorId=\"S12T25\"\r\n                sensorStatus=\"Active\"\r\n                lastUpdate=\"23 Feb 2023 10:23:06\"\r\n            />\r\n        </>    \r\n    );\r\n};\r\n\r\nexport default AnalyticsDashboard;\r\n","import React from 'react';\r\nimport { Row, Col, Breadcrumb } from 'react-bootstrap';\r\nimport classNames from 'classnames';\r\n\r\n// custom hoook\r\nimport { useRedux } from '../hooks/';\r\n\r\n// constants\r\nimport { LayoutTypes } from '../constants/';\r\n\r\ninterface BreadcrumbItems {\r\n    label: string;\r\n    path: string;\r\n    active?: boolean;\r\n}\r\n\r\ninterface PageTitleProps {\r\n    breadCrumbItems: Array<BreadcrumbItems>;\r\n    title: string;\r\n}\r\n\r\n/**\r\n * PageTitle\r\n */\r\nconst PageTitle = (props: PageTitleProps) => {\r\n    const { appSelector } = useRedux();\r\n\r\n    const { layoutType } = appSelector((state) => ({\r\n        layoutType: state.Layout.layoutType,\r\n    }));\r\n\r\n    return (\r\n        <Row>\r\n            <Col xs={12}>\r\n                <div\r\n                    className={classNames('page-title-box', {\r\n                        'page-title-box-alt':\r\n                            layoutType === LayoutTypes.LAYOUT_HORIZONTAL || layoutType === LayoutTypes.LAYOUT_DETACHED,\r\n                    })}\r\n                >\r\n                    <h4 className=\"page-title\">{props.title}</h4>\r\n                    <div className=\"page-title-right\">\r\n                        <Breadcrumb listProps={{ className: 'm-0' }}>\r\n                            <Breadcrumb.Item href=\"/\">Minton</Breadcrumb.Item>\r\n\r\n                            {(props['breadCrumbItems'] || []).map((item, index) => {\r\n                                return item.active ? (\r\n                                    <Breadcrumb.Item active key={index}>\r\n                                        {item.label}\r\n                                    </Breadcrumb.Item>\r\n                                ) : (\r\n                                    <Breadcrumb.Item key={index} href={item.path}>\r\n                                        {item.label}\r\n                                    </Breadcrumb.Item>\r\n                                );\r\n                            })}\r\n                        </Breadcrumb>\r\n                    </div>\r\n                </div>\r\n            </Col>\r\n        </Row>\r\n    );\r\n};\r\n\r\nexport default PageTitle;\r\n"],"sourceRoot":""}