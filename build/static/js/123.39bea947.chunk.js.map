{"version":3,"sources":["pages/uikit/Cards.tsx","components/PageTitle.tsx","assets/images/small/img-2.jpg","assets/images/small/img-3.jpg","assets/images/small/img-1.jpg","assets/images/small/img-4.jpg","assets/images/small/img-5.jpg","assets/images/small/img-6.jpg","assets/images/small/img-7.jpg"],"names":["CardWithImage","_jsxs","Card","children","_jsx","Img","src","cardImg","variant","className","Body","Title","as","Text","Link","to","CardWithImage2","cardImg3","ListGroup","Item","href","CardWithImage3","cardImg4","CardWithTitleAndImage","Subtitle","cardImg2","CardWithSpecialTitle","CardWithHeader","Header","CardWithHeaderAndQuote","title","CardWithHeaderAndFooter","Footer","CardWithImageCaps","_ref","position","image","_Fragment","CardWithImageOverlay","cardImg7","alt","ImgOverlay","ColoredCards","Col","md","map","color","index","classNames","concat","ColoredTextCards","_ref2","name","BorderdCards","item","lg","BackGroundCards","HorizontalCards","Row","cardImg5","CardWithGroup","_ref3","text","subtext","CardsWithNavigation","_ref4","Nav","defaultActiveKey","disabled","Button","GridCards","cardImg6","Cards","CardGroupDetails","id","React","Fragment","PageTitle","breadCrumbItems","label","path","active","xl","xs","CardGroup","props","appSelector","useRedux","layoutType","state","Layout","LayoutTypes","LAYOUT_HORIZONTAL","LAYOUT_DETACHED","Breadcrumb","listProps"],"mappings":"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","file":"static/js/123.39bea947.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Row, Col, Card, CardGroup, ListGroup, Nav, Button } from 'react-bootstrap';\r\nimport classNames from 'classnames';\r\n\r\n// components\r\nimport PageTitle from '../../components/PageTitle';\r\n\r\n// images\r\nimport cardImg from '../../assets/images/small/img-1.jpg';\r\nimport cardImg2 from '../../assets/images/small/img-4.jpg';\r\nimport cardImg3 from '../../assets/images/small/img-2.jpg';\r\nimport cardImg4 from '../../assets/images/small/img-3.jpg';\r\nimport cardImg5 from '../../assets/images/small/img-5.jpg';\r\nimport cardImg6 from '../../assets/images/small/img-6.jpg';\r\nimport cardImg7 from '../../assets/images/small/img-7.jpg';\r\n\r\ninterface CardGroupDetailsTypes {\r\n    id: number;\r\n    image: string;\r\n    title: string;\r\n    text: string;\r\n    subtext: string;\r\n}\r\n\r\nconst CardWithImage = () => {\r\n    return (\r\n        <Card>\r\n            <Card.Img src={cardImg} variant=\"top\" className=\"img-fluid\" />\r\n            <Card.Body>\r\n                <Card.Title as=\"h5\">Card title</Card.Title>\r\n                <Card.Text>\r\n                    Some quick example text to build on the card title and make up the bulk of the card's content. With\r\n                    supporting text below as a natural lead-in to additional content.\r\n                </Card.Text>\r\n                <Link to=\"#\" className=\"btn btn-primary waves-effect waves-light\">\r\n                    Button\r\n                </Link>\r\n            </Card.Body>\r\n        </Card>\r\n    );\r\n};\r\n\r\nconst CardWithImage2 = () => {\r\n    return (\r\n        <Card>\r\n            <Card.Img src={cardImg3} variant=\"top\" className=\"img-fluid\" />\r\n            <Card.Body>\r\n                <Card.Title as=\"h5\">Card title</Card.Title>\r\n                <Card.Text>Some quick example text to build on the card title.</Card.Text>\r\n            </Card.Body>\r\n\r\n            <ListGroup variant=\"flush\">\r\n                <ListGroup.Item>Dapibus ac facilisis in</ListGroup.Item>\r\n            </ListGroup>\r\n\r\n            <Card.Body>\r\n                <Card.Link href=\"#\" className=\"text-custom\">\r\n                    Card link\r\n                </Card.Link>\r\n                <Card.Link href=\"#\" className=\"text-custom\">\r\n                    Another link\r\n                </Card.Link>\r\n            </Card.Body>\r\n        </Card>\r\n    );\r\n};\r\n\r\nconst CardWithImage3 = () => {\r\n    return (\r\n        <Card>\r\n            <Card.Img src={cardImg4} variant=\"top\" className=\"img-fluid\" />\r\n            <Card.Body>\r\n                <Card.Text>\r\n                    Some quick example text to build on the card title and make up the bulk of the card's content. With\r\n                    supporting text below as a natural lead-in to additional content.\r\n                </Card.Text>\r\n                <Link to=\"#\" className=\"btn btn-primary waves-effect waves-light\">\r\n                    Button\r\n                </Link>\r\n            </Card.Body>\r\n        </Card>\r\n    );\r\n};\r\n\r\nconst CardWithTitleAndImage = () => {\r\n    return (\r\n        <Card>\r\n            <Card.Body>\r\n                <Card.Title as=\"h5\">Card title</Card.Title>\r\n                <Card.Subtitle as=\"h6\" className=\"text-muted\">\r\n                    Support card subtitle\r\n                </Card.Subtitle>\r\n            </Card.Body>\r\n            <Card.Img src={cardImg2} variant=\"top\" className=\"img-fluid\" />\r\n            <Card.Body>\r\n                <Card.Text>\r\n                    Some quick example text to build on the card title and make up the bulk of the card's content.\r\n                </Card.Text>\r\n                <Card.Link href=\"#\" className=\"text-custom\">\r\n                    Card link\r\n                </Card.Link>\r\n                <Card.Link href=\"#\" className=\"text-custom\">\r\n                    Another link\r\n                </Card.Link>\r\n            </Card.Body>\r\n        </Card>\r\n    );\r\n};\r\n\r\nconst CardWithSpecialTitle = () => {\r\n    return (\r\n        <Card as={Card.Body}>\r\n            <Card.Title as=\"h5\">Special title treatment</Card.Title>\r\n            <Card.Text>With supporting text below as a natural lead-in to additional content.</Card.Text>\r\n            <Link to=\"#\" className=\"btn btn-primary waves-effect waves-light\">\r\n                Go somewhere\r\n            </Link>\r\n        </Card>\r\n    );\r\n};\r\n\r\nconst CardWithHeader = () => {\r\n    return (\r\n        <Card>\r\n            <Card.Header as=\"h5\">Featured</Card.Header>\r\n            <Card.Body>\r\n                <Card.Title as=\"h5\">Special title treatment</Card.Title>\r\n                <Card.Text>With supporting text below as a natural lead-in to additional content.</Card.Text>\r\n                <Link to=\"#\" className=\"btn btn-primary waves-effect waves-light\">\r\n                    Go somewhere\r\n                </Link>\r\n            </Card.Body>\r\n        </Card>\r\n    );\r\n};\r\n\r\nconst CardWithHeaderAndQuote = () => {\r\n    return (\r\n        <Card>\r\n            <Card.Header>Quote</Card.Header>\r\n            <Card.Body>\r\n                <blockquote className=\"card-bodyquote mb-0\">\r\n                    <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer posuere erat a ante.</p>\r\n                    <footer className=\"blockquote-footer\">\r\n                        Someone famous in <cite title=\"Source Title\">Source Title</cite>\r\n                    </footer>\r\n                </blockquote>\r\n            </Card.Body>\r\n        </Card>\r\n    );\r\n};\r\n\r\nconst CardWithHeaderAndFooter = () => {\r\n    return (\r\n        <Card className=\"text-xs-center\">\r\n            <Card.Header>Featured</Card.Header>\r\n            <Card.Body>\r\n                <Card.Text>\r\n                    With supporting text below as a natural lead-in to additional content. Lorem ipsum dolor sit amet,\r\n                    consectetur adipiscing elit.\r\n                </Card.Text>\r\n            </Card.Body>\r\n            <Card.Footer className=\"text-muted\">2 days ago</Card.Footer>\r\n        </Card>\r\n    );\r\n};\r\n\r\nconst CardWithImageCaps = ({ position, image }: { position: string; image: string }) => {\r\n    return (\r\n        <>\r\n            <Card>\r\n                {position === 'top' && <Card.Img variant={position} src={image} className=\"img-fluid\" />}\r\n                <Card.Body>\r\n                    <Card.Title as={'h5'}>Card title</Card.Title>\r\n                    <Card.Text>\r\n                        This is a wider card with supporting text below as a natural lead-in to additional content. This\r\n                        content is a little bit longer.\r\n                    </Card.Text>\r\n                    <Card.Text>\r\n                        <small className=\"text-muted\">Last updated 3 mins ago</small>\r\n                    </Card.Text>\r\n                </Card.Body>\r\n                {position === 'bottom' && <Card.Img variant={position} src={image} className=\"img-fluid\" />}\r\n            </Card>\r\n        </>\r\n    );\r\n};\r\n\r\nconst CardWithImageOverlay = () => {\r\n    return (\r\n        <>\r\n            <Card className=\"text-white\">\r\n                <Card.Img src={cardImg7} alt=\"\" />\r\n                <Card.ImgOverlay>\r\n                    <Card.Title as=\"h5\" className=\"text-white\">\r\n                        Card title\r\n                    </Card.Title>\r\n                    <Card.Text>\r\n                        This is a wider card with supporting text below as a natural lead-in to additional content. This\r\n                        content is a little bit longer.\r\n                    </Card.Text>\r\n                    <Card.Text>\r\n                        <small>Last updated 3 mins ago</small>\r\n                    </Card.Text>\r\n                </Card.ImgOverlay>\r\n            </Card>\r\n        </>\r\n    );\r\n};\r\n\r\nconst ColoredCards = () => {\r\n    const colors = ['primary', 'success', 'info', 'warning', 'danger', 'purple', 'pink', 'dark'];\r\n\r\n    return (\r\n        <>\r\n            <Col md={4}>\r\n                <Card className=\"text-white bg-secondary\">\r\n                    <Card.Body>\r\n                        <Card.Title as=\"h5\" className=\"text-white\">\r\n                            Special title treatment\r\n                        </Card.Title>\r\n                        <Card.Text>With supporting text below as a natural lead-in to additional content.</Card.Text>\r\n                        <Link to=\"#\" className=\"btn btn-light btn-sm waves-effect\">\r\n                            Button\r\n                        </Link>\r\n                    </Card.Body>\r\n                </Card>\r\n            </Col>\r\n            {(colors || []).map((color, index) => {\r\n                return (\r\n                    <Col md={4} key={index}>\r\n                        <Card className={classNames('text-white', 'text-xs-center', [`bg-${color}`])}>\r\n                            <Card.Body>\r\n                                <blockquote className=\"card-bodyquote mb-0\">\r\n                                    <p>\r\n                                        Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer posuere erat a\r\n                                        ante.\r\n                                    </p>\r\n                                    <footer className=\"blockquote-footer text-white\">\r\n                                        Someone famous in <cite title=\"Source Title\">Source Title</cite>\r\n                                    </footer>\r\n                                </blockquote>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n                );\r\n            })}\r\n        </>\r\n    );\r\n};\r\n\r\nconst ColoredTextCards = ({ color, name }: { color: string; name: string }) => {\r\n    return (\r\n        <Card>\r\n            <Card.Body className={classNames('text-' + color)}>\r\n                <Card.Title as=\"h5\">{name} card title</Card.Title>\r\n                <Card.Text>\r\n                    Some quick example text to build on the card title and make up the bulk of the card's content.\r\n                </Card.Text>\r\n            </Card.Body>\r\n        </Card>\r\n    );\r\n};\r\n\r\nconst BorderdCards = () => {\r\n    const colors = [\r\n        {\r\n            variant: 'primary',\r\n            name: 'Primary',\r\n        },\r\n        {\r\n            variant: 'secondary',\r\n            name: 'Secondary',\r\n        },\r\n        {\r\n            variant: 'success',\r\n            name: 'Success',\r\n        },\r\n        {\r\n            variant: 'danger',\r\n            name: 'Danger',\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <>\r\n            {(colors || []).map((item, index) => {\r\n                return (\r\n                    <Col lg={3} md={6} key={index}>\r\n                        <Card className={classNames('border', [`border-${item.variant}`], 'mb-4')}>\r\n                            <Card.Header>Header</Card.Header>\r\n                            <Card.Body className={classNames([`text-${item.variant}`])}>\r\n                                <Card.Title as=\"h5\">{item.name} card title</Card.Title>\r\n                                <Card.Text>\r\n                                    Some quick example text to build on the card title and make up the bulk of the\r\n                                    card's content.\r\n                                </Card.Text>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n                );\r\n            })}\r\n        </>\r\n    );\r\n};\r\n\r\nconst BackGroundCards = () => {\r\n    const colors = [\r\n        {\r\n            variant: 'primary',\r\n            name: 'Primary',\r\n        },\r\n        {\r\n            variant: 'secondary',\r\n            name: 'Secondary',\r\n        },\r\n        {\r\n            variant: 'success',\r\n            name: 'Success',\r\n        },\r\n        {\r\n            variant: 'danger',\r\n            name: 'Danger',\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <>\r\n            {(colors || []).map((item, index) => {\r\n                return (\r\n                    <Col lg={3} md={6} key={index}>\r\n                        <Card className={classNames('text-white', [`bg-${item.variant}`], 'mb-3')}>\r\n                            <Card.Header className={classNames([`bg-${item.variant}`])}>Header</Card.Header>\r\n                            <Card.Body>\r\n                                <Card.Title as=\"h5\" className=\"text-white\">\r\n                                    {item.name} card title\r\n                                </Card.Title>\r\n                                <Card.Text>\r\n                                    Some quick example text to build on the card title and make up the bulk of the\r\n                                    card's content.\r\n                                </Card.Text>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n                );\r\n            })}\r\n        </>\r\n    );\r\n};\r\n\r\nconst HorizontalCards = () => {\r\n    return (\r\n        <>\r\n            <Col lg={6}>\r\n                <Card className=\"mb-3\">\r\n                    <Row className=\"g-0\">\r\n                        <Col md={4}>\r\n                            <Card.Img src={cardImg2} className=\"img-fluid\" />\r\n                        </Col>\r\n\r\n                        <Col md={8}>\r\n                            <Card.Body>\r\n                                <Card.Title as=\"h5\">Card Title</Card.Title>\r\n                                <Card.Text>\r\n                                    This is a wider card with supporting text below as a natural lead-in to additional\r\n                                    content. This content is a little bit longer.\r\n                                </Card.Text>\r\n                                <Card.Text>\r\n                                    <small className=\"text-muted\">Last updated 3 mins ago</small>\r\n                                </Card.Text>\r\n                            </Card.Body>\r\n                        </Col>\r\n                    </Row>\r\n                </Card>\r\n            </Col>\r\n            <Col lg={6}>\r\n                <Card className=\"mb-3\">\r\n                    <Row className=\"g-0\">\r\n                        <Col md={8}>\r\n                            <Card.Body>\r\n                                <Card.Title as=\"h5\">Card Title</Card.Title>\r\n                                <Card.Text>\r\n                                    This is a wider card with supporting text below as a natural lead-in to additional\r\n                                    content. This content is a little bit longer.\r\n                                </Card.Text>\r\n                                <Card.Text>\r\n                                    <small className=\"text-muted\">Last updated 3 mins ago</small>\r\n                                </Card.Text>\r\n                            </Card.Body>\r\n                        </Col>\r\n                        <Col md={4}>\r\n                            <Card.Img src={cardImg5} className=\"img-fluid\" />\r\n                        </Col>\r\n                    </Row>\r\n                </Card>\r\n            </Col>\r\n        </>\r\n    );\r\n};\r\n\r\nconst CardWithGroup = ({ item }: { item: CardGroupDetailsTypes }) => {\r\n    return (\r\n        <Card>\r\n            <Card.Img src={item.image} />\r\n            <Card.Body>\r\n                <Card.Title as=\"h5\">{item.title}</Card.Title>\r\n                <Card.Text>{item.text}</Card.Text>\r\n                <Card.Text>\r\n                    <small className=\"text-muted\">{item.subtext}</small>\r\n                </Card.Text>\r\n            </Card.Body>\r\n        </Card>\r\n    );\r\n};\r\n\r\nconst CardsWithNavigation = ({ variant }: { variant: 'tabs' | 'pills' }) => {\r\n    return (\r\n        <>\r\n            <Card className=\"text-center\">\r\n                <Card.Header>\r\n                    <Nav as=\"ul\" variant={variant} defaultActiveKey=\"#first\" className={`card-header-${variant}`}>\r\n                        <Nav.Item as=\"li\">\r\n                            <Nav.Link href=\"#first\">Active</Nav.Link>\r\n                        </Nav.Item>\r\n                        <Nav.Item as=\"li\">\r\n                            <Nav.Link href=\"#link\">Link</Nav.Link>\r\n                        </Nav.Item>\r\n                        <Nav.Item as=\"li\">\r\n                            <Nav.Link href=\"#disabled\" disabled>\r\n                                Disabled\r\n                            </Nav.Link>\r\n                        </Nav.Item>\r\n                    </Nav>\r\n                </Card.Header>\r\n                <Card.Body>\r\n                    <Card.Title as=\"h5\">Special title treatment</Card.Title>\r\n                    <Card.Text>With supporting text below as a natural lead-in to additional content.</Card.Text>\r\n                    <Button variant=\"primary\">Go somewhere</Button>\r\n                </Card.Body>\r\n            </Card>\r\n        </>\r\n    );\r\n};\r\n\r\nconst GridCards = () => {\r\n    return (\r\n        <>\r\n            <Col>\r\n                <Card>\r\n                    <Card.Img src={cardImg2} variant=\"top\" />\r\n                    <Card.Body>\r\n                        <Card.Title as=\"h5\">Card title</Card.Title>\r\n                        <Card.Text>\r\n                            This is a longer card with supporting text below as a natural lead-in to additional content.\r\n                            This content is a little bit longer.\r\n                        </Card.Text>\r\n                    </Card.Body>\r\n                </Card>\r\n            </Col>\r\n\r\n            <Col>\r\n                <Card>\r\n                    <Card.Img src={cardImg6} variant=\"top\" />\r\n                    <Card.Body>\r\n                        <Card.Title as=\"h5\">Card title</Card.Title>\r\n                        <Card.Text>\r\n                            This is a longer card with supporting text below as a natural lead-in to additional content.\r\n                            This content is a little bit longer.\r\n                        </Card.Text>\r\n                    </Card.Body>\r\n                </Card>\r\n            </Col>\r\n\r\n            <Col>\r\n                <Card>\r\n                    <Card.Img src={cardImg5} variant=\"top\" />\r\n                    <Card.Body>\r\n                        <Card.Title as=\"h5\">Card title</Card.Title>\r\n                        <Card.Text>\r\n                            This is a longer card with supporting text below as a natural lead-in to additional content.\r\n                        </Card.Text>\r\n                    </Card.Body>\r\n                </Card>\r\n            </Col>\r\n        </>\r\n    );\r\n};\r\n\r\nconst Cards = () => {\r\n    const CardGroupDetails: CardGroupDetailsTypes[] = [\r\n        {\r\n            id: 1,\r\n            image: cardImg,\r\n            title: 'Card title',\r\n            text: 'This is a wider card with supporting text below as a natural lead-in to additional content. This content is a little bit longer.',\r\n            subtext: 'Last updated 3 mins ago',\r\n        },\r\n        {\r\n            id: 2,\r\n            image: cardImg3,\r\n            title: 'Card title',\r\n            text: 'This card has supporting text below as a natural lead-in to additional content.',\r\n            subtext: 'Last updated 3 mins ago',\r\n        },\r\n        {\r\n            id: 3,\r\n            image: cardImg4,\r\n            title: 'Card title',\r\n            text: 'This is a wider card with supporting text below as a natural lead-in to additional content. This card has even longer content than the first to show that equal height action.',\r\n            subtext: 'Last updated 3 mins ago',\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <PageTitle\r\n                breadCrumbItems={[\r\n                    { label: 'Base UI', path: '/ui/cards' },\r\n                    { label: 'Cards', path: '/ui/cards', active: true },\r\n                ]}\r\n                title={'Cards'}\r\n            />\r\n\r\n            <Row>\r\n                <Col lg={6} xl={3}>\r\n                    <CardWithImage />\r\n                </Col>\r\n\r\n                <Col lg={6} xl={3}>\r\n                    <CardWithImage2 />\r\n                </Col>\r\n\r\n                <Col lg={6} xl={3}>\r\n                    <CardWithImage3 />\r\n                </Col>\r\n\r\n                <Col lg={6} xl={3}>\r\n                    <CardWithTitleAndImage />\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n                <Col lg={6}>\r\n                    <CardWithSpecialTitle />\r\n                </Col>\r\n                <Col lg={6}>\r\n                    <CardWithSpecialTitle />\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n                <Col lg={4}>\r\n                    <CardWithSpecialTitle />\r\n                </Col>\r\n                <Col lg={4}>\r\n                    <CardWithSpecialTitle />\r\n                </Col>\r\n                <Col lg={4}>\r\n                    <CardWithSpecialTitle />\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n                <Col md={4}>\r\n                    <CardWithHeader />\r\n                </Col>\r\n\r\n                <Col md={4}>\r\n                    <CardWithHeaderAndQuote />\r\n                </Col>\r\n\r\n                <Col md={4}>\r\n                    <CardWithHeaderAndFooter />\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n                <Col md={4}>\r\n                    <CardWithImageCaps position={'top'} image={cardImg5} />\r\n                </Col>\r\n\r\n                <Col md={4}>\r\n                    <CardWithImageCaps position={'bottom'} image={cardImg6} />\r\n                </Col>\r\n\r\n                <Col md={4}>\r\n                    <CardWithImageOverlay />\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n                <ColoredCards />\r\n            </Row>\r\n\r\n            <Row>\r\n                <Col md={4}>\r\n                    <ColoredTextCards color={'primary'} name={'Primary'} />\r\n                </Col>\r\n\r\n                <Col md={4}>\r\n                    <ColoredTextCards color={'secondary'} name={'Secondary'} />\r\n                </Col>\r\n\r\n                <Col md={4}>\r\n                    <ColoredTextCards color={'success'} name={'Success'} />\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n                <Col xs={12}>\r\n                    <h4 className=\"mb-3\">Card Border</h4>\r\n                </Col>\r\n                <BorderdCards />\r\n            </Row>\r\n\r\n            <Row>\r\n                <Col xs={12}>\r\n                    <h4 className=\"mb-3\">Background and color</h4>\r\n                </Col>\r\n                <BackGroundCards />\r\n            </Row>\r\n\r\n            <Row>\r\n                <Col xs={12}>\r\n                    <h4 className=\"mb-3\">Card Horizontal</h4>\r\n                </Col>\r\n                <HorizontalCards />\r\n            </Row>\r\n\r\n            <Row>\r\n                <Col xs={12}>\r\n                    <h4 className=\"mb-4\">Card Group</h4>\r\n\r\n                    <CardGroup>\r\n                        {(CardGroupDetails || []).map((item, index) => {\r\n                            return <CardWithGroup item={item} key={index} />;\r\n                        })}\r\n                    </CardGroup>\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row className=\"mt-4\">\r\n                <Col xs={12}>\r\n                    <h4 className=\"mb-3\">Grid Cards</h4>\r\n                    <Row className=\"row-cols-1 row-cols-md-3 g-3\">\r\n                        <GridCards />\r\n                    </Row>\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row className=\"mt-2\">\r\n                <Col xs={12}>\r\n                    <h4 className=\"mb-3\">Navigation</h4>\r\n\r\n                    <Row>\r\n                        <Col md={6}>\r\n                            <CardsWithNavigation variant={'tabs'} />\r\n                        </Col>\r\n                        <Col md={6}>\r\n                            <CardsWithNavigation variant={'pills'} />\r\n                        </Col>\r\n                    </Row>\r\n                </Col>\r\n            </Row>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default Cards;\r\n","import React from 'react';\r\nimport { Row, Col, Breadcrumb } from 'react-bootstrap';\r\nimport classNames from 'classnames';\r\n\r\n// custom hoook\r\nimport { useRedux } from '../hooks/';\r\n\r\n// constants\r\nimport { LayoutTypes } from '../constants/';\r\n\r\ninterface BreadcrumbItems {\r\n    label: string;\r\n    path: string;\r\n    active?: boolean;\r\n}\r\n\r\ninterface PageTitleProps {\r\n    breadCrumbItems: Array<BreadcrumbItems>;\r\n    title: string;\r\n}\r\n\r\n/**\r\n * PageTitle\r\n */\r\nconst PageTitle = (props: PageTitleProps) => {\r\n    const { appSelector } = useRedux();\r\n\r\n    const { layoutType } = appSelector((state) => ({\r\n        layoutType: state.Layout.layoutType,\r\n    }));\r\n\r\n    return (\r\n        <Row>\r\n            <Col xs={12}>\r\n                <div\r\n                    className={classNames('page-title-box', {\r\n                        'page-title-box-alt':\r\n                            layoutType === LayoutTypes.LAYOUT_HORIZONTAL || layoutType === LayoutTypes.LAYOUT_DETACHED,\r\n                    })}\r\n                >\r\n                    <h4 className=\"page-title\">{props.title}</h4>\r\n                    <div className=\"page-title-right\">\r\n                        <Breadcrumb listProps={{ className: 'm-0' }}>\r\n                            <Breadcrumb.Item href=\"/\">Minton</Breadcrumb.Item>\r\n\r\n                            {(props['breadCrumbItems'] || []).map((item, index) => {\r\n                                return item.active ? (\r\n                                    <Breadcrumb.Item active key={index}>\r\n                                        {item.label}\r\n                                    </Breadcrumb.Item>\r\n                                ) : (\r\n                                    <Breadcrumb.Item key={index} href={item.path}>\r\n                                        {item.label}\r\n                                    </Breadcrumb.Item>\r\n                                );\r\n                            })}\r\n                        </Breadcrumb>\r\n                    </div>\r\n                </div>\r\n            </Col>\r\n        </Row>\r\n    );\r\n};\r\n\r\nexport default PageTitle;\r\n","export default __webpack_public_path__ + \"static/media/img-2.01be6170.jpg\";","export default __webpack_public_path__ + \"static/media/img-3.6206d52f.jpg\";","export default __webpack_public_path__ + \"static/media/img-1.e93915a6.jpg\";","export default __webpack_public_path__ + \"static/media/img-4.7e85cdcb.jpg\";","export default __webpack_public_path__ + \"static/media/img-5.a73524fb.jpg\";","export default __webpack_public_path__ + \"static/media/img-6.386f4399.jpg\";","export default __webpack_public_path__ + \"static/media/img-7.c6629687.jpg\";"],"sourceRoot":""}