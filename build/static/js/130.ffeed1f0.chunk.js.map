{"version":3,"sources":["pages/uikit/Placeholders.tsx","components/PageTitle.tsx","assets/images/small/img-2.jpg","assets/images/small/img-4.jpg"],"names":["BasicPlaceholders","_jsx","Card","children","_jsxs","Body","className","Row","Col","md","Img","variant","src","img2","Title","as","Text","Button","img4","Placeholder","animation","xs","disabled","PlaceholdersWidth","style","width","PlaceholdersAnimation","PlaceholdersWithVariants","bg","PlaceholdersConcept","PlaceholdersWithSizes","size","Placeholders","_Fragment","PageTitle","breadCrumbItems","label","path","active","title","xl","props","appSelector","useRedux","layoutType","state","Layout","classNames","LayoutTypes","LAYOUT_HORIZONTAL","LAYOUT_DETACHED","Breadcrumb","listProps","Item","href","map","item","index"],"mappings":"uHAAA,gGAUA,MAAMA,EAAoBA,IAElBC,cAACC,IAAI,CAAAC,SACDC,eAACF,IAAKG,KAAI,CAAAF,SAAA,CACNF,cAAA,MAAIK,UAAU,eAAcH,SAAC,iBAC7BF,cAAA,KAAGK,UAAU,aAAYH,SAAC,8LAK1BC,eAACG,IAAG,CAAAJ,SAAA,CACAF,cAACO,IAAG,CAACC,GAAI,EAAEN,SACPC,eAACF,IAAI,CAACI,UAAU,6BAA4BH,SAAA,CACxCF,cAACC,IAAKQ,IAAG,CAACC,QAAQ,MAAMC,IAAKC,MAC7BT,eAACF,IAAKG,KAAI,CAAAF,SAAA,CACNF,cAACC,IAAKY,MAAK,CAACC,GAAG,KAAIZ,SAAC,eACpBF,cAACC,IAAKc,KAAI,CAAAb,SAAC,mGAIXF,cAACgB,IAAM,CAACN,QAAQ,UAASR,SAAC,yBAItCF,cAACO,IAAG,CAACC,GAAI,EAAEN,SACPC,eAACF,IAAI,CAACI,UAAU,0BAAyBH,SAAA,CACrCF,cAACC,IAAKQ,IAAG,CAACC,QAAQ,MAAMC,IAAKM,MAC7Bd,eAACF,IAAKG,KAAI,CAAAF,SAAA,CACNF,cAACkB,IAAW,CAACJ,GAAI,KAAMT,UAAU,aAAac,UAAU,OAAMjB,SAC1DF,cAACkB,IAAW,CAACE,GAAI,MAErBjB,eAACe,IAAW,CAACJ,GAAIb,IAAKc,KAAMI,UAAU,OAAMjB,SAAA,CACxCF,cAACkB,IAAW,CAACE,GAAI,IAAK,IAACpB,cAACkB,IAAW,CAACE,GAAI,IAAK,IAACpB,cAACkB,IAAW,CAACE,GAAI,IAAM,IACrEpB,cAACkB,IAAW,CAACE,GAAI,IAAK,IAACpB,cAACkB,IAAW,CAACE,GAAI,OAE5CpB,cAACkB,IAAYF,OAAM,CAACN,QAAQ,UAAUW,UAAQ,EAACD,GAAI,oBAU7EE,EAAoBA,IAElBtB,cAACC,IAAI,CAAAC,SACDC,eAACF,IAAKG,KAAI,CAAAF,SAAA,CACNF,cAAA,MAAIK,UAAU,eAAcH,SAAC,UAC7BC,eAAA,KAAGE,UAAU,aAAYH,SAAA,CAAC,sBACHF,cAAA,QAAAE,SAAM,UAAY,sEAGzCF,cAACkB,IAAW,CAACE,GAAI,IACjBpB,cAACkB,IAAW,CAACb,UAAU,SAAS,IAACL,cAAA,SACjCA,cAACkB,IAAW,CAACK,MAAO,CAAEC,MAAO,cAMvCC,EAAwBA,IAEtBzB,cAACC,IAAI,CAAAC,SACDC,eAACF,IAAKG,KAAI,CAAAF,SAAA,CACNF,cAAA,MAAIK,UAAU,eAAcH,SAAC,cAC7BC,eAAA,KAAGE,UAAU,aAAYH,SAAA,CAAC,4CACmBF,cAAA,QAAAE,SAAM,cAAgB,OAAIF,cAAA,QAAAE,SAAM,SAAW,MAAI,IACxFF,cAAA,QAAAE,SAAM,SAAW,uDAAoDF,cAAA,MAAAE,SAAI,aAAa,cAG1FF,cAACkB,IAAW,CAACJ,GAAG,IAAIK,UAAU,OAAMjB,SAChCF,cAACkB,IAAW,CAACE,GAAI,OAErBpB,cAACkB,IAAW,CAACJ,GAAG,IAAIK,UAAU,OAAOd,UAAU,OAAMH,SACjDF,cAACkB,IAAW,CAACE,GAAI,YAO/BM,EAA2BA,IAEzB1B,cAACC,IAAI,CAAAC,SACDC,eAACF,IAAKG,KAAI,CAAAF,SAAA,CACNF,cAAA,MAAIK,UAAU,eAAcH,SAAC,UAC7BC,eAAA,KAAGE,UAAU,aAAYH,SAAA,CAAC,mBACNF,cAAA,QAAAE,SAAM,gBAAkB,SAAMF,cAAA,QAAAE,SAAM,iBAAmB,mEAI3EF,cAACkB,IAAW,CAACE,GAAI,KAEjBpB,cAACkB,IAAW,CAACE,GAAI,GAAIO,GAAG,YACxB3B,cAACkB,IAAW,CAACE,GAAI,GAAIO,GAAG,cACxB3B,cAACkB,IAAW,CAACE,GAAI,GAAIO,GAAG,YACxB3B,cAACkB,IAAW,CAACE,GAAI,GAAIO,GAAG,WACxB3B,cAACkB,IAAW,CAACE,GAAI,GAAIO,GAAG,YACxB3B,cAACkB,IAAW,CAACE,GAAI,GAAIO,GAAG,SACxB3B,cAACkB,IAAW,CAACE,GAAI,GAAIO,GAAG,UACxB3B,cAACkB,IAAW,CAACE,GAAI,GAAIO,GAAG,cAMlCC,EAAsBA,IAEpB5B,cAACC,IAAI,CAAAC,SACDC,eAACF,IAAKG,KAAI,CAAAF,SAAA,CACNF,cAAA,MAAIK,UAAU,eAAcH,SAAC,iBAC7BC,eAAA,KAAGE,UAAU,aAAYH,SAAA,CAAC,gCACOF,cAAA,QAAAE,SAAM,gBAAkB,2CAAyC,IAC9FC,eAAA,QAAAD,SAAA,CAAM,MAAI,KAAS,gBAAaF,cAAA,QAAAE,SAAM,UAAY,8FACRF,cAAA,QAAAE,SAAM,OAAS,YAG7DF,cAAA,KAAG,cAAY,OAAME,SACjBF,cAACkB,IAAW,CAACE,GAAI,MAGrBpB,cAACkB,IAAYF,OAAM,CAACI,GAAI,EAAG,cAAY,cAMjDS,EAAwBA,IAEtB7B,cAACC,IAAI,CAAAC,SACDC,eAACF,IAAKG,KAAI,CAAAF,SAAA,CACNF,cAAA,MAAIK,UAAU,eAAcH,SAAC,WAC7BC,eAAA,KAAGE,UAAU,aAAYH,SAAA,CAAC,eACVF,cAAA,QAAAE,SAAM,gBAAkB,iGACFF,cAAA,QAAAE,SAAM,OAAU,KAACF,cAAA,QAAAE,SAAM,OAAU,QAAIF,cAAA,QAAAE,SAAM,OAAS,OAG1FF,cAACkB,IAAW,CAACE,GAAI,GAAIU,KAAK,OAC1B9B,cAACkB,IAAW,CAACE,GAAI,KACjBpB,cAACkB,IAAW,CAACE,GAAI,GAAIU,KAAK,OAC1B9B,cAACkB,IAAW,CAACE,GAAI,GAAIU,KAAK,YAgC3BC,UA1BMA,IAEb5B,eAAA6B,WAAA,CAAA9B,SAAA,CACIF,cAACiC,IAAS,CACNC,gBAAiB,CACb,CAAEC,MAAO,UAAWC,KAAM,oBAC1B,CAAED,MAAO,eAAgBC,KAAM,mBAAoBC,QAAQ,IAE/DC,MAAO,iBAEXnC,eAACG,IAAG,CAAAJ,SAAA,CACAC,eAACI,IAAG,CAACgC,GAAI,EAAErC,SAAA,CACPF,cAACD,EAAiB,IAClBC,cAACsB,EAAiB,IAClBtB,cAACyB,EAAqB,OAE1BtB,eAACI,IAAG,CAACgC,GAAI,EAAErC,SAAA,CACPF,cAAC0B,EAAwB,IACzB1B,cAAC4B,EAAmB,IACpB5B,cAAC6B,EAAqB,c,iCCjL1C,4EAgEeI,IAxCIO,IACf,MAAM,YAAEC,GAAgBC,eAElB,WAAEC,GAAeF,GAAaG,IAAK,CACrCD,WAAYC,EAAMC,OAAOF,eAG7B,OACI3C,cAACM,IAAG,CAAAJ,SACAF,cAACO,IAAG,CAACa,GAAI,GAAGlB,SACRC,eAAA,OACIE,UAAWyC,IAAW,iBAAkB,CACpC,qBACIH,IAAeI,IAAYC,mBAAqBL,IAAeI,IAAYE,kBAChF/C,SAAA,CAEHF,cAAA,MAAIK,UAAU,aAAYH,SAAEsC,EAAMF,QAClCtC,cAAA,OAAKK,UAAU,mBAAkBH,SAC7BC,eAAC+C,IAAU,CAACC,UAAW,CAAE9C,UAAW,OAAQH,SAAA,CACxCF,cAACkD,IAAWE,KAAI,CAACC,KAAK,IAAGnD,SAAC,YAExBsC,EAAuB,iBAAK,IAAIc,KAAI,CAACC,EAAMC,IAClCD,EAAKlB,OACRrC,cAACkD,IAAWE,KAAI,CAACf,QAAM,EAAAnC,SAClBqD,EAAKpB,OADmBqB,GAI7BxD,cAACkD,IAAWE,KAAI,CAAaC,KAAME,EAAKnB,KAAKlC,SACxCqD,EAAKpB,OADYqB,mB,iCCnD3C,QAA0B,mC,iCCA1B,QAA0B","file":"static/js/130.ffeed1f0.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Card, Col, Row, Button, Placeholder } from 'react-bootstrap';\r\n\r\n// components\r\nimport PageTitle from '../../components/PageTitle';\r\n\r\n// images\r\nimport img2 from '../../assets/images/small/img-2.jpg';\r\nimport img4 from '../../assets/images/small/img-4.jpg';\r\n\r\nconst BasicPlaceholders = () => {\r\n    return (\r\n        <Card>\r\n            <Card.Body>\r\n                <h4 className=\"header-title\">Placeholders</h4>\r\n                <p className=\"sub-header\">\r\n                    In the example below, we take a typical card component and recreate it with placeholders applied to\r\n                    create a “loading card”. Size and proportions are the same between the two.\r\n                </p>\r\n\r\n                <Row>\r\n                    <Col md={6}>\r\n                        <Card className=\"border shadow-none mb-md-0\">\r\n                            <Card.Img variant=\"top\" src={img2} />\r\n                            <Card.Body>\r\n                                <Card.Title as=\"h5\">Card Title</Card.Title>\r\n                                <Card.Text>\r\n                                    Some quick example text to build on the card title and make up the bulk of the\r\n                                    card's content.\r\n                                </Card.Text>\r\n                                <Button variant=\"primary\">Go somewhere</Button>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n                    <Col md={6}>\r\n                        <Card className=\"border shadow-none mb-0\">\r\n                            <Card.Img variant=\"top\" src={img4} />\r\n                            <Card.Body>\r\n                                <Placeholder as={'h5'} className=\"card-title\" animation=\"glow\">\r\n                                    <Placeholder xs={6} />\r\n                                </Placeholder>\r\n                                <Placeholder as={Card.Text} animation=\"glow\">\r\n                                    <Placeholder xs={7} /> <Placeholder xs={4} /> <Placeholder xs={4} />{' '}\r\n                                    <Placeholder xs={6} /> <Placeholder xs={8} />\r\n                                </Placeholder>\r\n                                <Placeholder.Button variant=\"primary\" disabled xs={6} />\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n            </Card.Body>\r\n        </Card>\r\n    );\r\n};\r\n\r\nconst PlaceholdersWidth = () => {\r\n    return (\r\n        <Card>\r\n            <Card.Body>\r\n                <h4 className=\"header-title\">Width</h4>\r\n                <p className=\"sub-header\">\r\n                    You can change the <code>width</code> through grid column classes, width utilities, or inline\r\n                    styles.\r\n                </p>\r\n                <Placeholder xs={6} />\r\n                <Placeholder className=\"w-75\" /> <br />\r\n                <Placeholder style={{ width: '25%' }} />\r\n            </Card.Body>\r\n        </Card>\r\n    );\r\n};\r\n\r\nconst PlaceholdersAnimation = () => {\r\n    return (\r\n        <Card>\r\n            <Card.Body>\r\n                <h4 className=\"header-title\">Animation</h4>\r\n                <p className=\"sub-header\">\r\n                    Animate placeholders by setting the prop <code>animation</code> to <code>glow</code> or{' '}\r\n                    <code>wave</code> to better convey the perception of something being <em>actively</em> loaded.\r\n                </p>\r\n\r\n                <Placeholder as=\"p\" animation=\"glow\">\r\n                    <Placeholder xs={12} />\r\n                </Placeholder>\r\n                <Placeholder as=\"p\" animation=\"wave\" className=\"mb-0\">\r\n                    <Placeholder xs={12} />\r\n                </Placeholder>\r\n            </Card.Body>\r\n        </Card>\r\n    );\r\n};\r\n\r\nconst PlaceholdersWithVariants = () => {\r\n    return (\r\n        <Card>\r\n            <Card.Body>\r\n                <h4 className=\"header-title\">Color</h4>\r\n                <p className=\"sub-header\">\r\n                    By default, the <code>placeholder</code> uses <code>currentColor</code>. This can be overriden with\r\n                    a custom color or utility class.\r\n                </p>\r\n\r\n                <Placeholder xs={12} />\r\n\r\n                <Placeholder xs={12} bg=\"primary\" />\r\n                <Placeholder xs={12} bg=\"secondary\" />\r\n                <Placeholder xs={12} bg=\"success\" />\r\n                <Placeholder xs={12} bg=\"danger\" />\r\n                <Placeholder xs={12} bg=\"warning\" />\r\n                <Placeholder xs={12} bg=\"info\" />\r\n                <Placeholder xs={12} bg=\"light\" />\r\n                <Placeholder xs={12} bg=\"dark\" />\r\n            </Card.Body>\r\n        </Card>\r\n    );\r\n};\r\n\r\nconst PlaceholdersConcept = () => {\r\n    return (\r\n        <Card>\r\n            <Card.Body>\r\n                <h4 className=\"header-title\">How it works</h4>\r\n                <p className=\"sub-header\">\r\n                    Create placeholders with the <code>Placeholder</code> component and a grid column prop (e.g.,{' '}\r\n                    <code>xs={6}</code>) to set the <code>width</code>. They can replace the text inside an element or\r\n                    be added to an existing component via the <code>as</code> prop.\r\n                </p>\r\n\r\n                <p aria-hidden=\"true\">\r\n                    <Placeholder xs={6} />\r\n                </p>\r\n\r\n                <Placeholder.Button xs={4} aria-hidden=\"true\" />\r\n            </Card.Body>\r\n        </Card>\r\n    );\r\n};\r\n\r\nconst PlaceholdersWithSizes = () => {\r\n    return (\r\n        <Card>\r\n            <Card.Body>\r\n                <h4 className=\"header-title\">Sizing</h4>\r\n                <p className=\"sub-header\">\r\n                    The size of <code>placeholder</code>s are based on the typographic style of the parent element.\r\n                    Customize them with sizing props: <code>lg</code>, <code>sm</code>, or <code>xs</code>.\r\n                </p>\r\n\r\n                <Placeholder xs={12} size=\"lg\" />\r\n                <Placeholder xs={12} />\r\n                <Placeholder xs={12} size=\"sm\" />\r\n                <Placeholder xs={12} size=\"xs\" />\r\n            </Card.Body>\r\n        </Card>\r\n    );\r\n};\r\n\r\nconst Placeholders = () => {\r\n    return (\r\n        <>\r\n            <PageTitle\r\n                breadCrumbItems={[\r\n                    { label: 'Base UI', path: '/ui/placeholders' },\r\n                    { label: 'Placeholders', path: '/ui/placeholders', active: true },\r\n                ]}\r\n                title={'Placeholders'}\r\n            />\r\n            <Row>\r\n                <Col xl={6}>\r\n                    <BasicPlaceholders />\r\n                    <PlaceholdersWidth />\r\n                    <PlaceholdersAnimation />\r\n                </Col>\r\n                <Col xl={6}>\r\n                    <PlaceholdersWithVariants />\r\n                    <PlaceholdersConcept />\r\n                    <PlaceholdersWithSizes />\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Placeholders;\r\n","import React from 'react';\r\nimport { Row, Col, Breadcrumb } from 'react-bootstrap';\r\nimport classNames from 'classnames';\r\n\r\n// custom hoook\r\nimport { useRedux } from '../hooks/';\r\n\r\n// constants\r\nimport { LayoutTypes } from '../constants/';\r\n\r\ninterface BreadcrumbItems {\r\n    label: string;\r\n    path: string;\r\n    active?: boolean;\r\n}\r\n\r\ninterface PageTitleProps {\r\n    breadCrumbItems: Array<BreadcrumbItems>;\r\n    title: string;\r\n}\r\n\r\n/**\r\n * PageTitle\r\n */\r\nconst PageTitle = (props: PageTitleProps) => {\r\n    const { appSelector } = useRedux();\r\n\r\n    const { layoutType } = appSelector((state) => ({\r\n        layoutType: state.Layout.layoutType,\r\n    }));\r\n\r\n    return (\r\n        <Row>\r\n            <Col xs={12}>\r\n                <div\r\n                    className={classNames('page-title-box', {\r\n                        'page-title-box-alt':\r\n                            layoutType === LayoutTypes.LAYOUT_HORIZONTAL || layoutType === LayoutTypes.LAYOUT_DETACHED,\r\n                    })}\r\n                >\r\n                    <h4 className=\"page-title\">{props.title}</h4>\r\n                    <div className=\"page-title-right\">\r\n                        <Breadcrumb listProps={{ className: 'm-0' }}>\r\n                            <Breadcrumb.Item href=\"/\">Minton</Breadcrumb.Item>\r\n\r\n                            {(props['breadCrumbItems'] || []).map((item, index) => {\r\n                                return item.active ? (\r\n                                    <Breadcrumb.Item active key={index}>\r\n                                        {item.label}\r\n                                    </Breadcrumb.Item>\r\n                                ) : (\r\n                                    <Breadcrumb.Item key={index} href={item.path}>\r\n                                        {item.label}\r\n                                    </Breadcrumb.Item>\r\n                                );\r\n                            })}\r\n                        </Breadcrumb>\r\n                    </div>\r\n                </div>\r\n            </Col>\r\n        </Row>\r\n    );\r\n};\r\n\r\nexport default PageTitle;\r\n","export default __webpack_public_path__ + \"static/media/img-2.01be6170.jpg\";","export default __webpack_public_path__ + \"static/media/img-4.7e85cdcb.jpg\";"],"sourceRoot":""}