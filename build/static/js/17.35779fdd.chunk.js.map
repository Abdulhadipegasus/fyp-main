{"version":3,"sources":["../node_modules/@restart/ui/esm/DataKey.js","../node_modules/react-bootstrap/esm/Row.js","../node_modules/@restart/hooks/esm/useEventCallback.js","../node_modules/react-bootstrap/esm/BreadcrumbItem.js","../node_modules/react-bootstrap/esm/Breadcrumb.js","../node_modules/dom-helpers/esm/querySelectorAll.js","../node_modules/@restart/hooks/esm/useCommittedRef.js","../node_modules/react-bootstrap/esm/CloseButton.js","../node_modules/react-bootstrap/esm/ModalContext.js","../node_modules/@restart/ui/esm/ModalManager.js","../node_modules/@restart/ui/esm/getScrollbarWidth.js","../node_modules/dom-helpers/esm/hasClass.js","../node_modules/@restart/ui/esm/useWaitForDOMRef.js","../node_modules/react-bootstrap/esm/AbstractModalHeader.js","../node_modules/dom-helpers/esm/activeElement.js","../node_modules/@restart/ui/node_modules/@restart/hooks/esm/useWillUnmount.js","../node_modules/@restart/ui/node_modules/@restart/hooks/esm/useUpdatedRef.js","../node_modules/@restart/ui/esm/Modal.js","../node_modules/dom-helpers/esm/removeClass.js","../node_modules/react-bootstrap/esm/BootstrapModalManager.js","../node_modules/dom-helpers/esm/addClass.js","../node_modules/@restart/hooks/esm/useWillUnmount.js","../node_modules/@restart/hooks/esm/useUpdatedRef.js","../node_modules/dom-helpers/esm/scrollbarSize.js","../node_modules/react-bootstrap/esm/ModalBody.js","../node_modules/react-bootstrap/esm/ModalDialog.js","../node_modules/react-bootstrap/esm/ModalFooter.js","../node_modules/react-bootstrap/esm/ModalHeader.js","../node_modules/react-bootstrap/esm/ModalTitle.js","../node_modules/react-bootstrap/esm/Modal.js","../node_modules/@restart/hooks/esm/useCallbackRef.js"],"names":["dataAttr","property","concat","dataProp","DEVICE_SIZES","Row","React","_ref","ref","bsPrefix","className","as","Component","props","decoratedBsPrefix","useBootstrapPrefix","sizePrefix","classes","forEach","brkPoint","propValue","cols","infix","push","_jsx","classNames","displayName","useEventCallback","fn","useCommittedRef","useCallback","current","apply","arguments","BreadcrumbItem","active","children","linkAs","LinkComponent","Anchor","linkProps","href","title","target","prefix","undefined","defaultProps","Breadcrumb","listProps","label","Object","assign","Item","toArray","Function","prototype","bind","call","slice","qsa","element","selector","querySelectorAll","value","useRef","useEffect","propTypes","PropTypes","string","onClick","func","variant","oneOf","CloseButton","type","ModalContext","onHide","OPEN_DATA_ATTRIBUTE","ModalManager","constructor","handleContainerOverflow","isRTL","length","this","modals","getScrollbarWidth","Math","abs","window","innerWidth","document","documentElement","clientWidth","getElement","body","setModalAttributes","_modal","removeModalAttributes","setContainerStyle","containerState","style","overflow","paddingProp","container","scrollBarWidth","parseInt","css","setAttribute","reset","m","remove","removeContainerStyle","removeAttribute","add","modal","modalIdx","indexOf","state","splice","isTopModal","hasClass","classList","contains","baseVal","resolveContainerRef","ownerDocument","nodeType","useWaitForDOMRef","onResolved","resolvedRef","setRef","useState","earlyRef","nextRef","AbstractModalHeader","closeLabel","closeVariant","closeButton","context","useContext","handleClick","_jsxs","activeElement","doc","nodeName","e","useWillUnmount","onUnmount","valueRef","useUpdatedRef","_excluded","manager","useModalManager","provided","modalManager","dialog","backdrop","setDialogRef","setBackdropRef","Modal","forwardRef","show","role","keyboard","onBackdropClick","onEscapeKeyDown","transition","backdropTransition","autoFocus","enforceFocus","restoreFocus","restoreFocusOptions","renderDialog","renderBackdrop","providedManager","containerRef","onShow","onExit","onExited","onExiting","onEnter","onEntering","onEntered","rest","source","excluded","key","i","sourceKeys","keys","_objectWithoutPropertiesLoose","isMounted","useMounted","prevShow","usePrevious","exited","setExited","lastFocusRef","useImperativeHandle","canUseDOM","handleShow","removeKeydownListenerRef","listen","handleDocumentKeyDown","removeFocusListenerRef","setTimeout","handleEnforceFocus","currentActiveElement","focus","handleHide","_lastFocusRef$current","handleBackdropClick","currentTarget","keyCode","defaultPrevented","handleHidden","Transition","dialogProps","tabIndex","appear","unmountOnExit","in","backdropElement","BackdropTransition","_Fragment","ReactDOM","createPortal","Manager","replaceClassName","origClass","classToRemove","replace","RegExp","Selector","BootstrapModalManager","adjustAndStore","prop","adjust","actual","dataset","parseFloat","restore","super","marginProp","el","sharedManager","getSharedManager","options","size","scrollbarSize","recalc","scrollDiv","createElement","position","top","width","height","appendChild","offsetWidth","removeChild","createWithBsPrefix","ModalDialog","contentClassName","centered","fullscreen","scrollable","dialogClass","fullScreenClass","ModalHeader","DivStyledAsH4","divWithClassName","animation","dialogAs","DialogTransition","Fade","timeout","dialogClassName","Dialog","ariaLabelledby","backdropClassName","propsManager","modalStyle","setStyle","animateStaticModal","setAnimateStaticModal","waitingForMouseUpRef","ignoreBackdropClickRef","removeStaticModalAnimationRef","setModalRef","mergedRef","useMergedRefs","useIsRTL","modalContext","useMemo","getModalManager","updateDialogStyle","node","containerIsOverflowing","modalIsOverflowing","scrollHeight","clientHeight","paddingRight","getScrollbarSize","paddingLeft","handleWindowResize","removeEventListener","handleDialogMouseDown","handleMouseUp","handleStaticModalAnimation","transitionEnd","handleStaticBackdropClick","backdropProps","baseModalStyle","display","Provider","BaseModal","preventDefault","handleEnter","isAppearing","handleEntering","addEventListener","onMouseUp","onMouseDown","Body","ModalBody","Header","Title","ModalTitle","Footer","ModalFooter","TRANSITION_DURATION","BACKDROP_TRANSITION_DURATION"],"mappings":"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","file":"static/js/17.35779fdd.chunk.js","sourcesContent":["export const ATTRIBUTE_PREFIX = `data-rr-ui-`;\nexport const PROPERTY_PREFIX = `rrUi`;\nexport function dataAttr(property) {\n  return `${ATTRIBUTE_PREFIX}${property}`;\n}\nexport function dataProp(property) {\n  return `${PROPERTY_PREFIX}${property}`;\n}","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DEVICE_SIZES = ['xxl', 'xl', 'lg', 'md', 'sm', 'xs'];\nconst Row = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'row');\n  const sizePrefix = `${decoratedBsPrefix}-cols`;\n  const classes = [];\n  DEVICE_SIZES.forEach(brkPoint => {\n    const propValue = props[brkPoint];\n    delete props[brkPoint];\n    let cols;\n\n    if (propValue != null && typeof propValue === 'object') {\n      ({\n        cols\n      } = propValue);\n    } else {\n      cols = propValue;\n    }\n\n    const infix = brkPoint !== 'xs' ? `-${brkPoint}` : '';\n    if (cols != null) classes.push(`${sizePrefix}${infix}-${cols}`);\n  });\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, decoratedBsPrefix, ...classes)\n  });\n});\nRow.displayName = 'Row';\nexport default Row;","import { useCallback } from 'react';\nimport useCommittedRef from './useCommittedRef';\nexport default function useEventCallback(fn) {\n  var ref = useCommittedRef(fn);\n  return useCallback(function () {\n    return ref.current && ref.current.apply(ref, arguments);\n  }, [ref]);\n}","import classNames from 'classnames';\nimport * as React from 'react';\nimport Anchor from '@restart/ui/Anchor';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  active: false,\n  linkProps: {}\n};\nconst BreadcrumbItem = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  active,\n  children,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'li',\n  linkAs: LinkComponent = Anchor,\n  linkProps,\n  href,\n  title,\n  target,\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'breadcrumb-item');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(prefix, className, {\n      active\n    }),\n    \"aria-current\": active ? 'page' : undefined,\n    children: active ? children : /*#__PURE__*/_jsx(LinkComponent, { ...linkProps,\n      href: href,\n      title: title,\n      target: target,\n      children: children\n    })\n  });\n});\nBreadcrumbItem.displayName = 'BreadcrumbItem';\nBreadcrumbItem.defaultProps = defaultProps;\nexport default BreadcrumbItem;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport BreadcrumbItem from './BreadcrumbItem';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  label: 'breadcrumb',\n  listProps: {}\n};\nconst Breadcrumb = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  listProps,\n  children,\n  label,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'nav',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'breadcrumb');\n  return /*#__PURE__*/_jsx(Component, {\n    \"aria-label\": label,\n    className: className,\n    ref: ref,\n    ...props,\n    children: /*#__PURE__*/_jsx(\"ol\", { ...listProps,\n      className: classNames(prefix, listProps == null ? void 0 : listProps.className),\n      children: children\n    })\n  });\n});\nBreadcrumb.displayName = 'Breadcrumb';\nBreadcrumb.defaultProps = defaultProps;\nexport default Object.assign(Breadcrumb, {\n  Item: BreadcrumbItem\n});","var toArray = Function.prototype.bind.call(Function.prototype.call, [].slice);\n/**\n * Runs `querySelectorAll` on a given element.\n * \n * @param element the element\n * @param selector the selector\n */\n\nexport default function qsa(element, selector) {\n  return toArray(element.querySelectorAll(selector));\n}","import { useEffect, useRef } from 'react';\n/**\n * Creates a `Ref` whose value is updated in an effect, ensuring the most recent\n * value is the one rendered with. Generally only required for Concurrent mode usage\n * where previous work in `render()` may be discarded befor being used.\n *\n * This is safe to access in an event handler.\n *\n * @param value The `Ref` value\n */\n\nfunction useCommittedRef(value) {\n  var ref = useRef(value);\n  useEffect(function () {\n    ref.current = value;\n  }, [value]);\n  return ref;\n}\n\nexport default useCommittedRef;","import PropTypes from 'prop-types';\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst propTypes = {\n  'aria-label': PropTypes.string,\n  onClick: PropTypes.func,\n\n  /**\n   * Render different color variant for the button.\n   *\n   * Omitting this will render the default dark color.\n   */\n  variant: PropTypes.oneOf(['white'])\n};\nconst defaultProps = {\n  'aria-label': 'Close'\n};\nconst CloseButton = /*#__PURE__*/React.forwardRef(({\n  className,\n  variant,\n  ...props\n}, ref) => /*#__PURE__*/_jsx(\"button\", {\n  ref: ref,\n  type: \"button\",\n  className: classNames('btn-close', variant && `btn-close-${variant}`, className),\n  ...props\n}));\nCloseButton.displayName = 'CloseButton';\nCloseButton.propTypes = propTypes;\nCloseButton.defaultProps = defaultProps;\nexport default CloseButton;","import * as React from 'react';\nconst ModalContext = /*#__PURE__*/React.createContext({\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  onHide() {}\n\n});\nexport default ModalContext;","import css from 'dom-helpers/css';\nimport { dataAttr } from './DataKey';\nimport getBodyScrollbarWidth from './getScrollbarWidth';\nexport const OPEN_DATA_ATTRIBUTE = dataAttr('modal-open');\n/**\n * Manages a stack of Modals as well as ensuring\n * body scrolling is is disabled and padding accounted for\n */\n\nclass ModalManager {\n  constructor({\n    handleContainerOverflow = true,\n    isRTL = false\n  } = {}) {\n    this.handleContainerOverflow = handleContainerOverflow;\n    this.isRTL = isRTL;\n    this.modals = [];\n  }\n\n  getScrollbarWidth() {\n    return getBodyScrollbarWidth();\n  }\n\n  getElement() {\n    return document.body;\n  }\n\n  setModalAttributes(_modal) {// For overriding\n  }\n\n  removeModalAttributes(_modal) {// For overriding\n  }\n\n  setContainerStyle(containerState) {\n    const style = {\n      overflow: 'hidden'\n    }; // we are only interested in the actual `style` here\n    // because we will override it\n\n    const paddingProp = this.isRTL ? 'paddingLeft' : 'paddingRight';\n    const container = this.getElement();\n    containerState.style = {\n      overflow: container.style.overflow,\n      [paddingProp]: container.style[paddingProp]\n    };\n\n    if (containerState.scrollBarWidth) {\n      // use computed style, here to get the real padding\n      // to add our scrollbar width\n      style[paddingProp] = `${parseInt(css(container, paddingProp) || '0', 10) + containerState.scrollBarWidth}px`;\n    }\n\n    container.setAttribute(OPEN_DATA_ATTRIBUTE, '');\n    css(container, style);\n  }\n\n  reset() {\n    [...this.modals].forEach(m => this.remove(m));\n  }\n\n  removeContainerStyle(containerState) {\n    const container = this.getElement();\n    container.removeAttribute(OPEN_DATA_ATTRIBUTE);\n    Object.assign(container.style, containerState.style);\n  }\n\n  add(modal) {\n    let modalIdx = this.modals.indexOf(modal);\n\n    if (modalIdx !== -1) {\n      return modalIdx;\n    }\n\n    modalIdx = this.modals.length;\n    this.modals.push(modal);\n    this.setModalAttributes(modal);\n\n    if (modalIdx !== 0) {\n      return modalIdx;\n    }\n\n    this.state = {\n      scrollBarWidth: this.getScrollbarWidth(),\n      style: {}\n    };\n\n    if (this.handleContainerOverflow) {\n      this.setContainerStyle(this.state);\n    }\n\n    return modalIdx;\n  }\n\n  remove(modal) {\n    const modalIdx = this.modals.indexOf(modal);\n\n    if (modalIdx === -1) {\n      return;\n    }\n\n    this.modals.splice(modalIdx, 1); // if that was the last modal in a container,\n    // clean up the container\n\n    if (!this.modals.length && this.handleContainerOverflow) {\n      this.removeContainerStyle(this.state);\n    }\n\n    this.removeModalAttributes(modal);\n  }\n\n  isTopModal(modal) {\n    return !!this.modals.length && this.modals[this.modals.length - 1] === modal;\n  }\n\n}\n\nexport default ModalManager;","/**\n * Get the width of the vertical window scrollbar if it's visible\n */\nexport default function getBodyScrollbarWidth() {\n  return Math.abs(window.innerWidth - document.documentElement.clientWidth);\n}","/**\n * Checks if a given element has a CSS class.\n * \n * @param element the element\n * @param className the CSS class name\n */\nexport default function hasClass(element, className) {\n  if (element.classList) return !!className && element.classList.contains(className);\n  return (\" \" + (element.className.baseVal || element.className) + \" \").indexOf(\" \" + className + \" \") !== -1;\n}","import ownerDocument from 'dom-helpers/ownerDocument';\nimport { useState, useEffect } from 'react';\nexport const resolveContainerRef = ref => {\n  var _ref;\n\n  if (typeof document === 'undefined') return null;\n  if (ref == null) return ownerDocument().body;\n  if (typeof ref === 'function') ref = ref();\n  if (ref && 'current' in ref) ref = ref.current;\n  if ((_ref = ref) != null && _ref.nodeType) return ref || null;\n  return null;\n};\nexport default function useWaitForDOMRef(ref, onResolved) {\n  const [resolvedRef, setRef] = useState(() => resolveContainerRef(ref));\n\n  if (!resolvedRef) {\n    const earlyRef = resolveContainerRef(ref);\n    if (earlyRef) setRef(earlyRef);\n  }\n\n  useEffect(() => {\n    if (onResolved && resolvedRef) {\n      onResolved(resolvedRef);\n    }\n  }, [onResolved, resolvedRef]);\n  useEffect(() => {\n    const nextRef = resolveContainerRef(ref);\n\n    if (nextRef !== resolvedRef) {\n      setRef(nextRef);\n    }\n  }, [ref, resolvedRef]);\n  return resolvedRef;\n}","import * as React from 'react';\nimport { useContext } from 'react';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport CloseButton from './CloseButton';\nimport ModalContext from './ModalContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst defaultProps = {\n  closeLabel: 'Close',\n  closeButton: false\n};\nconst AbstractModalHeader = /*#__PURE__*/React.forwardRef(({\n  closeLabel,\n  closeVariant,\n  closeButton,\n  onHide,\n  children,\n  ...props\n}, ref) => {\n  const context = useContext(ModalContext);\n  const handleClick = useEventCallback(() => {\n    context == null ? void 0 : context.onHide();\n    onHide == null ? void 0 : onHide();\n  });\n  return /*#__PURE__*/_jsxs(\"div\", {\n    ref: ref,\n    ...props,\n    children: [children, closeButton && /*#__PURE__*/_jsx(CloseButton, {\n      \"aria-label\": closeLabel,\n      variant: closeVariant,\n      onClick: handleClick\n    })]\n  });\n});\nAbstractModalHeader.defaultProps = defaultProps;\nexport default AbstractModalHeader;","import ownerDocument from './ownerDocument';\n/**\n * Returns the actively focused element safely.\n *\n * @param doc the document to check\n */\n\nexport default function activeElement(doc) {\n  if (doc === void 0) {\n    doc = ownerDocument();\n  }\n\n  // Support: IE 9 only\n  // IE9 throws an \"Unspecified error\" accessing document.activeElement from an <iframe>\n  try {\n    var active = doc.activeElement; // IE11 returns a seemingly empty object in some cases when accessing\n    // document.activeElement from an <iframe>\n\n    if (!active || !active.nodeName) return null;\n    return active;\n  } catch (e) {\n    /* ie throws if no active element */\n    return doc.body;\n  }\n}","import useUpdatedRef from './useUpdatedRef';\nimport { useEffect } from 'react';\n/**\n * Attach a callback that fires when a component unmounts\n *\n * @param fn Handler to run when the component unmounts\n * @category effects\n */\n\nexport default function useWillUnmount(fn) {\n  var onUnmount = useUpdatedRef(fn);\n  useEffect(function () {\n    return function () {\n      return onUnmount.current();\n    };\n  }, []);\n}","import { useRef } from 'react';\n/**\n * Returns a ref that is immediately updated with the new value\n *\n * @param value The Ref value\n * @category refs\n */\n\nexport default function useUpdatedRef(value) {\n  var valueRef = useRef(value);\n  valueRef.current = value;\n  return valueRef;\n}","const _excluded = [\"show\", \"role\", \"className\", \"style\", \"children\", \"backdrop\", \"keyboard\", \"onBackdropClick\", \"onEscapeKeyDown\", \"transition\", \"backdropTransition\", \"autoFocus\", \"enforceFocus\", \"restoreFocus\", \"restoreFocusOptions\", \"renderDialog\", \"renderBackdrop\", \"manager\", \"container\", \"onShow\", \"onHide\", \"onExit\", \"onExited\", \"onExiting\", \"onEnter\", \"onEntering\", \"onEntered\"];\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* eslint-disable @typescript-eslint/no-use-before-define, react/prop-types */\nimport activeElement from 'dom-helpers/activeElement';\nimport contains from 'dom-helpers/contains';\nimport canUseDOM from 'dom-helpers/canUseDOM';\nimport listen from 'dom-helpers/listen';\nimport { useState, useRef, useCallback, useImperativeHandle, forwardRef, useEffect } from 'react';\nimport * as React from 'react';\nimport ReactDOM from 'react-dom';\nimport useMounted from '@restart/hooks/useMounted';\nimport useWillUnmount from '@restart/hooks/useWillUnmount';\nimport usePrevious from '@restart/hooks/usePrevious';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport ModalManager from './ModalManager';\nimport useWaitForDOMRef from './useWaitForDOMRef';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nlet manager;\n\nfunction getManager() {\n  if (!manager) manager = new ModalManager();\n  return manager;\n}\n\nfunction useModalManager(provided) {\n  const modalManager = provided || getManager();\n  const modal = useRef({\n    dialog: null,\n    backdrop: null\n  });\n  return Object.assign(modal.current, {\n    add: () => modalManager.add(modal.current),\n    remove: () => modalManager.remove(modal.current),\n    isTopModal: () => modalManager.isTopModal(modal.current),\n    setDialogRef: useCallback(ref => {\n      modal.current.dialog = ref;\n    }, []),\n    setBackdropRef: useCallback(ref => {\n      modal.current.backdrop = ref;\n    }, [])\n  });\n}\n\nconst Modal = /*#__PURE__*/forwardRef((_ref, ref) => {\n  let {\n    show = false,\n    role = 'dialog',\n    className,\n    style,\n    children,\n    backdrop = true,\n    keyboard = true,\n    onBackdropClick,\n    onEscapeKeyDown,\n    transition,\n    backdropTransition,\n    autoFocus = true,\n    enforceFocus = true,\n    restoreFocus = true,\n    restoreFocusOptions,\n    renderDialog,\n    renderBackdrop = props => /*#__PURE__*/_jsx(\"div\", Object.assign({}, props)),\n    manager: providedManager,\n    container: containerRef,\n    onShow,\n    onHide = () => {},\n    onExit,\n    onExited,\n    onExiting,\n    onEnter,\n    onEntering,\n    onEntered\n  } = _ref,\n      rest = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  const container = useWaitForDOMRef(containerRef);\n  const modal = useModalManager(providedManager);\n  const isMounted = useMounted();\n  const prevShow = usePrevious(show);\n  const [exited, setExited] = useState(!show);\n  const lastFocusRef = useRef(null);\n  useImperativeHandle(ref, () => modal, [modal]);\n\n  if (canUseDOM && !prevShow && show) {\n    lastFocusRef.current = activeElement();\n  }\n\n  if (!transition && !show && !exited) {\n    setExited(true);\n  } else if (show && exited) {\n    setExited(false);\n  }\n\n  const handleShow = useEventCallback(() => {\n    modal.add();\n    removeKeydownListenerRef.current = listen(document, 'keydown', handleDocumentKeyDown);\n    removeFocusListenerRef.current = listen(document, 'focus', // the timeout is necessary b/c this will run before the new modal is mounted\n    // and so steals focus from it\n    () => setTimeout(handleEnforceFocus), true);\n\n    if (onShow) {\n      onShow();\n    } // autofocus after onShow to not trigger a focus event for previous\n    // modals before this one is shown.\n\n\n    if (autoFocus) {\n      const currentActiveElement = activeElement(document);\n\n      if (modal.dialog && currentActiveElement && !contains(modal.dialog, currentActiveElement)) {\n        lastFocusRef.current = currentActiveElement;\n        modal.dialog.focus();\n      }\n    }\n  });\n  const handleHide = useEventCallback(() => {\n    modal.remove();\n    removeKeydownListenerRef.current == null ? void 0 : removeKeydownListenerRef.current();\n    removeFocusListenerRef.current == null ? void 0 : removeFocusListenerRef.current();\n\n    if (restoreFocus) {\n      var _lastFocusRef$current;\n\n      // Support: <=IE11 doesn't support `focus()` on svg elements (RB: #917)\n      (_lastFocusRef$current = lastFocusRef.current) == null ? void 0 : _lastFocusRef$current.focus == null ? void 0 : _lastFocusRef$current.focus(restoreFocusOptions);\n      lastFocusRef.current = null;\n    }\n  }); // TODO: try and combine these effects: https://github.com/react-bootstrap/react-overlays/pull/794#discussion_r409954120\n  // Show logic when:\n  //  - show is `true` _and_ `container` has resolved\n\n  useEffect(() => {\n    if (!show || !container) return;\n    handleShow();\n  }, [show, container,\n  /* should never change: */\n  handleShow]); // Hide cleanup logic when:\n  //  - `exited` switches to true\n  //  - component unmounts;\n\n  useEffect(() => {\n    if (!exited) return;\n    handleHide();\n  }, [exited, handleHide]);\n  useWillUnmount(() => {\n    handleHide();\n  }); // --------------------------------\n\n  const handleEnforceFocus = useEventCallback(() => {\n    if (!enforceFocus || !isMounted() || !modal.isTopModal()) {\n      return;\n    }\n\n    const currentActiveElement = activeElement();\n\n    if (modal.dialog && currentActiveElement && !contains(modal.dialog, currentActiveElement)) {\n      modal.dialog.focus();\n    }\n  });\n  const handleBackdropClick = useEventCallback(e => {\n    if (e.target !== e.currentTarget) {\n      return;\n    }\n\n    onBackdropClick == null ? void 0 : onBackdropClick(e);\n\n    if (backdrop === true) {\n      onHide();\n    }\n  });\n  const handleDocumentKeyDown = useEventCallback(e => {\n    if (keyboard && e.keyCode === 27 && modal.isTopModal()) {\n      onEscapeKeyDown == null ? void 0 : onEscapeKeyDown(e);\n\n      if (!e.defaultPrevented) {\n        onHide();\n      }\n    }\n  });\n  const removeFocusListenerRef = useRef();\n  const removeKeydownListenerRef = useRef();\n\n  const handleHidden = (...args) => {\n    setExited(true);\n    onExited == null ? void 0 : onExited(...args);\n  };\n\n  const Transition = transition;\n\n  if (!container || !(show || Transition && !exited)) {\n    return null;\n  }\n\n  const dialogProps = Object.assign({\n    role,\n    ref: modal.setDialogRef,\n    // apparently only works on the dialog role element\n    'aria-modal': role === 'dialog' ? true : undefined\n  }, rest, {\n    style,\n    className,\n    tabIndex: -1\n  });\n  let dialog = renderDialog ? renderDialog(dialogProps) : /*#__PURE__*/_jsx(\"div\", Object.assign({}, dialogProps, {\n    children: /*#__PURE__*/React.cloneElement(children, {\n      role: 'document'\n    })\n  }));\n\n  if (Transition) {\n    dialog = /*#__PURE__*/_jsx(Transition, {\n      appear: true,\n      unmountOnExit: true,\n      in: !!show,\n      onExit: onExit,\n      onExiting: onExiting,\n      onExited: handleHidden,\n      onEnter: onEnter,\n      onEntering: onEntering,\n      onEntered: onEntered,\n      children: dialog\n    });\n  }\n\n  let backdropElement = null;\n\n  if (backdrop) {\n    const BackdropTransition = backdropTransition;\n    backdropElement = renderBackdrop({\n      ref: modal.setBackdropRef,\n      onClick: handleBackdropClick\n    });\n\n    if (BackdropTransition) {\n      backdropElement = /*#__PURE__*/_jsx(BackdropTransition, {\n        appear: true,\n        in: !!show,\n        children: backdropElement\n      });\n    }\n  }\n\n  return /*#__PURE__*/_jsx(_Fragment, {\n    children: /*#__PURE__*/ReactDOM.createPortal( /*#__PURE__*/_jsxs(_Fragment, {\n      children: [backdropElement, dialog]\n    }), container)\n  });\n});\nModal.displayName = 'Modal';\nexport default Object.assign(Modal, {\n  Manager: ModalManager\n});","function replaceClassName(origClass, classToRemove) {\n  return origClass.replace(new RegExp(\"(^|\\\\s)\" + classToRemove + \"(?:\\\\s|$)\", 'g'), '$1').replace(/\\s+/g, ' ').replace(/^\\s*|\\s*$/g, '');\n}\n/**\n * Removes a CSS class from a given element.\n * \n * @param element the element\n * @param className the CSS class name\n */\n\n\nexport default function removeClass(element, className) {\n  if (element.classList) {\n    element.classList.remove(className);\n  } else if (typeof element.className === 'string') {\n    element.className = replaceClassName(element.className, className);\n  } else {\n    element.setAttribute('class', replaceClassName(element.className && element.className.baseVal || '', className));\n  }\n}","import addClass from 'dom-helpers/addClass';\nimport css from 'dom-helpers/css';\nimport qsa from 'dom-helpers/querySelectorAll';\nimport removeClass from 'dom-helpers/removeClass';\nimport ModalManager from '@restart/ui/ModalManager';\nconst Selector = {\n  FIXED_CONTENT: '.fixed-top, .fixed-bottom, .is-fixed, .sticky-top',\n  STICKY_CONTENT: '.sticky-top',\n  NAVBAR_TOGGLER: '.navbar-toggler'\n};\n\nclass BootstrapModalManager extends ModalManager {\n  adjustAndStore(prop, element, adjust) {\n    const actual = element.style[prop]; // TODO: DOMStringMap and CSSStyleDeclaration aren't strictly compatible\n    // @ts-ignore\n\n    element.dataset[prop] = actual;\n    css(element, {\n      [prop]: `${parseFloat(css(element, prop)) + adjust}px`\n    });\n  }\n\n  restore(prop, element) {\n    const value = element.dataset[prop];\n\n    if (value !== undefined) {\n      delete element.dataset[prop];\n      css(element, {\n        [prop]: value\n      });\n    }\n  }\n\n  setContainerStyle(containerState) {\n    super.setContainerStyle(containerState);\n    const container = this.getElement();\n    addClass(container, 'modal-open');\n    if (!containerState.scrollBarWidth) return;\n    const paddingProp = this.isRTL ? 'paddingLeft' : 'paddingRight';\n    const marginProp = this.isRTL ? 'marginLeft' : 'marginRight';\n    qsa(container, Selector.FIXED_CONTENT).forEach(el => this.adjustAndStore(paddingProp, el, containerState.scrollBarWidth));\n    qsa(container, Selector.STICKY_CONTENT).forEach(el => this.adjustAndStore(marginProp, el, -containerState.scrollBarWidth));\n    qsa(container, Selector.NAVBAR_TOGGLER).forEach(el => this.adjustAndStore(marginProp, el, containerState.scrollBarWidth));\n  }\n\n  removeContainerStyle(containerState) {\n    super.removeContainerStyle(containerState);\n    const container = this.getElement();\n    removeClass(container, 'modal-open');\n    const paddingProp = this.isRTL ? 'paddingLeft' : 'paddingRight';\n    const marginProp = this.isRTL ? 'marginLeft' : 'marginRight';\n    qsa(container, Selector.FIXED_CONTENT).forEach(el => this.restore(paddingProp, el));\n    qsa(container, Selector.STICKY_CONTENT).forEach(el => this.restore(marginProp, el));\n    qsa(container, Selector.NAVBAR_TOGGLER).forEach(el => this.restore(marginProp, el));\n  }\n\n}\n\nlet sharedManager;\nexport function getSharedManager(options) {\n  if (!sharedManager) sharedManager = new BootstrapModalManager(options);\n  return sharedManager;\n}\nexport default BootstrapModalManager;","import hasClass from './hasClass';\n/**\n * Adds a CSS class to a given element.\n * \n * @param element the element\n * @param className the CSS class name\n */\n\nexport default function addClass(element, className) {\n  if (element.classList) element.classList.add(className);else if (!hasClass(element, className)) if (typeof element.className === 'string') element.className = element.className + \" \" + className;else element.setAttribute('class', (element.className && element.className.baseVal || '') + \" \" + className);\n}","import useUpdatedRef from './useUpdatedRef';\nimport { useEffect } from 'react';\n/**\n * Attach a callback that fires when a component unmounts\n *\n * @param fn Handler to run when the component unmounts\n * @category effects\n */\n\nexport default function useWillUnmount(fn) {\n  var onUnmount = useUpdatedRef(fn);\n  useEffect(function () {\n    return function () {\n      return onUnmount.current();\n    };\n  }, []);\n}","import { useRef } from 'react';\n/**\n * Returns a ref that is immediately updated with the new value\n *\n * @param value The Ref value\n * @category refs\n */\n\nexport default function useUpdatedRef(value) {\n  var valueRef = useRef(value);\n  valueRef.current = value;\n  return valueRef;\n}","import canUseDOM from './canUseDOM';\nvar size;\nexport default function scrollbarSize(recalc) {\n  if (!size && size !== 0 || recalc) {\n    if (canUseDOM) {\n      var scrollDiv = document.createElement('div');\n      scrollDiv.style.position = 'absolute';\n      scrollDiv.style.top = '-9999px';\n      scrollDiv.style.width = '50px';\n      scrollDiv.style.height = '50px';\n      scrollDiv.style.overflow = 'scroll';\n      document.body.appendChild(scrollDiv);\n      size = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n      document.body.removeChild(scrollDiv);\n    }\n  }\n\n  return size;\n}","import createWithBsPrefix from './createWithBsPrefix';\nexport default createWithBsPrefix('modal-body');","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ModalDialog = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  contentClassName,\n  centered,\n  size,\n  fullscreen,\n  children,\n  scrollable,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal');\n  const dialogClass = `${bsPrefix}-dialog`;\n  const fullScreenClass = typeof fullscreen === 'string' ? `${bsPrefix}-fullscreen-${fullscreen}` : `${bsPrefix}-fullscreen`;\n  return /*#__PURE__*/_jsx(\"div\", { ...props,\n    ref: ref,\n    className: classNames(dialogClass, className, size && `${bsPrefix}-${size}`, centered && `${dialogClass}-centered`, scrollable && `${dialogClass}-scrollable`, fullscreen && fullScreenClass),\n    children: /*#__PURE__*/_jsx(\"div\", {\n      className: classNames(`${bsPrefix}-content`, contentClassName),\n      children: children\n    })\n  });\n});\nModalDialog.displayName = 'ModalDialog';\nexport default ModalDialog;","import createWithBsPrefix from './createWithBsPrefix';\nexport default createWithBsPrefix('modal-footer');","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AbstractModalHeader from './AbstractModalHeader';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  closeLabel: 'Close',\n  closeButton: false\n};\nconst ModalHeader = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal-header');\n  return /*#__PURE__*/_jsx(AbstractModalHeader, {\n    ref: ref,\n    ...props,\n    className: classNames(className, bsPrefix)\n  });\n});\nModalHeader.displayName = 'ModalHeader';\nModalHeader.defaultProps = defaultProps;\nexport default ModalHeader;","import createWithBsPrefix from './createWithBsPrefix';\nimport divWithClassName from './divWithClassName';\nconst DivStyledAsH4 = divWithClassName('h4');\nexport default createWithBsPrefix('modal-title', {\n  Component: DivStyledAsH4\n});","import classNames from 'classnames';\nimport addEventListener from 'dom-helpers/addEventListener';\nimport canUseDOM from 'dom-helpers/canUseDOM';\nimport ownerDocument from 'dom-helpers/ownerDocument';\nimport removeEventListener from 'dom-helpers/removeEventListener';\nimport getScrollbarSize from 'dom-helpers/scrollbarSize';\nimport useCallbackRef from '@restart/hooks/useCallbackRef';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nimport useWillUnmount from '@restart/hooks/useWillUnmount';\nimport transitionEnd from 'dom-helpers/transitionEnd';\nimport * as React from 'react';\nimport { useCallback, useMemo, useRef, useState } from 'react';\nimport BaseModal from '@restart/ui/Modal';\nimport { getSharedManager } from './BootstrapModalManager';\nimport Fade from './Fade';\nimport ModalBody from './ModalBody';\nimport ModalContext from './ModalContext';\nimport ModalDialog from './ModalDialog';\nimport ModalFooter from './ModalFooter';\nimport ModalHeader from './ModalHeader';\nimport ModalTitle from './ModalTitle';\nimport { useBootstrapPrefix, useIsRTL } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  show: false,\n  backdrop: true,\n  keyboard: true,\n  autoFocus: true,\n  enforceFocus: true,\n  restoreFocus: true,\n  animation: true,\n  dialogAs: ModalDialog\n};\n/* eslint-disable no-use-before-define, react/no-multi-comp */\n\nfunction DialogTransition(props) {\n  return /*#__PURE__*/_jsx(Fade, { ...props,\n    timeout: null\n  });\n}\n\nfunction BackdropTransition(props) {\n  return /*#__PURE__*/_jsx(Fade, { ...props,\n    timeout: null\n  });\n}\n/* eslint-enable no-use-before-define */\n\n\nconst Modal = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  style,\n  dialogClassName,\n  contentClassName,\n  children,\n  dialogAs: Dialog,\n  'aria-labelledby': ariaLabelledby,\n\n  /* BaseModal props */\n  show,\n  animation,\n  backdrop,\n  keyboard,\n  onEscapeKeyDown,\n  onShow,\n  onHide,\n  container,\n  autoFocus,\n  enforceFocus,\n  restoreFocus,\n  restoreFocusOptions,\n  onEntered,\n  onExit,\n  onExiting,\n  onEnter,\n  onEntering,\n  onExited,\n  backdropClassName,\n  manager: propsManager,\n  ...props\n}, ref) => {\n  const [modalStyle, setStyle] = useState({});\n  const [animateStaticModal, setAnimateStaticModal] = useState(false);\n  const waitingForMouseUpRef = useRef(false);\n  const ignoreBackdropClickRef = useRef(false);\n  const removeStaticModalAnimationRef = useRef(null);\n  const [modal, setModalRef] = useCallbackRef();\n  const mergedRef = useMergedRefs(ref, setModalRef);\n  const handleHide = useEventCallback(onHide);\n  const isRTL = useIsRTL();\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal');\n  const modalContext = useMemo(() => ({\n    onHide: handleHide\n  }), [handleHide]);\n\n  function getModalManager() {\n    if (propsManager) return propsManager;\n    return getSharedManager({\n      isRTL\n    });\n  }\n\n  function updateDialogStyle(node) {\n    if (!canUseDOM) return;\n    const containerIsOverflowing = getModalManager().getScrollbarWidth() > 0;\n    const modalIsOverflowing = node.scrollHeight > ownerDocument(node).documentElement.clientHeight;\n    setStyle({\n      paddingRight: containerIsOverflowing && !modalIsOverflowing ? getScrollbarSize() : undefined,\n      paddingLeft: !containerIsOverflowing && modalIsOverflowing ? getScrollbarSize() : undefined\n    });\n  }\n\n  const handleWindowResize = useEventCallback(() => {\n    if (modal) {\n      updateDialogStyle(modal.dialog);\n    }\n  });\n  useWillUnmount(() => {\n    removeEventListener(window, 'resize', handleWindowResize);\n    removeStaticModalAnimationRef.current == null ? void 0 : removeStaticModalAnimationRef.current();\n  }); // We prevent the modal from closing during a drag by detecting where the\n  // the click originates from. If it starts in the modal and then ends outside\n  // don't close.\n\n  const handleDialogMouseDown = () => {\n    waitingForMouseUpRef.current = true;\n  };\n\n  const handleMouseUp = e => {\n    if (waitingForMouseUpRef.current && modal && e.target === modal.dialog) {\n      ignoreBackdropClickRef.current = true;\n    }\n\n    waitingForMouseUpRef.current = false;\n  };\n\n  const handleStaticModalAnimation = () => {\n    setAnimateStaticModal(true);\n    removeStaticModalAnimationRef.current = transitionEnd(modal.dialog, () => {\n      setAnimateStaticModal(false);\n    });\n  };\n\n  const handleStaticBackdropClick = e => {\n    if (e.target !== e.currentTarget) {\n      return;\n    }\n\n    handleStaticModalAnimation();\n  };\n\n  const handleClick = e => {\n    if (backdrop === 'static') {\n      handleStaticBackdropClick(e);\n      return;\n    }\n\n    if (ignoreBackdropClickRef.current || e.target !== e.currentTarget) {\n      ignoreBackdropClickRef.current = false;\n      return;\n    }\n\n    onHide == null ? void 0 : onHide();\n  };\n\n  const handleEscapeKeyDown = e => {\n    if (!keyboard && backdrop === 'static') {\n      // Call preventDefault to stop modal from closing in restart ui,\n      // then play our animation.\n      e.preventDefault();\n      handleStaticModalAnimation();\n    } else if (keyboard && onEscapeKeyDown) {\n      onEscapeKeyDown(e);\n    }\n  };\n\n  const handleEnter = (node, isAppearing) => {\n    if (node) {\n      node.style.display = 'block';\n      updateDialogStyle(node);\n    }\n\n    onEnter == null ? void 0 : onEnter(node, isAppearing);\n  };\n\n  const handleExit = node => {\n    removeStaticModalAnimationRef.current == null ? void 0 : removeStaticModalAnimationRef.current();\n    onExit == null ? void 0 : onExit(node);\n  };\n\n  const handleEntering = (node, isAppearing) => {\n    onEntering == null ? void 0 : onEntering(node, isAppearing); // FIXME: This should work even when animation is disabled.\n\n    addEventListener(window, 'resize', handleWindowResize);\n  };\n\n  const handleExited = node => {\n    if (node) node.style.display = ''; // RHL removes it sometimes\n\n    onExited == null ? void 0 : onExited(node); // FIXME: This should work even when animation is disabled.\n\n    removeEventListener(window, 'resize', handleWindowResize);\n  };\n\n  const renderBackdrop = useCallback(backdropProps => /*#__PURE__*/_jsx(\"div\", { ...backdropProps,\n    className: classNames(`${bsPrefix}-backdrop`, backdropClassName, !animation && 'show')\n  }), [animation, backdropClassName, bsPrefix]);\n  const baseModalStyle = { ...style,\n    ...modalStyle\n  }; // Sets `display` always block when `animation` is false\n\n  if (!animation) {\n    baseModalStyle.display = 'block';\n  }\n\n  const renderDialog = dialogProps => /*#__PURE__*/_jsx(\"div\", {\n    role: \"dialog\",\n    ...dialogProps,\n    style: baseModalStyle,\n    className: classNames(className, bsPrefix, animateStaticModal && `${bsPrefix}-static`),\n    onClick: backdrop ? handleClick : undefined,\n    onMouseUp: handleMouseUp,\n    \"aria-labelledby\": ariaLabelledby,\n    children: /*#__PURE__*/_jsx(Dialog, { ...props,\n      onMouseDown: handleDialogMouseDown,\n      className: dialogClassName,\n      contentClassName: contentClassName,\n      children: children\n    })\n  });\n\n  return /*#__PURE__*/_jsx(ModalContext.Provider, {\n    value: modalContext,\n    children: /*#__PURE__*/_jsx(BaseModal, {\n      show: show,\n      ref: mergedRef,\n      backdrop: backdrop,\n      container: container,\n      keyboard: true // Always set true - see handleEscapeKeyDown\n      ,\n      autoFocus: autoFocus,\n      enforceFocus: enforceFocus,\n      restoreFocus: restoreFocus,\n      restoreFocusOptions: restoreFocusOptions,\n      onEscapeKeyDown: handleEscapeKeyDown,\n      onShow: onShow,\n      onHide: onHide,\n      onEnter: handleEnter,\n      onEntering: handleEntering,\n      onEntered: onEntered,\n      onExit: handleExit,\n      onExiting: onExiting,\n      onExited: handleExited,\n      manager: getModalManager(),\n      transition: animation ? DialogTransition : undefined,\n      backdropTransition: animation ? BackdropTransition : undefined,\n      renderBackdrop: renderBackdrop,\n      renderDialog: renderDialog\n    })\n  });\n});\nModal.displayName = 'Modal';\nModal.defaultProps = defaultProps;\nexport default Object.assign(Modal, {\n  Body: ModalBody,\n  Header: ModalHeader,\n  Title: ModalTitle,\n  Footer: ModalFooter,\n  Dialog: ModalDialog,\n  TRANSITION_DURATION: 300,\n  BACKDROP_TRANSITION_DURATION: 150\n});","import { useState } from 'react';\n/**\n * A convenience hook around `useState` designed to be paired with\n * the component [callback ref](https://reactjs.org/docs/refs-and-the-dom.html#callback-refs) api.\n * Callback refs are useful over `useRef()` when you need to respond to the ref being set\n * instead of lazily accessing it in an effect.\n *\n * ```ts\n * const [element, attachRef] = useCallbackRef<HTMLDivElement>()\n *\n * useEffect(() => {\n *   if (!element) return\n *\n *   const calendar = new FullCalendar.Calendar(element)\n *\n *   return () => {\n *     calendar.destroy()\n *   }\n * }, [element])\n *\n * return <div ref={attachRef} />\n * ```\n *\n * @category refs\n */\n\nexport default function useCallbackRef() {\n  return useState(null);\n}"],"sourceRoot":""}