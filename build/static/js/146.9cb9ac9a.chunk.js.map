{"version":3,"sources":["pages/uikit/GeneralUI.tsx","components/PageTitle.tsx"],"names":["colors","name","color","DefaultBadges","_jsx","Card","children","_jsxs","Body","className","Link","to","PillBadges","map","index","Badge","pill","classNames","bg","ContexualBadges","PositionedBadges","_Fragment","Row","Button","variant","DefaultPagination","items","number","push","Pagination","Item","active","Prev","Next","RoundedPagination","PaginationSizes","size","PaginationAlignment","disabled","BreadcrumbExample","target","rel","Breadcrumb","href","GeneralUI","PageTitle","breadCrumbItems","label","path","title","Col","xl","xs","md","props","appSelector","useRedux","layoutType","state","Layout","LayoutTypes","LAYOUT_HORIZONTAL","LAYOUT_DETACHED","listProps","item"],"mappings":"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","file":"static/js/146.9cb9ac9a.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Row, Col, Card, Pagination, Badge, Breadcrumb, Button } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport classNames from 'classnames';\r\n\r\n// components\r\nimport PageTitle from '../../components/PageTitle';\r\n\r\ninterface ColorTypes {\r\n    name: string;\r\n    color: string;\r\n}\r\n\r\nconst colors: ColorTypes[] = [\r\n    {\r\n        name: 'Primary',\r\n        color: 'primary',\r\n    },\r\n    {\r\n        name: 'Secondary',\r\n        color: 'secondary',\r\n    },\r\n    {\r\n        name: 'Success',\r\n        color: 'success',\r\n    },\r\n    {\r\n        name: 'Danger',\r\n        color: 'danger',\r\n    },\r\n    {\r\n        name: 'Warning',\r\n        color: 'warning',\r\n    },\r\n    {\r\n        name: 'Info',\r\n        color: 'info',\r\n    },\r\n    {\r\n        name: 'Pink',\r\n        color: 'pink',\r\n    },\r\n    {\r\n        name: 'Blue',\r\n        color: 'blue',\r\n    },\r\n    {\r\n        name: 'Light',\r\n        color: 'light',\r\n    },\r\n    {\r\n        name: 'Dark',\r\n        color: 'dark',\r\n    },\r\n];\r\n\r\nconst DefaultBadges = () => {\r\n    return (\r\n        <Card>\r\n            <Card.Body>\r\n                <h4 className=\"header-title\">Default</h4>\r\n                <p className=\"sub-header\">\r\n                    A simple labeling component. Badges scale to match the size of the immediate parent element by using\r\n                    relative font sizing and <code>em</code> units.\r\n                </p>\r\n\r\n                <h1>\r\n                    h1.Example heading <span className=\"badge bg-secondary text-light\">New</span>\r\n                </h1>\r\n                <h2>\r\n                    h2.Example heading <span className=\"badge badge-soft-success\">New</span>\r\n                </h2>\r\n                <h3>\r\n                    h3.Example heading <span className=\"badge bg-primary\">New</span>\r\n                </h3>\r\n                <h4>\r\n                    h4.Example heading{' '}\r\n                    <Link to=\"/\" className=\"badge badge-soft-info\">\r\n                        Info Link\r\n                    </Link>\r\n                </h4>\r\n                <h5>\r\n                    h5.Example heading <span className=\"badge badge-outline-warning\">New</span>\r\n                </h5>\r\n                <h6>\r\n                    h6.Example heading <span className=\"badge bg-danger\">New</span>\r\n                </h6>\r\n            </Card.Body>\r\n        </Card>\r\n    );\r\n};\r\n\r\nconst PillBadges = () => {\r\n    return (\r\n        <Card>\r\n            <Card.Body>\r\n                <h4 className=\"header-title\">Pill Badges</h4>\r\n                <p className=\"sub-header\">\r\n                    Use the <code>.rounded-pill</code> modifier class to make badges more rounded.\r\n                </p>\r\n\r\n                {(colors || []).map((color, index) => {\r\n                    return (\r\n                        <Badge\r\n                            pill\r\n                            className={classNames(\r\n                                'me-1',\r\n                                'bg-' + color.color,\r\n                                color.color === 'light' ? 'text-dark' : null\r\n                            )}\r\n                            key={index}\r\n                        >\r\n                            {color.name}\r\n                        </Badge>\r\n                    );\r\n                })}\r\n\r\n                <h5 className=\"mt-4\">Soft Badges</h5>\r\n                <p className=\"sub-header\">\r\n                    Use the <code>.badge-soft-*</code> modifier class to make badges lighten.\r\n                </p>\r\n\r\n                {(colors || []).map((color, index) => {\r\n                    return (\r\n                        <Badge pill bg=\"\" className={classNames('me-1', 'badge-soft-' + color.color)} key={index}>\r\n                            {color.name}\r\n                        </Badge>\r\n                    );\r\n                })}\r\n\r\n                <h5 className=\"mt-4\">Outline Badges</h5>\r\n                <p className=\"sub-header\">\r\n                    Using the <code>.badge-outline-*</code> to quickly create a bordered badges.\r\n                </p>\r\n\r\n                {(colors || []).map((color, index) => {\r\n                    return (\r\n                        <Badge bg=\"\" pill className={classNames('me-1', 'badge-outline-' + color.color)} key={index}>\r\n                            {color.name}\r\n                        </Badge>\r\n                    );\r\n                })}\r\n            </Card.Body>\r\n        </Card>\r\n    );\r\n};\r\n\r\nconst ContexualBadges = () => {\r\n    return (\r\n        <Card>\r\n            <Card.Body>\r\n                <h4 className=\"header-title\">Contextual variations</h4>\r\n                <p className=\"sub-header\">\r\n                    Add any of the below mentioned modifier classes to change the appearance of a badge. Badge can be\r\n                    more contextual as well. Just use regular convention e.g. <code>bg-*color</code> to have badge with\r\n                    different background.\r\n                </p>\r\n\r\n                {(colors || []).map((color, index) => {\r\n                    return (\r\n                        <Badge\r\n                            className={classNames(\r\n                                'me-1',\r\n                                'badge bg-' + color.color,\r\n                                color.color === 'light' ? 'text-dark' : null\r\n                            )}\r\n                            key={index}\r\n                        >\r\n                            {color.name}\r\n                        </Badge>\r\n                    );\r\n                })}\r\n\r\n                <h5 className=\"mt-4\">Soft Badges</h5>\r\n                <p className=\"sub-header\">\r\n                    Using the <code>.badge-soft-*</code> modifier class, you can have more soften variation.\r\n                </p>\r\n\r\n                {(colors || []).map((color, index) => {\r\n                    return (\r\n                        <Badge className={classNames('me-1', 'badge-soft-' + color.color)} bg=\"\" key={index}>\r\n                            {color.name}\r\n                        </Badge>\r\n                    );\r\n                })}\r\n\r\n                <h5 className=\"mt-4\">Outline Badges</h5>\r\n                <p className=\"sub-header\">\r\n                    Using the <code>.badge-outline-*</code> to quickly create a bordered badges.\r\n                </p>\r\n\r\n                {(colors || []).map((color, index) => {\r\n                    return (\r\n                        <Badge bg=\"\" className={classNames('me-1', 'badge-outline-' + color.color)} key={index}>\r\n                            {color.name}\r\n                        </Badge>\r\n                    );\r\n                })}\r\n            </Card.Body>\r\n        </Card>\r\n    );\r\n};\r\n\r\nconst PositionedBadges = () => {\r\n    return (\r\n        <>\r\n            <Card>\r\n                <Card.Body>\r\n                    <h4 className=\"header-title\">Badge Positioned</h4>\r\n                    <p className=\"sub-header\">\r\n                        Use the <code>.rounded-pill</code> modifier class to make badges more rounded.\r\n                    </p>\r\n\r\n                    <Row>\r\n                        <div className=\"col-6\">\r\n                            <Button className=\"position-relative\">\r\n                                Inbox\r\n                                <Badge pill bg=\"danger\" className=\"position-absolute top-0 start-100 translate-middle\">\r\n                                    99+\r\n                                    <span className=\"visually-hidden\">unread messages</span>\r\n                                </Badge>\r\n                            </Button>\r\n                        </div>\r\n\r\n                        <div className=\"col-6\">\r\n                            <Button className=\"position-relative\">\r\n                                Profile\r\n                                <Badge\r\n                                    bg=\"danger\"\r\n                                    className=\"position-absolute top-0 start-100 translate-middle p-1 border border-light rounded-circle\"\r\n                                >\r\n                                    <span className=\"visually-hidden\">New alerts</span>\r\n                                </Badge>\r\n                            </Button>\r\n                        </div>\r\n\r\n                        <div className=\"col-6\">\r\n                            <Button variant=\"success\" className=\"mt-4\">\r\n                                Notifications{' '}\r\n                                <Badge bg=\"light\" className=\" text-dark ms-1\">\r\n                                    4\r\n                                </Badge>\r\n                            </Button>\r\n                        </div>\r\n                    </Row>\r\n                </Card.Body>\r\n            </Card>\r\n        </>\r\n    );\r\n};\r\n\r\nconst DefaultPagination = () => {\r\n    let items = [];\r\n    for (let number = 1; number <= 5; number++) {\r\n        items.push(\r\n            <Pagination.Item key={number} active={number === 3}>\r\n                {number}\r\n            </Pagination.Item>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <p className=\"mb-1 fw-semibold\">Default Pagination</p>\r\n            <p className=\"text-muted font-14\">Simple pagination inspired by Rdio, great for apps and search results.</p>\r\n            <nav>\r\n                <Pagination>\r\n                    <Pagination.Prev />\r\n                    {items}\r\n                    <Pagination.Next />\r\n                </Pagination>\r\n            </nav>\r\n        </>\r\n    );\r\n};\r\n\r\nconst RoundedPagination = () => {\r\n    let items = [];\r\n    for (let number = 1; number <= 5; number++) {\r\n        items.push(\r\n            <Pagination.Item key={number} active={number === 3}>\r\n                {number}\r\n            </Pagination.Item>\r\n        );\r\n    }\r\n    return (\r\n        <>\r\n            <p className=\"mb-1 fw-semibold mt-4\">Rounded Pagination</p>\r\n            <p className=\"text-muted font-14\">\r\n                Add <code> .pagination-rounded</code> for rounded pagination.\r\n            </p>\r\n            <Pagination className=\"pagination-rounded\">\r\n                <Pagination.Prev />\r\n                {items}\r\n                <Pagination.Next />\r\n            </Pagination>\r\n        </>\r\n    );\r\n};\r\n\r\nconst PaginationSizes = () => {\r\n    let items = [];\r\n    for (let number = 1; number <= 3; number++) {\r\n        items.push(<Pagination.Item key={number}>{number}</Pagination.Item>);\r\n    }\r\n    return (\r\n        <>\r\n            <p className=\"mb-1 fw-semibold mt-4\">Sizing</p>\r\n            <p className=\"text-muted font-14\">\r\n                Add <code>lg</code> or <code>sm</code> type to <code>size</code> prop for additional sizes.\r\n            </p>\r\n\r\n            <Pagination size=\"lg\">\r\n                <Pagination.Prev />\r\n                {items}\r\n                <Pagination.Next />\r\n            </Pagination>\r\n\r\n            <Pagination size=\"sm\">\r\n                <Pagination.Prev />\r\n                {items}\r\n                <Pagination.Next />\r\n            </Pagination>\r\n        </>\r\n    );\r\n};\r\n\r\nconst PaginationAlignment = () => {\r\n    let items = [];\r\n    for (let number = 1; number <= 3; number++) {\r\n        items.push(<Pagination.Item key={number}>{number}</Pagination.Item>);\r\n    }\r\n    return (\r\n        <>\r\n            <p className=\"mb-1 fw-semibold mt-4\">Alignment</p>\r\n            <p className=\"text-muted font-14\">Change the alignment of pagination components with flexbox utilities.</p>\r\n\r\n            <Pagination className=\"justify-content-center\">\r\n                <Pagination.Prev disabled>Previous</Pagination.Prev>\r\n                <Pagination.Item>{1}</Pagination.Item>\r\n                <Pagination.Item>{2}</Pagination.Item>\r\n                <Pagination.Item>{3}</Pagination.Item>\r\n                <Pagination.Next>Next</Pagination.Next>\r\n            </Pagination>\r\n\r\n            <Pagination className=\"justify-content-end\">\r\n                <Pagination.Prev disabled>Previous</Pagination.Prev>\r\n                <Pagination.Item>{1}</Pagination.Item>\r\n                <Pagination.Item>{2}</Pagination.Item>\r\n                <Pagination.Item>{3}</Pagination.Item>\r\n                <Pagination.Next>Next</Pagination.Next>\r\n            </Pagination>\r\n        </>\r\n    );\r\n};\r\n\r\nconst BreadcrumbExample = () => {\r\n    return (\r\n        <>\r\n            <h4 className=\"header-title mt-3 mt-sm-0\">Breadcrumb</h4>\r\n            <p className=\"sub-header\">\r\n                Indicate the current page’s location within a navigational hierarchy that automatically adds separators\r\n                via CSS. Please read the official{' '}\r\n                <Link target=\"_blank\" rel=\"noreferrer\" to=\"https://getbootstrap.com/docs/4.0/components/breadcrumb/\">\r\n                    Bootstrap\r\n                </Link>{' '}\r\n                documentation for more options.\r\n            </p>\r\n\r\n            <Breadcrumb>\r\n                <Breadcrumb.Item active>Home</Breadcrumb.Item>\r\n            </Breadcrumb>\r\n\r\n            <Breadcrumb>\r\n                <Breadcrumb.Item href=\"/\">Home</Breadcrumb.Item>\r\n                <Breadcrumb.Item active>Library</Breadcrumb.Item>\r\n            </Breadcrumb>\r\n\r\n            <Breadcrumb>\r\n                <Breadcrumb.Item href=\"/\">Home</Breadcrumb.Item>\r\n                <Breadcrumb.Item href=\"/ui/general\">Library</Breadcrumb.Item>\r\n                <Breadcrumb.Item active>Data</Breadcrumb.Item>\r\n            </Breadcrumb>\r\n        </>\r\n    );\r\n};\r\n\r\nconst GeneralUI = () => {\r\n    return (\r\n        <>\r\n            <PageTitle\r\n                breadCrumbItems={[\r\n                    { label: 'Base UI', path: '/ui/general' },\r\n                    { label: 'General UI', path: '/ui/general', active: true },\r\n                ]}\r\n                title={'General UI'}\r\n            />\r\n            <Row>\r\n                <Col xl={6}>\r\n                    <DefaultBadges />\r\n                    <PillBadges />\r\n                </Col>\r\n                <Col xl={6}>\r\n                    <ContexualBadges />\r\n                    <PositionedBadges />\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n                <Col xs={12}>\r\n                    <Card>\r\n                        <Card.Body>\r\n                            <Row>\r\n                                <Col md={6}>\r\n                                    <h4 className=\"header-title\">Pagination</h4>\r\n                                    <p className=\"sub-header\">\r\n                                        Provide pagination links for your site or app with the multi-page pagination\r\n                                        component.\r\n                                    </p>\r\n                                    <DefaultPagination />\r\n                                    <RoundedPagination />\r\n                                    <PaginationSizes />\r\n                                    <PaginationAlignment />\r\n                                </Col>\r\n                                <Col md={6}>\r\n                                    <BreadcrumbExample />\r\n                                </Col>\r\n                            </Row>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default GeneralUI;\r\n","import React from 'react';\r\nimport { Row, Col, Breadcrumb } from 'react-bootstrap';\r\nimport classNames from 'classnames';\r\n\r\n// custom hoook\r\nimport { useRedux } from '../hooks/';\r\n\r\n// constants\r\nimport { LayoutTypes } from '../constants/';\r\n\r\ninterface BreadcrumbItems {\r\n    label: string;\r\n    path: string;\r\n    active?: boolean;\r\n}\r\n\r\ninterface PageTitleProps {\r\n    breadCrumbItems: Array<BreadcrumbItems>;\r\n    title: string;\r\n}\r\n\r\n/**\r\n * PageTitle\r\n */\r\nconst PageTitle = (props: PageTitleProps) => {\r\n    const { appSelector } = useRedux();\r\n\r\n    const { layoutType } = appSelector((state) => ({\r\n        layoutType: state.Layout.layoutType,\r\n    }));\r\n\r\n    return (\r\n        <Row>\r\n            <Col xs={12}>\r\n                <div\r\n                    className={classNames('page-title-box', {\r\n                        'page-title-box-alt':\r\n                            layoutType === LayoutTypes.LAYOUT_HORIZONTAL || layoutType === LayoutTypes.LAYOUT_DETACHED,\r\n                    })}\r\n                >\r\n                    <h4 className=\"page-title\">{props.title}</h4>\r\n                    <div className=\"page-title-right\">\r\n                        <Breadcrumb listProps={{ className: 'm-0' }}>\r\n                            <Breadcrumb.Item href=\"/\">Minton</Breadcrumb.Item>\r\n\r\n                            {(props['breadCrumbItems'] || []).map((item, index) => {\r\n                                return item.active ? (\r\n                                    <Breadcrumb.Item active key={index}>\r\n                                        {item.label}\r\n                                    </Breadcrumb.Item>\r\n                                ) : (\r\n                                    <Breadcrumb.Item key={index} href={item.path}>\r\n                                        {item.label}\r\n                                    </Breadcrumb.Item>\r\n                                );\r\n                            })}\r\n                        </Breadcrumb>\r\n                    </div>\r\n                </div>\r\n            </Col>\r\n        </Row>\r\n    );\r\n};\r\n\r\nexport default PageTitle;\r\n"],"sourceRoot":""}