{"version":3,"sources":["pages/maps/VectorMaps.tsx","components/PageTitle.tsx","components/VectorMap/BaseVectorMap.tsx","components/VectorMap/WorldMap.tsx","components/VectorMap/CanadaMap.tsx","components/VectorMap/RussiaMap.tsx","components/VectorMap/SpainMap.tsx","components/VectorMap/UsaVectorMap.tsx","components/VectorMap/ItalyVectorMap.tsx","components/VectorMap/IraqVectorMap.tsx"],"names":["VectorMaps","_jsxs","_Fragment","children","_jsx","PageTitle","breadCrumbItems","label","path","active","title","Row","Col","xs","Card","Body","className","WorldVectorMap","height","width","options","backgroundColor","regionStyle","initial","fill","markers","coords","name","markerStyle","r","stroke","hover","lg","RussiaVectorMap","zoomOnScroll","SpainVectorMap","CanadaVectorMap","UsaVectorMap","ItalyVectorMap","IraqVectorMap","props","appSelector","useRedux","layoutType","state","Layout","classNames","LayoutTypes","LAYOUT_HORIZONTAL","LAYOUT_DETACHED","Breadcrumb","listProps","Item","href","map","item","index","BaseVectorMap","_ref","type","selectorId","Date","getTime","setMap","useState","useEffect","window","selector","id","style"],"mappings":"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","file":"static/js/133.f817bc5b.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Row, Col, Card } from 'react-bootstrap';\r\n\r\n// components\r\nimport PageTitle from '../../components/PageTitle';\r\n\r\n// react plugin for creating vector maps\r\nimport { WorldVectorMap } from '../../components/VectorMap';\r\nimport { RussiaVectorMap } from '../../components/VectorMap';\r\nimport { SpainVectorMap } from '../../components/VectorMap';\r\nimport { CanadaVectorMap } from '../../components/VectorMap';\r\nimport { UsaVectorMap } from '../../components/VectorMap';\r\nimport { ItalyVectorMap } from '../../components/VectorMap';\r\nimport { IraqVectorMap } from '../../components/VectorMap';\r\n\r\nconst VectorMaps = () => {\r\n    // vector map config\r\n    const worldMapOptions = {\r\n        backgroundColor: 'transparent',\r\n        regionStyle: {\r\n            initial: {\r\n                fill: '#d4dadd',\r\n            },\r\n        },\r\n        markers: [\r\n            { coords: [41.9, 12.45], name: 'Vatican City' },\r\n            { coords: [43.73, 7.41], name: 'Monaco' },\r\n            { coords: [-0.52, 166.93], name: 'Nauru' },\r\n            { coords: [-8.51, 179.21], name: 'Tuvalu' },\r\n            { coords: [43.93, 12.46], name: 'San Marino' },\r\n            { coords: [47.14, 9.52], name: 'Liechtenstein' },\r\n            { coords: [7.11, 171.06], name: 'Marshall Islands' },\r\n            { coords: [17.3, -62.73], name: 'Saint Kitts and Nevis' },\r\n            { coords: [3.2, 73.22], name: 'Maldives' },\r\n            { coords: [35.88, 14.5], name: 'Malta' },\r\n            { coords: [12.05, -61.75], name: 'Grenada' },\r\n            { coords: [13.16, -61.23], name: 'Saint Vincent and the Grenadines' },\r\n            { coords: [13.16, -59.55], name: 'Barbados' },\r\n            { coords: [17.11, -61.85], name: 'Antigua and Barbuda' },\r\n            { coords: [-4.61, 55.45], name: 'Seychelles' },\r\n            { coords: [7.35, 134.46], name: 'Palau' },\r\n            { coords: [42.5, 1.51], name: 'Andorra' },\r\n            { coords: [14.01, -60.98], name: 'Saint Lucia' },\r\n            { coords: [6.91, 158.18], name: 'Federated States of Micronesia' },\r\n            { coords: [1.3, 103.8], name: 'Singapore' },\r\n            { coords: [0.33, 6.73], name: 'SÃ£o TomÃ© and PrÃncipe' },\r\n        ],\r\n        markerStyle: {\r\n            initial: {\r\n                r: 9,\r\n                fill: '#3bafda',\r\n                'fill-opacity': 0.9,\r\n                stroke: '#fff',\r\n                'stroke-width': 7,\r\n                'stroke-opacity': 0.4,\r\n            },\r\n            hover: {\r\n                fill: '#3bafda',\r\n                stroke: '#fff',\r\n                'fill-opacity': 1,\r\n                'stroke-width': 1.5,\r\n            },\r\n        },\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <PageTitle\r\n                breadCrumbItems={[\r\n                    { label: 'Maps', path: '/ui/vectormaps' },\r\n                    { label: 'Vector Maps', path: '/ui/vectormaps', active: true },\r\n                ]}\r\n                title={'Vector Maps'}\r\n            />\r\n\r\n            <Row>\r\n                <Col xs={12}>\r\n                    <Card>\r\n                        <Card.Body>\r\n                            <h4 className=\"header-title mb-3\">World Vector Map</h4>\r\n                            <WorldVectorMap height=\"420px\" width=\"100%\" options={worldMapOptions} />\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n                <Col lg={6}>\r\n                    <Card>\r\n                        <Card.Body>\r\n                            <h4 className=\"header-title mb-3\">Russia Vector Map</h4>\r\n                            <RussiaVectorMap\r\n                                height=\"350px\"\r\n                                width=\"100%\"\r\n                                options={{\r\n                                    zoomOnScroll: false,\r\n                                    regionStyle: {\r\n                                        initial: {\r\n                                            fill: '#3bafda',\r\n                                        },\r\n                                    },\r\n                                }}\r\n                            />\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n                <Col lg={6}>\r\n                    <Card>\r\n                        <Card.Body>\r\n                            <h4 className=\"header-title mb-3\">Spain Vector Map</h4>\r\n                            <SpainVectorMap\r\n                                height=\"350px\"\r\n                                width=\"100%\"\r\n                                options={{\r\n                                    zoomOnScroll: false,\r\n                                    backgroundColor: 'transparent',\r\n                                    regionStyle: {\r\n                                        initial: {\r\n                                            fill: '#f7b84b',\r\n                                        },\r\n                                    },\r\n                                }}\r\n                            />\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n                <Col lg={6}>\r\n                    <Card>\r\n                        <Card.Body>\r\n                            <h4 className=\"header-title mb-3\">Canada Vector Map</h4>\r\n                            <CanadaVectorMap\r\n                                height=\"350px\"\r\n                                width=\"100%\"\r\n                                options={{\r\n                                    zoomOnScroll: false,\r\n                                    backgroundColor: 'transparent',\r\n                                    regionStyle: {\r\n                                        initial: {\r\n                                            fill: '#1abc9c',\r\n                                        },\r\n                                    },\r\n                                }}\r\n                            />\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n                <Col lg={6}>\r\n                    <Card>\r\n                        <Card.Body>\r\n                            <h4 className=\"header-title mb-3\">USA Vector Map</h4>\r\n                            <UsaVectorMap\r\n                                height=\"350px\"\r\n                                width=\"100%\"\r\n                                options={{\r\n                                    zoomOnScroll: false,\r\n                                    backgroundColor: 'transparent',\r\n                                    regionStyle: {\r\n                                        initial: {\r\n                                            fill: '#6559cc',\r\n                                        },\r\n                                    },\r\n                                }}\r\n                            />\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n                <Col lg={6}>\r\n                    <Card>\r\n                        <Card.Body>\r\n                            <h4 className=\"header-title mb-3\">Italy Vector Map</h4>\r\n                            <ItalyVectorMap\r\n                                height=\"350px\"\r\n                                width=\"100%\"\r\n                                options={{\r\n                                    zoomOnScroll: false,\r\n                                    backgroundColor: 'transparent',\r\n                                    regionStyle: {\r\n                                        initial: {\r\n                                            fill: '#4a81d4',\r\n                                        },\r\n                                    },\r\n                                }}\r\n                            />\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n                <Col lg={6}>\r\n                    <Card>\r\n                        <Card.Body>\r\n                            <h4 className=\"header-title mb-3\">Iraq Vector Map</h4>\r\n                            <IraqVectorMap\r\n                                height=\"350px\"\r\n                                width=\"100%\"\r\n                                options={{\r\n                                    zoomOnScroll: false,\r\n                                    backgroundColor: 'transparent',\r\n                                    regionStyle: {\r\n                                        initial: {\r\n                                            fill: '#f1556c',\r\n                                        },\r\n                                    },\r\n                                }}\r\n                            />\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default VectorMaps;\r\n","import React from 'react';\r\nimport { Row, Col, Breadcrumb } from 'react-bootstrap';\r\nimport classNames from 'classnames';\r\n\r\n// custom hoook\r\nimport { useRedux } from '../hooks/';\r\n\r\n// constants\r\nimport { LayoutTypes } from '../constants/';\r\n\r\ninterface BreadcrumbItems {\r\n    label: string;\r\n    path: string;\r\n    active?: boolean;\r\n}\r\n\r\ninterface PageTitleProps {\r\n    breadCrumbItems: Array<BreadcrumbItems>;\r\n    title: string;\r\n}\r\n\r\n/**\r\n * PageTitle\r\n */\r\nconst PageTitle = (props: PageTitleProps) => {\r\n    const { appSelector } = useRedux();\r\n\r\n    const { layoutType } = appSelector((state) => ({\r\n        layoutType: state.Layout.layoutType,\r\n    }));\r\n\r\n    return (\r\n        <Row>\r\n            <Col xs={12}>\r\n                <div\r\n                    className={classNames('page-title-box', {\r\n                        'page-title-box-alt':\r\n                            layoutType === LayoutTypes.LAYOUT_HORIZONTAL || layoutType === LayoutTypes.LAYOUT_DETACHED,\r\n                    })}\r\n                >\r\n                    <h4 className=\"page-title\">{props.title}</h4>\r\n                    <div className=\"page-title-right\">\r\n                        <Breadcrumb listProps={{ className: 'm-0' }}>\r\n                            <Breadcrumb.Item href=\"/\">Minton</Breadcrumb.Item>\r\n\r\n                            {(props['breadCrumbItems'] || []).map((item, index) => {\r\n                                return item.active ? (\r\n                                    <Breadcrumb.Item active key={index}>\r\n                                        {item.label}\r\n                                    </Breadcrumb.Item>\r\n                                ) : (\r\n                                    <Breadcrumb.Item key={index} href={item.path}>\r\n                                        {item.label}\r\n                                    </Breadcrumb.Item>\r\n                                );\r\n                            })}\r\n                        </Breadcrumb>\r\n                    </div>\r\n                </div>\r\n            </Col>\r\n        </Row>\r\n    );\r\n};\r\n\r\nexport default PageTitle;\r\n","import React, { useEffect, useState } from 'react';\r\n\r\ninterface BaseVectorMapProps {\r\n    width?: string;\r\n    height?: string;\r\n    options?: any;\r\n    type: string;\r\n}\r\n\r\nconst BaseVectorMap = ({ width, height, options, type }: BaseVectorMapProps) => {\r\n    const selectorId = type + new Date().getTime();\r\n    const [map, setMap] = useState<any>();\r\n\r\n    useEffect(() => {\r\n        if (!map) {\r\n            // create jsvectormap\r\n            const map = new (window as any)['jsVectorMap']({\r\n                selector: '#' + selectorId,\r\n                map: type,\r\n                ...options,\r\n            });\r\n\r\n            setMap(map);\r\n        }\r\n    }, [selectorId, map, options, type]);\r\n\r\n    return (\r\n        <>\r\n            <div id={selectorId} style={{ width: width, height: height }}></div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default BaseVectorMap;\r\n","import React from 'react';\r\nimport 'jsvectormap';\r\nimport 'jsvectormap/dist/maps/world.js';\r\n\r\n//components\r\nimport BaseVectorMap from './BaseVectorMap';\r\n\r\ninterface WorldVectorMapProps {\r\n    width?: string;\r\n    height?: string;\r\n    options?: any;\r\n}\r\n\r\nconst WorldVectorMap = ({ width, height, options }: WorldVectorMapProps) => {\r\n    return (\r\n        <>\r\n            <BaseVectorMap width={width} height={height} options={options} type=\"world\" />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default WorldVectorMap;\r\n","import React from 'react';\r\nimport 'jsvectormap';\r\nimport 'jsvectormap/dist/maps/canada.js';\r\n\r\n//components\r\nimport BaseVectorMap from './BaseVectorMap';\r\n\r\ninterface CanadaVectorMapProps {\r\n    width?: string;\r\n    height?: string;\r\n    options?: any;\r\n}\r\n\r\nconst CanadaVectorMap = ({ width, height, options }: CanadaVectorMapProps) => {\r\n    return (\r\n        <>\r\n            <BaseVectorMap width={width} height={height} options={options} type=\"canada\" />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default CanadaVectorMap;\r\n","import React from 'react';\r\nimport 'jsvectormap';\r\nimport 'jsvectormap/dist/maps/russia.js';\r\n\r\n//components\r\nimport BaseVectorMap from './BaseVectorMap';\r\n\r\ninterface RussiaVectorMapProps {\r\n    width?: string;\r\n    height?: string;\r\n    options?: any;\r\n}\r\n\r\nconst RussiaVectorMap = ({ width, height, options }: RussiaVectorMapProps) => {\r\n    return (\r\n        <>\r\n            <BaseVectorMap width={width} height={height} options={options} type=\"russia\" />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default RussiaVectorMap;\r\n","import React from 'react';\r\nimport 'jsvectormap';\r\nimport 'jsvectormap/dist/maps/spain.js';\r\n\r\n//components\r\nimport BaseVectorMap from './BaseVectorMap';\r\n\r\ninterface SpainVectorMapProps {\r\n    width?: string;\r\n    height?: string;\r\n    options?: any;\r\n}\r\n\r\nconst SpainVectorMap = ({ width, height, options }: SpainVectorMapProps) => {\r\n    return (\r\n        <>\r\n            <BaseVectorMap width={width} height={height} options={options} type=\"spain\" />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default SpainVectorMap;\r\n","import React from 'react';\r\nimport 'jsvectormap';\r\nimport 'jsvectormap/dist/maps/us-merc-en.js';\r\n\r\n//components\r\nimport BaseVectorMap from './BaseVectorMap';\r\n\r\ninterface UsaVectorMapProps {\r\n    width?: string;\r\n    height?: string;\r\n    options?: any;\r\n}\r\n\r\nconst UsaVectorMap = ({ width, height, options }: UsaVectorMapProps) => {\r\n    return (\r\n        <>\r\n            <BaseVectorMap width={width} height={height} options={options} type=\"us_merc_en\" />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default UsaVectorMap;\r\n","import React from 'react';\r\nimport 'jsvectormap';\r\nimport 'jsvectormap/dist/maps/italy.js';\r\n\r\n//components\r\nimport BaseVectorMap from './BaseVectorMap';\r\n\r\ninterface ItalyVectorMapProps {\r\n    width?: string;\r\n    height?: string;\r\n    options?: any;\r\n}\r\n\r\nconst ItalyVectorMap = ({ width, height, options }: ItalyVectorMapProps) => {\r\n    return (\r\n        <>\r\n            <BaseVectorMap width={width} height={height} options={options} type=\"italy\" />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ItalyVectorMap;\r\n","import React from 'react';\r\nimport 'jsvectormap';\r\nimport 'jsvectormap/dist/maps/iraq.js';\r\n\r\n//components\r\nimport BaseVectorMap from './BaseVectorMap';\r\n\r\ninterface IraqVectorMapProps {\r\n    width?: string;\r\n    height?: string;\r\n    options?: any;\r\n}\r\n\r\nconst IraqVectorMap = ({ width, height, options }: IraqVectorMapProps) => {\r\n    return (\r\n        <>\r\n            <BaseVectorMap width={width} height={height} options={options} type=\"iraq\" />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default IraqVectorMap;\r\n"],"sourceRoot":""}