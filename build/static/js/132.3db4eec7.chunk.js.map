{"version":3,"sources":["pages/forms/Advanced.tsx","components/PageTitle.tsx","components/Datepicker.tsx"],"names":["ReactSelect","_jsx","Card","children","_jsxs","Body","className","Link","rel","to","pathname","target","Select","classNamePrefix","options","value","label","isMulti","Typeaheads","singleSelections","setSingleSelections","useState","multiSelections","setMultiSelections","id","Typeahead","labelKey","multiple","onChange","selected","placeholder","DatePickers","selectedDate1","setSelectedDate1","Date","selectedDate2","setSelectedDate2","selectedDate3","setSelectedDate3","selectedDate4","setSelectedDate4","selectedDate5","setSelectedDate5","dateRange","setDateRange","setDate","getDate","startDate","endDate","Row","Col","lg","MintonDatepicker","hideAddon","date","monthsShown","dateFormat","selectsRange","showTimeSelect","timeFormat","tI","timeCaption","showTimeSelectOnly","InputMasks","MaskedInput","mask","FormAdvanced","React","Fragment","PageTitle","breadCrumbItems","path","active","title","xs","props","appSelector","useRedux","layoutType","state","Layout","classNames","LayoutTypes","LAYOUT_HORIZONTAL","LAYOUT_DETACHED","Breadcrumb","listProps","Item","href","map","item","index","DatepickerInput","forwardRef","ref","type","inputClass","onClick","onDateValueChange","console","log","DatepickerInputWithAddon","readOnly","input","_Fragment","DatePicker","calendarClassName","customInput","timeIntervals","minDate","maxDate","inline","autoComplete"],"mappings":"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","file":"static/js/132.3db4eec7.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport { Row, Col, Card } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport Select from 'react-select';\r\nimport { Typeahead } from 'react-bootstrap-typeahead';\r\nimport 'react-bootstrap-typeahead/css/Typeahead.css';\r\nimport MaskedInput from 'react-text-mask';\r\n\r\n// components\r\nimport PageTitle from '../../components/PageTitle';\r\nimport MintonDatepicker from '../../components/Datepicker';\r\n\r\nconst ReactSelect = () => {\r\n    return (\r\n        <Card>\r\n            <Card.Body>\r\n                <h4 className=\"header-title\">\r\n                    <Link\r\n                        rel=\"noreferrer\"\r\n                        to={{ pathname: 'https://github.com/JedWatson/react-select' }}\r\n                        target=\"_blank\"\r\n                    >\r\n                        React select\r\n                    </Link>\r\n                </h4>\r\n                <p className=\"mb-1 mt-3 fw-bold\">Single Selection</p>\r\n                <p className=\"text-muted fs-14\">React-Select based Select element</p>\r\n                <Select\r\n                    className=\"react-select react-select-container\"\r\n                    classNamePrefix=\"react-select\"\r\n                    options={[\r\n                        { value: 'chocolate', label: 'Chocolate' },\r\n                        { value: 'strawberry', label: 'Strawberry' },\r\n                        { value: 'vanilla', label: 'Vanilla' },\r\n                    ]}\r\n                ></Select>\r\n\r\n                <p className=\"mb-1 mt-3 fw-bold\">Multiple Selection</p>\r\n                <p className=\"text-muted fs-14\">React-Select based Select (Multiple) element</p>\r\n                <Select\r\n                    isMulti={true}\r\n                    options={[\r\n                        { value: 'chocolate', label: 'Chocolate' },\r\n                        { value: 'strawberry', label: 'Strawberry' },\r\n                        { value: 'vanilla', label: 'Vanilla' },\r\n                    ]}\r\n                    className=\"react-select react-select-container\"\r\n                    classNamePrefix=\"react-select\"\r\n                ></Select>\r\n            </Card.Body>\r\n        </Card>\r\n    );\r\n};\r\n\r\ninterface OptionTypes {\r\n    id: number | string;\r\n    value: string;\r\n    label: string;\r\n}\r\nconst Typeaheads = () => {\r\n    const [singleSelections, setSingleSelections] = useState<OptionTypes[]>([]);\r\n    const [multiSelections, setMultiSelections] = useState<OptionTypes[]>([]);\r\n\r\n    const options: Array<OptionTypes> = [\r\n        { id: 1, value: 'chocolate', label: 'Chocolate' },\r\n        { id: 2, value: 'strawberry', label: 'Strawberry' },\r\n        { id: 3, value: 'vanilla', label: 'Vanilla' },\r\n    ];\r\n\r\n    const onChangeSingleSelection = (selected: any[]) => {\r\n        setSingleSelections(selected);\r\n    };\r\n\r\n    const onChangeMultipleSelection = (selected: OptionTypes[]) => {\r\n        setMultiSelections(selected);\r\n    };\r\n\r\n    return (\r\n        <Card>\r\n            <Card.Body>\r\n                <h4 className=\"header-title\">\r\n                    <Link\r\n                        rel=\"noreferrer\"\r\n                        to={{ pathname: 'http://ericgio.github.io/react-bootstrap-typeahead/' }}\r\n                        target=\"_blank\"\r\n                    >\r\n                        Typeahead\r\n                    </Link>\r\n                </h4>\r\n                <p className=\"mb-1 mt-3 fw-bold\">Single Selection</p>\r\n                <p className=\"text-muted fs-14\">Typeahead based Select element</p>\r\n                <Typeahead\r\n                    id=\"select2\"\r\n                    labelKey={'label'}\r\n                    multiple={false}\r\n                    onChange={onChangeSingleSelection}\r\n                    options={options}\r\n                    placeholder=\"Choose a state...\"\r\n                    selected={singleSelections}\r\n                />\r\n\r\n                <p className=\"mb-1 mt-3 fw-bold\">Multiple Selection</p>\r\n                <p className=\"text-muted fs-14\">Typeahead based Select (Multiple) element</p>\r\n                <Typeahead\r\n                    id=\"select3\"\r\n                    labelKey=\"label\"\r\n                    multiple\r\n                    onChange={onChangeMultipleSelection}\r\n                    options={options}\r\n                    placeholder=\"Choose a state...\"\r\n                    selected={multiSelections}\r\n                />\r\n            </Card.Body>\r\n        </Card>\r\n    );\r\n};\r\n\r\nconst DatePickers = () => {\r\n    const [selectedDate1, setSelectedDate1] = useState<Date>(new Date());\r\n    const [selectedDate2, setSelectedDate2] = useState<Date>(new Date());\r\n    const [selectedDate3, setSelectedDate3] = useState<Date>(new Date());\r\n    const [selectedDate4, setSelectedDate4] = useState<Date>(new Date());\r\n    const [selectedDate5, setSelectedDate5] = useState<Date>(new Date());\r\n    const [dateRange, setDateRange] = useState<any>([new Date(), new Date().setDate(new Date().getDate() + 7)]);\r\n    const [startDate, endDate] = dateRange;\r\n\r\n    return (\r\n        <Card>\r\n            <Card.Body>\r\n                <h4 className=\"header-title\">Date &amp; Time Picker</h4>\r\n                <p className=\"text-muted fs-14\">\r\n                    A simple date picker using{' '}\r\n                    <Link target=\"_blank\" rel=\"noreferrer\" to={{ pathname: 'https://reactdatepicker.com/' }}>\r\n                        ReactJS Datepicker\r\n                    </Link>\r\n                </p>\r\n\r\n                <Row>\r\n                    <Col lg={6}>\r\n                        <div className=\"mb-3\">\r\n                            <label className=\"form-label\">Single Date</label> <br />\r\n                            <MintonDatepicker\r\n                                hideAddon={true}\r\n                                value={selectedDate1}\r\n                                onChange={(date) => {\r\n                                    setSelectedDate1(date);\r\n                                }}\r\n                            />\r\n                        </div>\r\n                    </Col>\r\n                    <Col lg={6}>\r\n                        <div className=\"mb-3\">\r\n                            <label className=\"form-label\">Single Date with multiple months</label> <br />\r\n                            <MintonDatepicker\r\n                                hideAddon={true}\r\n                                monthsShown={2}\r\n                                value={selectedDate2}\r\n                                onChange={(date) => {\r\n                                    setSelectedDate2(date);\r\n                                }}\r\n                            />\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n\r\n                <Row>\r\n                    <Col lg={6}>\r\n                        <div className=\"mb-3\">\r\n                            <label className=\"form-label\">Custom date format</label> <br />\r\n                            <MintonDatepicker\r\n                                hideAddon={true}\r\n                                dateFormat=\"yyyy-MM-dd\"\r\n                                value={selectedDate3}\r\n                                onChange={(date) => {\r\n                                    setSelectedDate3(date);\r\n                                }}\r\n                            />\r\n                        </div>\r\n                    </Col>\r\n                    <Col lg={6}>\r\n                        <div className=\"mb-3\">\r\n                            <label className=\"form-label\">Specific date range</label> <br />\r\n                            <MintonDatepicker\r\n                                selectsRange\r\n                                startDate={startDate}\r\n                                endDate={endDate}\r\n                                hideAddon={true}\r\n                                dateFormat={'yyyy/MM/dd'}\r\n                                onChange={(date) => {\r\n                                    setDateRange(date);\r\n                                }}\r\n                            />\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n\r\n                <Row>\r\n                    <Col lg={6}>\r\n                        <div className=\"mb-3\">\r\n                            <label className=\"form-label\">Select Time</label> <br />\r\n                            <MintonDatepicker\r\n                                hideAddon={true}\r\n                                showTimeSelect\r\n                                timeFormat=\"HH:mm\"\r\n                                tI={60}\r\n                                dateFormat=\"MMMM d, yyyy h:mm aa\"\r\n                                timeCaption=\"time\"\r\n                                value={selectedDate4}\r\n                                onChange={(date) => {\r\n                                    setSelectedDate4(date);\r\n                                }}\r\n                            />\r\n                        </div>\r\n                    </Col>\r\n                    <Col lg={6}>\r\n                        <div className=\"mb-3\">\r\n                            <label className=\"form-label\">Time only</label> <br />\r\n                            <MintonDatepicker\r\n                                hideAddon={true}\r\n                                showTimeSelect\r\n                                showTimeSelectOnly\r\n                                tI={60}\r\n                                dateFormat=\"h:mm aa\"\r\n                                timeCaption=\"Time\"\r\n                                value={selectedDate5}\r\n                                onChange={(date) => {\r\n                                    setSelectedDate5(date);\r\n                                }}\r\n                            />\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n            </Card.Body>\r\n        </Card>\r\n    );\r\n};\r\n\r\nconst InputMasks = () => {\r\n    return (\r\n        <Card>\r\n            <Card.Body>\r\n                <h4 className=\"header-title\">Input Masks</h4>\r\n                <p className=\"text-muted fs-14\">\r\n                    Input masks by{' '}\r\n                    <Link\r\n                        target=\"_blank\"\r\n                        rel=\"noreferrer\"\r\n                        to={{ pathname: 'https://github.com/text-mask/text-mask/tree/master/react#readme' }}\r\n                    >\r\n                        react-text-mask\r\n                    </Link>\r\n                </p>\r\n\r\n                <Row>\r\n                    <Col lg={6}>\r\n                        <div className=\"mb-3\">\r\n                            <label className=\"form-label\">Phone Number with Area Code</label> <br />\r\n                            <MaskedInput\r\n                                mask={[\r\n                                    '(',\r\n                                    /[1-9]/,\r\n                                    /\\d/,\r\n                                    ')',\r\n                                    ' ',\r\n                                    /\\d/,\r\n                                    /\\d/,\r\n                                    /\\d/,\r\n                                    /\\d/,\r\n                                    '-',\r\n                                    /\\d/,\r\n                                    /\\d/,\r\n                                    /\\d/,\r\n                                    /\\d/,\r\n                                ]}\r\n                                placeholder=\"(__) ____-____\"\r\n                                className=\"form-control\"\r\n                            />\r\n                        </div>\r\n                    </Col>\r\n                    <Col lg={6}>\r\n                        <div className=\"mb-3\">\r\n                            <label className=\"form-label\">US Phone Number</label> <br />\r\n                            <MaskedInput\r\n                                mask={[\r\n                                    '(',\r\n                                    /[1-9]/,\r\n                                    /\\d/,\r\n                                    /\\d/,\r\n                                    ')',\r\n                                    ' ',\r\n                                    /\\d/,\r\n                                    /\\d/,\r\n                                    /\\d/,\r\n                                    '-',\r\n                                    /\\d/,\r\n                                    /\\d/,\r\n                                    /\\d/,\r\n                                    /\\d/,\r\n                                ]}\r\n                                placeholder=\"(___) ___-____\"\r\n                                className=\"form-control\"\r\n                            />\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n\r\n                <Row>\r\n                    <Col lg={6}>\r\n                        <div className=\"mb-3\">\r\n                            <label className=\"form-label\">Date</label> <br />\r\n                            <MaskedInput\r\n                                mask={[/\\d/, /\\d/, '/', /\\d/, /\\d/, '/', /\\d/, /\\d/, /\\d/, /\\d/]}\r\n                                placeholder=\"__/__/____\"\r\n                                className=\"form-control\"\r\n                            />\r\n                        </div>\r\n                    </Col>\r\n                    <Col lg={6}>\r\n                        <div className=\"mb-3\">\r\n                            <label className=\"form-label\">Time</label> <br />\r\n                            <MaskedInput\r\n                                mask={[/\\d/, /\\d/, ':', /\\d/, /\\d/, ':', /\\d/, /\\d/]}\r\n                                placeholder=\"__:__:__\"\r\n                                className=\"form-control\"\r\n                            />\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n            </Card.Body>\r\n        </Card>\r\n    );\r\n};\r\n\r\nconst FormAdvanced = () => {\r\n    return (\r\n        <React.Fragment>\r\n            <PageTitle\r\n                breadCrumbItems={[\r\n                    { label: 'Forms', path: '/forms/advanced' },\r\n                    { label: 'Form Advanced', path: '/forms/advanced', active: true },\r\n                ]}\r\n                title={'Form Advanced'}\r\n            />\r\n\r\n            <Row>\r\n                <Col lg={6}>\r\n                    <ReactSelect />\r\n                </Col>\r\n                <Col lg={6}>\r\n                    <Typeaheads />\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n                <Col xs={12}>\r\n                    <DatePickers />\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n                <Col xs={12}>\r\n                    <InputMasks />\r\n                </Col>\r\n            </Row>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default FormAdvanced;\r\n","import React from 'react';\r\nimport { Row, Col, Breadcrumb } from 'react-bootstrap';\r\nimport classNames from 'classnames';\r\n\r\n// custom hoook\r\nimport { useRedux } from '../hooks/';\r\n\r\n// constants\r\nimport { LayoutTypes } from '../constants/';\r\n\r\ninterface BreadcrumbItems {\r\n    label: string;\r\n    path: string;\r\n    active?: boolean;\r\n}\r\n\r\ninterface PageTitleProps {\r\n    breadCrumbItems: Array<BreadcrumbItems>;\r\n    title: string;\r\n}\r\n\r\n/**\r\n * PageTitle\r\n */\r\nconst PageTitle = (props: PageTitleProps) => {\r\n    const { appSelector } = useRedux();\r\n\r\n    const { layoutType } = appSelector((state) => ({\r\n        layoutType: state.Layout.layoutType,\r\n    }));\r\n\r\n    return (\r\n        <Row>\r\n            <Col xs={12}>\r\n                <div\r\n                    className={classNames('page-title-box', {\r\n                        'page-title-box-alt':\r\n                            layoutType === LayoutTypes.LAYOUT_HORIZONTAL || layoutType === LayoutTypes.LAYOUT_DETACHED,\r\n                    })}\r\n                >\r\n                    <h4 className=\"page-title\">{props.title}</h4>\r\n                    <div className=\"page-title-right\">\r\n                        <Breadcrumb listProps={{ className: 'm-0' }}>\r\n                            <Breadcrumb.Item href=\"/\">Minton</Breadcrumb.Item>\r\n\r\n                            {(props['breadCrumbItems'] || []).map((item, index) => {\r\n                                return item.active ? (\r\n                                    <Breadcrumb.Item active key={index}>\r\n                                        {item.label}\r\n                                    </Breadcrumb.Item>\r\n                                ) : (\r\n                                    <Breadcrumb.Item key={index} href={item.path}>\r\n                                        {item.label}\r\n                                    </Breadcrumb.Item>\r\n                                );\r\n                            })}\r\n                        </Breadcrumb>\r\n                    </div>\r\n                </div>\r\n            </Col>\r\n        </Row>\r\n    );\r\n};\r\n\r\nexport default PageTitle;\r\n","import React, { forwardRef } from 'react';\r\nimport DatePicker from 'react-datepicker';\r\nimport classNames from 'classnames';\r\n\r\ninterface DatepickerInputProps {\r\n    onClick?: () => void;\r\n    value?: string;\r\n    inputClass: string;\r\n    children?: React.ReactNode;\r\n}\r\n\r\n/* Datepicker with Input */\r\nconst DatepickerInput = forwardRef<HTMLInputElement, DatepickerInputProps>((props, ref) => {\r\n    const onDateValueChange = () => {\r\n        console.log('date value changed');\r\n    };\r\n    return (\r\n        <input\r\n            type=\"text\"\r\n            className={classNames('form-control', props.inputClass)}\r\n            onClick={props.onClick}\r\n            value={props.value}\r\n            onChange={onDateValueChange}\r\n            ref={ref}\r\n        />\r\n    );\r\n});\r\n\r\n/* Datepicker with Addon Input */\r\nconst DatepickerInputWithAddon = forwardRef<HTMLInputElement, DatepickerInputProps>((props, ref) => (\r\n    <div className=\"input-group position-relative\" ref={ref}>\r\n        <input\r\n            type=\"text\"\r\n            className={classNames('form-control', props.inputClass)}\r\n            onClick={props.onClick}\r\n            value={props.value}\r\n            readOnly\r\n        />\r\n        <span className=\"input-group-text\">\r\n            <i className=\"ri-calendar-event-fill\"></i>\r\n        </span>\r\n    </div>\r\n));\r\n\r\ninterface MintonDatepickerProps {\r\n    value?: Date;\r\n    selectsRange?: boolean;\r\n    startDate?: Date;\r\n    endDate?: Date;\r\n    calendarClassName?: string;\r\n    onChange: (date: any) => void;\r\n    hideAddon?: boolean;\r\n    inputClass?: string;\r\n    dateFormat?: string;\r\n    minDate?: Date;\r\n    maxDate?: Date;\r\n    showTimeSelect?: boolean;\r\n    tI?: number;\r\n    timeCaption?: string;\r\n    timeFormat?: string;\r\n    showTimeSelectOnly?: boolean;\r\n    monthsShown?: number;\r\n    inline?: boolean;\r\n}\r\n\r\nconst MintonDatepicker = (props: MintonDatepickerProps) => {\r\n    // handle custom input\r\n    const input =\r\n        (props.hideAddon || false) === true ? (\r\n            <DatepickerInput inputClass={props.inputClass!} />\r\n        ) : (\r\n            <DatepickerInputWithAddon inputClass={props.inputClass!} />\r\n        );\r\n\r\n    return (\r\n        <>\r\n            {/* date picker control */}\r\n            <DatePicker\r\n                calendarClassName={props.calendarClassName || 'shadow'}\r\n                selectsRange={props.selectsRange}\r\n                startDate={props.startDate}\r\n                endDate={props.endDate}\r\n                selected={props.value}\r\n                onChange={(date) => props.onChange(date)}\r\n                customInput={input}\r\n                timeIntervals={props.tI}\r\n                showTimeSelect={props.showTimeSelect}\r\n                timeFormat={props.timeFormat || 'hh:mm a'}\r\n                timeCaption={props.timeCaption}\r\n                dateFormat={props.dateFormat || 'MM/dd/yyyy'}\r\n                minDate={props.minDate}\r\n                maxDate={props.maxDate}\r\n                monthsShown={props.monthsShown}\r\n                showTimeSelectOnly={props.showTimeSelectOnly}\r\n                inline={props.inline}\r\n                autoComplete=\"off\"\r\n            />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default MintonDatepicker;\r\n"],"sourceRoot":""}