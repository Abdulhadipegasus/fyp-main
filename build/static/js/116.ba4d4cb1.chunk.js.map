{"version":3,"sources":["pages/forms/Basic.tsx","components/PageTitle.tsx","../node_modules/react-bootstrap/esm/CardHeaderContext.js","../node_modules/react-bootstrap/esm/Row.js","../node_modules/react-bootstrap/esm/BreadcrumbItem.js","../node_modules/react-bootstrap/esm/Breadcrumb.js","../node_modules/react-bootstrap/esm/Col.js","../node_modules/dom-helpers/esm/ownerDocument.js","../node_modules/@restart/hooks/esm/useMergedRefs.js","../node_modules/dom-helpers/esm/canUseDOM.js","components/form/VerticalForm.tsx","components/form/FormInput.tsx","../node_modules/dom-helpers/esm/addEventListener.js","../node_modules/dom-helpers/esm/listen.js","../node_modules/dom-helpers/esm/removeEventListener.js"],"names":["BasicInputElements","methods","useForm","defaultValues","textInput","password","statictext","color","handleSubmit","register","control","formState","errors","_jsx","_Fragment","children","Card","_jsxs","Body","className","Row","Col","xs","Form","onSubmit","Group","as","Label","column","md","FormInput","type","name","placeholder","endIcon","rows","id","readOnly","disabled","containerClass","Control","Text","value","multiple","Range","list","FloatingLabels","FloatingLabel","controlId","label","Select","style","height","defaultValue","Check","Button","variant","SelectInput","lg","size","Switches","React","Fragment","defaultChecked","CustomCheckboxes","CustomRadios","InputSizes","htmlFor","InputGroup","Dropdown","Toggle","Menu","Item","href","Divider","DefaultForm","e","preventDefault","HorizontalForm","sm","InlineForm","bsPrefix","visuallyHidden","FormGrid","BasicForms","PageTitle","breadCrumbItems","path","active","title","xl","props","appSelector","useRedux","layoutType","state","Layout","classNames","LayoutTypes","LAYOUT_HORIZONTAL","LAYOUT_DETACHED","Breadcrumb","listProps","map","item","index","context","displayName","DEVICE_SIZES","_ref","ref","Component","decoratedBsPrefix","useBootstrapPrefix","sizePrefix","concat","classes","forEach","brkPoint","propValue","cols","infix","push","BreadcrumbItem","linkAs","LinkComponent","Anchor","linkProps","target","prefix","undefined","defaultProps","Object","assign","useCol","spans","span","offset","order","colProps","length","ownerDocument","node","document","toFnRef","current","useMergedRefs","refA","refB","useMemo","a","b","mergeRefs","window","createElement","VerticalForm","resolver","formClass","noValidate","Array","isArray","child","key","PasswordInput","refCallback","otherProps","showPassword","setShowPassword","useState","r","isInvalid","autoComplete","onClick","Feedback","TextualInput","_ref2","comp","CheckInput","_ref3","_ref4","_ref5","labelClassName","hasEndIcon","optionsSupported","onceSupported","options","passive","once","canUseDOM","addEventListener","removeEventListener","eventName","handler","capture","wrappedHandler","__once","onceHandler","event","this","call","listen"],"mappings":"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","file":"static/js/116.ba4d4cb1.chunk.js","sourcesContent":["import React from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { Row, Col, Card, Form, FloatingLabel, InputGroup, Button, Dropdown } from 'react-bootstrap';\r\n\r\n// components\r\nimport PageTitle from '../../components/PageTitle';\r\nimport { FormInput } from '../../components/form/';\r\n\r\nconst BasicInputElements = () => {\r\n    /*\r\n     * form methods\r\n     */\r\n    const methods = useForm({\r\n        defaultValues: {\r\n            textInput: 'Some Text Value...',\r\n            password: '12345',\r\n            statictext: 'email@example.com',\r\n            color: '#3bafda',\r\n        },\r\n    });\r\n    const {\r\n        handleSubmit,\r\n        register,\r\n        control,\r\n        formState: { errors },\r\n    } = methods;\r\n\r\n    return (\r\n        <>\r\n            <Card>\r\n                <Card.Body>\r\n                    <h4 className=\"header-title\">Input Types</h4>\r\n                    <p className=\"sub-header\">\r\n                        Most common form control, text-based input fields. Includes support for all HTML5 types:{' '}\r\n                        <code>text</code>, <code>password</code>, <code>datetime</code>, <code>datetime-local</code>,{' '}\r\n                        <code>date</code>, <code>month</code>, <code>time</code>, <code>week</code>, <code>number</code>\r\n                        , <code>email</code>, <code>url</code>, <code>search</code>, <code>tel</code>, and{' '}\r\n                        <code>color</code>.\r\n                    </p>\r\n\r\n                    <Row>\r\n                        <Col xs={12}>\r\n                            <div className=\"p-2\">\r\n                                <Form onSubmit={handleSubmit(() => {})}>\r\n                                    <Form.Group as={Row} className=\"mb-2\">\r\n                                        <Form.Label column md={2}>\r\n                                            Text\r\n                                        </Form.Label>\r\n                                        <Col md={10}>\r\n                                            <FormInput\r\n                                                type=\"text\"\r\n                                                name=\"textInput\"\r\n                                                register={register}\r\n                                                key=\"text\"\r\n                                                errors={errors}\r\n                                                control={control}\r\n                                            />\r\n                                        </Col>\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group as={Row} className=\"mb-2\">\r\n                                        <Form.Label column md={2}>\r\n                                            Email\r\n                                        </Form.Label>\r\n                                        <Col md={10}>\r\n                                            <FormInput\r\n                                                type=\"email\"\r\n                                                name=\"email\"\r\n                                                placeholder=\"Email\"\r\n                                                register={register}\r\n                                                key=\"email\"\r\n                                                errors={errors}\r\n                                                control={control}\r\n                                            />\r\n                                        </Col>\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group as={Row} className=\"mb-2\">\r\n                                        <Form.Label column md={2}>\r\n                                            Password\r\n                                        </Form.Label>\r\n                                        <Col md={10}>\r\n                                            <FormInput\r\n                                                type=\"password\"\r\n                                                name=\"password\"\r\n                                                endIcon={false}\r\n                                                register={register}\r\n                                                key=\"password\"\r\n                                                errors={errors}\r\n                                                control={control}\r\n                                            />\r\n                                        </Col>\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group as={Row} className=\"mb-2\">\r\n                                        <Form.Label column md={2}>\r\n                                            Show/Hide Password\r\n                                        </Form.Label>\r\n                                        <Col md={10}>\r\n                                            <FormInput\r\n                                                type=\"password\"\r\n                                                name=\"password\"\r\n                                                placeholder=\"password placeholder\"\r\n                                                register={register}\r\n                                                key=\"password\"\r\n                                                errors={errors}\r\n                                                control={control}\r\n                                            />\r\n                                        </Col>\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group as={Row} className=\"mb-2\">\r\n                                        <Form.Label column md={2}>\r\n                                            Placeholder\r\n                                        </Form.Label>\r\n                                        <Col md={10}>\r\n                                            <FormInput\r\n                                                type=\"text\"\r\n                                                name=\"placeholder\"\r\n                                                placeholder=\"placeholder\"\r\n                                                register={register}\r\n                                                key=\"placeholder\"\r\n                                                errors={errors}\r\n                                                control={control}\r\n                                            />\r\n                                        </Col>\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group as={Row} className=\"mb-2\">\r\n                                        <Form.Label column md={2}>\r\n                                            Text Area\r\n                                        </Form.Label>\r\n                                        <Col md={10}>\r\n                                            <FormInput\r\n                                                type=\"textarea\"\r\n                                                name=\"textarea\"\r\n                                                rows={5}\r\n                                                register={register}\r\n                                                key=\"textarea\"\r\n                                                errors={errors}\r\n                                                control={control}\r\n                                            />\r\n                                        </Col>\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group as={Row} className=\"mb-2\">\r\n                                        <Form.Label column md={2}>\r\n                                            Read only\r\n                                        </Form.Label>\r\n                                        <Col md={10}>\r\n                                            <FormInput\r\n                                                type=\"text\"\r\n                                                name=\"text1\"\r\n                                                id=\"text1\"\r\n                                                placeholder=\"Readonly value\"\r\n                                                readOnly\r\n                                                register={register}\r\n                                                key=\"text1\"\r\n                                                errors={errors}\r\n                                                control={control}\r\n                                            />\r\n                                        </Col>\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group as={Row} className=\"mb-2\">\r\n                                        <Form.Label column md={2}>\r\n                                            Disabled\r\n                                        </Form.Label>\r\n                                        <Col md={10}>\r\n                                            <FormInput\r\n                                                type=\"text\"\r\n                                                name=\"text2\"\r\n                                                id=\"text2\"\r\n                                                placeholder=\"Disabled value\"\r\n                                                disabled\r\n                                                containerClass={'mb-3'}\r\n                                                register={register}\r\n                                                key=\"text2\"\r\n                                                errors={errors}\r\n                                                control={control}\r\n                                            />\r\n                                        </Col>\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group as={Row} className=\"mb-2\">\r\n                                        <Form.Label column md={2}>\r\n                                            Static control\r\n                                        </Form.Label>\r\n                                        <Col md={10}>\r\n                                            <FormInput\r\n                                                type=\"text\"\r\n                                                name=\"statictext\"\r\n                                                className=\"form-control-plaintext\"\r\n                                                register={register}\r\n                                                key=\"statictext\"\r\n                                                errors={errors}\r\n                                                control={control}\r\n                                            />\r\n                                        </Col>\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group as={Row} className=\"mb-2\">\r\n                                        <Form.Label column md={2}>\r\n                                            Helping text\r\n                                        </Form.Label>\r\n                                        <Col md={10}>\r\n                                            <Form.Control\r\n                                                type=\"text\"\r\n                                                name=\"text3\"\r\n                                                id=\"text3\"\r\n                                                placeholder=\"Helping text\"\r\n                                            />\r\n                                            <Form.Text>\r\n                                                A block of help text that breaks onto a new line and may extend beyond\r\n                                                one line.\r\n                                            </Form.Text>\r\n                                        </Col>\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group as={Row} className=\"mb-2\">\r\n                                        <Form.Label column md={2}>\r\n                                            Input Select\r\n                                        </Form.Label>\r\n                                        <Col md={10}>\r\n                                            <FormInput\r\n                                                name=\"select\"\r\n                                                type=\"select\"\r\n                                                className=\"form-select\"\r\n                                                register={register}\r\n                                                key=\"select\"\r\n                                                errors={errors}\r\n                                                control={control}\r\n                                            >\r\n                                                <option value=\"1\">1</option>\r\n                                                <option value=\"2\">2</option>\r\n                                                <option value=\"3\">3</option>\r\n                                                <option value=\"4\">4</option>\r\n                                                <option value=\"5\">5</option>\r\n                                            </FormInput>\r\n                                        </Col>\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group as={Row} className=\"mb-2\">\r\n                                        <Form.Label column md={2}>\r\n                                            Multiple Select\r\n                                        </Form.Label>\r\n                                        <Col md={10}>\r\n                                            <FormInput\r\n                                                name=\"selectMulti\"\r\n                                                type=\"select\"\r\n                                                multiple\r\n                                                className=\"form-select\"\r\n                                                register={register}\r\n                                                key=\"selectMulti\"\r\n                                                errors={errors}\r\n                                                control={control}\r\n                                            >\r\n                                                <option>1</option>\r\n                                                <option>2</option>\r\n                                                <option>3</option>\r\n                                                <option>4</option>\r\n                                                <option>5</option>\r\n                                            </FormInput>\r\n                                        </Col>\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group as={Row} className=\"mb-2\">\r\n                                        <Form.Label column md={2}>\r\n                                            Default file input\r\n                                        </Form.Label>\r\n                                        <Col md={10}>\r\n                                            <FormInput\r\n                                                type=\"file\"\r\n                                                name=\"file\"\r\n                                                register={register}\r\n                                                key=\"file\"\r\n                                                errors={errors}\r\n                                                control={control}\r\n                                            />\r\n                                        </Col>\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group as={Row} className=\"mb-2\">\r\n                                        <Form.Label column md={2}>\r\n                                            Date\r\n                                        </Form.Label>\r\n                                        <Col md={10}>\r\n                                            <FormInput\r\n                                                type=\"date\"\r\n                                                name=\"date\"\r\n                                                register={register}\r\n                                                key=\"date\"\r\n                                                errors={errors}\r\n                                                control={control}\r\n                                            />\r\n                                        </Col>\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group as={Row} className=\"mb-2\">\r\n                                        <Form.Label column md={2}>\r\n                                            Month\r\n                                        </Form.Label>\r\n                                        <Col md={10}>\r\n                                            <FormInput\r\n                                                type=\"month\"\r\n                                                name=\"month\"\r\n                                                register={register}\r\n                                                key=\"month\"\r\n                                                errors={errors}\r\n                                                control={control}\r\n                                            />\r\n                                        </Col>\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group as={Row} className=\"mb-2\">\r\n                                        <Form.Label column md={2}>\r\n                                            Time\r\n                                        </Form.Label>\r\n                                        <Col md={10}>\r\n                                            <FormInput\r\n                                                type=\"time\"\r\n                                                name=\"time\"\r\n                                                register={register}\r\n                                                key=\"time\"\r\n                                                errors={errors}\r\n                                                control={control}\r\n                                            />\r\n                                        </Col>\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group as={Row} className=\"mb-2\">\r\n                                        <Form.Label column md={2}>\r\n                                            Week\r\n                                        </Form.Label>\r\n                                        <Col md={10}>\r\n                                            <FormInput\r\n                                                type=\"week\"\r\n                                                name=\"week\"\r\n                                                register={register}\r\n                                                key=\"week\"\r\n                                                errors={errors}\r\n                                                control={control}\r\n                                            />\r\n                                        </Col>\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group as={Row} className=\"mb-2\">\r\n                                        <Form.Label column md={2}>\r\n                                            Number\r\n                                        </Form.Label>\r\n                                        <Col md={10}>\r\n                                            <FormInput\r\n                                                type=\"number\"\r\n                                                name=\"number\"\r\n                                                placeholder=\"number placeholder\"\r\n                                                register={register}\r\n                                                key=\"number\"\r\n                                                errors={errors}\r\n                                                control={control}\r\n                                            />\r\n                                        </Col>\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group as={Row} className=\"mb-2\">\r\n                                        <Form.Label column md={2}>\r\n                                            URL\r\n                                        </Form.Label>\r\n                                        <Col md={10}>\r\n                                            <FormInput\r\n                                                type=\"url\"\r\n                                                name=\"url\"\r\n                                                register={register}\r\n                                                key=\"url\"\r\n                                                errors={errors}\r\n                                                control={control}\r\n                                            />\r\n                                        </Col>\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group as={Row} className=\"mb-2\">\r\n                                        <Form.Label column md={2}>\r\n                                            Search\r\n                                        </Form.Label>\r\n                                        <Col md={10}>\r\n                                            <FormInput\r\n                                                type=\"search\"\r\n                                                name=\"search\"\r\n                                                register={register}\r\n                                                key=\"search\"\r\n                                                errors={errors}\r\n                                                control={control}\r\n                                            />\r\n                                        </Col>\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group as={Row} className=\"mb-2\">\r\n                                        <Form.Label column md={2}>\r\n                                            Tel\r\n                                        </Form.Label>\r\n                                        <Col md={10}>\r\n                                            <FormInput\r\n                                                type=\"tel\"\r\n                                                name=\"tel\"\r\n                                                register={register}\r\n                                                key=\"tel\"\r\n                                                errors={errors}\r\n                                                control={control}\r\n                                            />\r\n                                        </Col>\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group as={Row} className=\"mb-2\">\r\n                                        <Form.Label column md={2}>\r\n                                            Color\r\n                                        </Form.Label>\r\n                                        <Col md={10}>\r\n                                            <FormInput\r\n                                                type=\"color\"\r\n                                                name=\"color\"\r\n                                                className=\"w-100\"\r\n                                                placeholder=\"color placeholder\"\r\n                                                register={register}\r\n                                                key=\"color\"\r\n                                                errors={errors}\r\n                                                control={control}\r\n                                            />\r\n                                        </Col>\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group as={Row} className=\"mb-2\">\r\n                                        <Form.Label column md={2}>\r\n                                            Form range\r\n                                        </Form.Label>\r\n                                        <Col md={10} className=\"align-self-center\">\r\n                                            <Form.Range />\r\n                                        </Col>\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group as={Row}>\r\n                                        <Form.Label column md={2}>\r\n                                            Datalists\r\n                                        </Form.Label>\r\n                                        <Col md={10}>\r\n                                            <input\r\n                                                className=\"form-control\"\r\n                                                list=\"datalistOptions\"\r\n                                                id=\"exampleDataList\"\r\n                                                placeholder=\"Type to search...\"\r\n                                            />\r\n                                            <datalist id=\"datalistOptions\">\r\n                                                <option value=\"San Francisco\"></option>\r\n                                                <option value=\"New York\"></option>\r\n                                                <option value=\"Seattle\"></option>\r\n                                                <option value=\"Los Angeles\"></option>\r\n                                                <option value=\"Chicago\"></option>\r\n                                            </datalist>\r\n                                        </Col>\r\n                                    </Form.Group>\r\n                                </Form>\r\n                            </div>\r\n                        </Col>\r\n                    </Row>\r\n                </Card.Body>\r\n            </Card>\r\n        </>\r\n    );\r\n};\r\n\r\nconst FloatingLabels = () => {\r\n    return (\r\n        <>\r\n            <Card>\r\n                <Card.Body>\r\n                    <h4 className=\"header-title\">Floating labels</h4>\r\n                    <p className=\"sub-header\">\r\n                        Create beautifully simple form labels that float over your input fields.\r\n                    </p>\r\n\r\n                    <Form>\r\n                        <FloatingLabel controlId=\"floatingInput1\" label=\"Name\" className=\"mb-3\">\r\n                            <Form.Control type=\"text\" placeholder=\"name\" />\r\n                        </FloatingLabel>\r\n                        <Row>\r\n                            <Col md={6}>\r\n                                <FloatingLabel controlId=\"floatingInput\" label=\"Email address\" className=\"mb-3\">\r\n                                    <Form.Control type=\"email\" placeholder=\"name@example.com\" />\r\n                                </FloatingLabel>\r\n                            </Col>\r\n\r\n                            <Col md={6}>\r\n                                <FloatingLabel controlId=\"floatingSelect\" label=\"Works with selects\" className=\"mb-3\">\r\n                                    <Form.Select aria-label=\"Floating label select example\">\r\n                                        <option>Open this select menu</option>\r\n                                        <option value=\"1\">One</option>\r\n                                        <option value=\"2\">Two</option>\r\n                                        <option value=\"3\">Three</option>\r\n                                    </Form.Select>\r\n                                </FloatingLabel>\r\n                            </Col>\r\n                        </Row>\r\n\r\n                        <FloatingLabel controlId=\"floatingTextarea2\" label=\"Comments\" className=\"mb-2\">\r\n                            <Form.Control\r\n                                as=\"textarea\"\r\n                                placeholder=\"Leave a comment here\"\r\n                                style={{ height: '100px' }}\r\n                                defaultValue=\"123, Main st\"\r\n                            />\r\n                        </FloatingLabel>\r\n                        <Form.Group className=\"mb-3\" id=\"formGridCheckbox2\">\r\n                            <Form.Check type=\"checkbox\" id=\"formGridCheckbox2\" label=\"Check me out\" />\r\n                        </Form.Group>\r\n\r\n                        <div>\r\n                            <Button variant=\"primary\" type=\"submit\">\r\n                                Submit\r\n                            </Button>\r\n                        </div>\r\n                    </Form>\r\n                </Card.Body>\r\n            </Card>\r\n        </>\r\n    );\r\n};\r\n\r\nconst SelectInput = () => {\r\n    return (\r\n        <>\r\n            <Card>\r\n                <Card.Body>\r\n                    <h4 className=\"header-title\">Select menu</h4>\r\n                    <p className=\"sub-header\">\r\n                        Custom <code>&lt;select&gt;</code> menus need only a custom class, <code>.custom-select</code>{' '}\r\n                        to trigger the custom styles.\r\n                    </p>\r\n\r\n                    <Form.Group>\r\n                        <Form.Select className=\"mt-3\" aria-label=\"Default select example\">\r\n                            <option defaultValue=\"0\">Open this select menu</option>\r\n                            <option value=\"1\">One</option>\r\n                            <option value=\"2\">Two</option>\r\n                            <option value=\"3\">Three</option>\r\n                        </Form.Select>\r\n                    </Form.Group>\r\n\r\n                    <div className=\"mt-4\">\r\n                        <h5 className=\"font-14 mb-1\">Select Menu Sizing</h5>\r\n                        <p className=\"sub-header mb-0\">\r\n                            You may also choose from small and large custom selects to match our similarly sized text\r\n                            inputs.\r\n                        </p>\r\n                        <Row>\r\n                            <Col lg={6}>\r\n                                <Form.Group>\r\n                                    <Form.Select className=\"mt-3\" aria-label=\"Default select example\" size=\"lg\">\r\n                                        <option defaultValue=\"0\">Large Form Select</option>\r\n                                        <option value=\"1\">One</option>\r\n                                        <option value=\"2\">Two</option>\r\n                                        <option value=\"3\">Three</option>\r\n                                    </Form.Select>\r\n                                </Form.Group>\r\n                            </Col>\r\n\r\n                            <Col lg={6}>\r\n                                <Form.Group>\r\n                                    <Form.Select className=\"mt-3\" aria-label=\"Default select example\" size=\"sm\">\r\n                                        <option defaultValue=\"0\">Open this select menu</option>\r\n                                        <option value=\"1\">One</option>\r\n                                        <option value=\"2\">Two</option>\r\n                                        <option value=\"3\">Three</option>\r\n                                    </Form.Select>\r\n                                </Form.Group>\r\n                            </Col>\r\n                        </Row>\r\n                    </div>\r\n                </Card.Body>\r\n            </Card>\r\n        </>\r\n    );\r\n};\r\n\r\nconst Switches = () => {\r\n    return (\r\n        <React.Fragment>\r\n            <h4 className=\"header-title mt-4\">Switches</h4>\r\n            <p className=\"sub-header\">\r\n                A switch has the markup of a custom checkbox but uses the <code>.form-switch</code> class to render a\r\n                toggle switch. Switches also support the <code>disabled</code> attribute.\r\n            </p>\r\n\r\n            <Form>\r\n                <Form.Check type=\"switch\" id=\"custom-switch\" label=\"Default switch checkbox input\" />\r\n                <Form.Check\r\n                    type=\"switch\"\r\n                    label=\"Checked switch checkbox input\"\r\n                    id=\"custom-switch2\"\r\n                    defaultChecked={true}\r\n                />\r\n\r\n                <Form.Check disabled type=\"switch\" label=\"Disabled switch checkbox input\" id=\"custom-switch3\" />\r\n\r\n                <Form.Check\r\n                    disabled\r\n                    type=\"switch\"\r\n                    label=\"Disabled checked switch checkbox input\"\r\n                    id=\"custom-switch4\"\r\n                    defaultChecked={true}\r\n                />\r\n            </Form>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nconst CustomCheckboxes = () => {\r\n    return (\r\n        <>\r\n            <h5 className=\"font-14 mb-2\">Checkbox</h5>\r\n            <Form.Check type=\"checkbox\" id=\"default-checkbox1\" label=\"Default checkbox\" />\r\n            <Form.Check type=\"checkbox\" id=\"default-checkbox2\" label=\" Checked checkbox\" defaultChecked={true} />\r\n        </>\r\n    );\r\n};\r\n\r\nconst CustomRadios = () => {\r\n    return (\r\n        <>\r\n            <h5 className=\"font-14 mb-2\">Radios</h5>\r\n            <Form.Check type=\"radio\" id=\"default-radio1\" name=\"customRadio\" label=\"Default radio\" />\r\n            <Form.Check\r\n                type=\"radio\"\r\n                id=\"default-radio2\"\r\n                name=\"customRadio\"\r\n                label=\" Default checked radio\"\r\n                defaultChecked={true}\r\n            />\r\n        </>\r\n    );\r\n};\r\n\r\nconst InputSizes = () => {\r\n    return (\r\n        <Card>\r\n            <Card.Body>\r\n                <h4 className=\"header-title\">Input Sizes &amp; Group</h4>\r\n                <p className=\"sub-header\">\r\n                    Use size on <code>&lt;FormControl&gt;</code> and <code>&lt;FormLabel&gt;</code> to change the size\r\n                    of inputs and labels respectively.\r\n                </p>\r\n\r\n                <div className=\"p-2\">\r\n                    <Form>\r\n                        <Form.Group as={Row} className=\"mb-2\">\r\n                            <Form.Label htmlFor=\"small\" column md={2}>\r\n                                Small\r\n                            </Form.Label>\r\n                            <Col md={10}>\r\n                                <Form.Control type=\"text\" name=\"small\" id=\"small\" placeholder=\"Small\" size=\"sm\" />\r\n                            </Col>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group as={Row} className=\"mb-2\">\r\n                            <Form.Label htmlFor=\"Normal\" column md={2}>\r\n                                Normal\r\n                            </Form.Label>\r\n                            <Col md={10}>\r\n                                <Form.Control type=\"text\" name=\"Normal\" id=\"Normal\" placeholder=\"Normal\" />\r\n                            </Col>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group as={Row} className=\"mb-2\">\r\n                            <Form.Label htmlFor=\"Large\" column md={2}>\r\n                                Large\r\n                            </Form.Label>\r\n                            <Col md={10}>\r\n                                <Form.Control type=\"text\" name=\"Large\" id=\"Large\" placeholder=\"Large\" />\r\n                            </Col>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group as={Row} className=\"mb-2\">\r\n                            <Form.Label htmlFor=\"grid\" column md={2}>\r\n                                Grid Sizes\r\n                            </Form.Label>\r\n                            <Col md={4}>\r\n                                <Form.Control type=\"text\" name=\"grid\" id=\"grid\" placeholder=\".col-sm-4\" />\r\n                            </Col>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group as={Row} className=\"mb-2\">\r\n                            <Form.Label htmlFor=\"Static\" column md={2}>\r\n                                Static\r\n                            </Form.Label>\r\n                            <Col md={10}>\r\n                                <InputGroup>\r\n                                    <InputGroup.Text id=\"basic-addon1\">@</InputGroup.Text>\r\n                                    <Form.Control\r\n                                        placeholder=\"Username\"\r\n                                        aria-label=\"Username\"\r\n                                        aria-describedby=\"basic-addon1\"\r\n                                    />\r\n                                </InputGroup>\r\n                            </Col>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group as={Row} className=\"mb-2\">\r\n                            <Form.Label htmlFor=\"Dropdown\" column md={2}>\r\n                                Dropdown\r\n                            </Form.Label>\r\n                            <Col md={10}>\r\n                                <InputGroup className=\"mb-3\">\r\n                                    <Dropdown>\r\n                                        <Dropdown.Toggle\r\n                                            variant=\"primary\"\r\n                                            id=\"dropdown-basic\"\r\n                                            className=\"waves-effect waves-light\"\r\n                                        >\r\n                                            Dropdown <i className=\"mdi mdi-chevron-down\"></i>\r\n                                        </Dropdown.Toggle>\r\n\r\n                                        <Dropdown.Menu>\r\n                                            <Dropdown.Item href=\"#\">Action</Dropdown.Item>\r\n                                            <Dropdown.Item href=\"#\">Another action</Dropdown.Item>\r\n                                            <Dropdown.Item href=\"#\">Something else here</Dropdown.Item>\r\n                                            <Dropdown.Divider />\r\n                                            <Dropdown.Item href=\"#\">Separated link</Dropdown.Item>\r\n                                        </Dropdown.Menu>\r\n                                    </Dropdown>\r\n\r\n                                    <Form.Control aria-label=\"Text input with dropdown button\" />\r\n                                </InputGroup>\r\n                            </Col>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group as={Row}>\r\n                            <Form.Label htmlFor=\"Button\" column md={2}>\r\n                                Button\r\n                            </Form.Label>\r\n                            <Col md={10}>\r\n                                <InputGroup className=\"mb-3\">\r\n                                    <Form.Control\r\n                                        placeholder=\"Recipient's username\"\r\n                                        aria-label=\"Recipient's username\"\r\n                                        aria-describedby=\"basic-addon2\"\r\n                                    />\r\n                                    <Button variant=\"dark\" id=\"button-addon2\" className=\"waves-effect waves-light\">\r\n                                        Button\r\n                                    </Button>\r\n                                </InputGroup>\r\n                            </Col>\r\n                        </Form.Group>\r\n                    </Form>\r\n                </div>\r\n            </Card.Body>\r\n        </Card>\r\n    );\r\n};\r\n\r\nconst DefaultForm = () => {\r\n    return (\r\n        <Card>\r\n            <Card.Body>\r\n                <h4 className=\"mb-3 header-title\">Basic Example</h4>\r\n\r\n                <Form onSubmit={(e) => e.preventDefault()}>\r\n                    <Form.Group className=\"mb-2\">\r\n                        <Form.Label htmlFor=\"exampleEmail2\">Email</Form.Label>\r\n                        <Form.Control type=\"email\" name=\"email\" id=\"exampleEmail2\" placeholder=\"Enter your email\" />\r\n                        <Form.Text>We'll never share your email with anyone else.</Form.Text>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group className=\"mb-2\">\r\n                        <Form.Label htmlFor=\"examplePassword2\">Password</Form.Label>\r\n                        <Form.Control\r\n                            type=\"password\"\r\n                            name=\"password\"\r\n                            id=\"examplePassword2\"\r\n                            placeholder=\"password placeholder\"\r\n                            defaultValue=\"12345\"\r\n                        />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group className=\"mb-2\" id=\"formGridCheckbox\">\r\n                        <Form.Check type=\"checkbox\" id=\"formGridCheckbox\" label=\"Check me out\" />\r\n                    </Form.Group>\r\n\r\n                    <Button variant=\"primary\" type=\"submit\">\r\n                        Submit\r\n                    </Button>\r\n                </Form>\r\n            </Card.Body>\r\n        </Card>\r\n    );\r\n};\r\n\r\nconst HorizontalForm = () => {\r\n    return (\r\n        <Card>\r\n            <Card.Body>\r\n                <h4 className=\"mb-3 header-title\">Horizontal Form</h4>\r\n                <Form onSubmit={(e) => e.preventDefault()}>\r\n                    <Form.Group as={Row} className=\"mb-3\">\r\n                        <Form.Label htmlFor=\"exampleEmail3\" column sm={3}>\r\n                            Email\r\n                        </Form.Label>\r\n                        <Col sm={9}>\r\n                            <Form.Control type=\"email\" name=\"email\" id=\"exampleEmail3\" placeholder=\"Email\" />\r\n                        </Col>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Row} className=\"mb-3\">\r\n                        <Form.Label htmlFor=\"examplePassword3\" column sm={3}>\r\n                            Password\r\n                        </Form.Label>\r\n                        <Col sm={9}>\r\n                            <Form.Control\r\n                                type=\"password\"\r\n                                name=\"password\"\r\n                                id=\"examplePassword3\"\r\n                                placeholder=\"Password\"\r\n                            />\r\n                        </Col>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Row} className=\"mb-2\">\r\n                        <Form.Label htmlFor=\"examplePassword4\" column sm={3}>\r\n                            Re-Password\r\n                        </Form.Label>\r\n                        <Col sm={9}>\r\n                            <Form.Control\r\n                                type=\"password\"\r\n                                name=\"password\"\r\n                                id=\"examplePassword4\"\r\n                                placeholder=\"Retype Password\"\r\n                            />\r\n                        </Col>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Row} className=\"mb-2 justify-content-end\">\r\n                        <Col sm={9}>\r\n                            <Form.Check label=\"Check me out !\" id=\"checkmeout\" />\r\n                        </Col>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Row} className=\"mb-0 justify-content-end\">\r\n                        <Col sm={9}>\r\n                            <Button variant=\"info\" type=\"submit\">\r\n                                Sign in\r\n                            </Button>\r\n                        </Col>\r\n                    </Form.Group>\r\n                </Form>\r\n            </Card.Body>\r\n        </Card>\r\n    );\r\n};\r\n\r\nconst InlineForm = () => {\r\n    return (\r\n        <Card>\r\n            <Card.Body>\r\n                <h4 className=\"header-title\">Inline Form</h4>\r\n\r\n                <p className=\"sub-header\">\r\n                    Use the <code>.col-auto</code> class to create horizontal layouts.\r\n                </p>\r\n                <Form className=\"row row-cols-lg-auto g-3 align-items-center\" onSubmit={(e) => e.preventDefault()}>\r\n                    <div className=\"col-12\">\r\n                        <Form.Group>\r\n                            <Form.Control\r\n                                readOnly\r\n                                type=\"email\"\r\n                                name=\"email\"\r\n                                id=\"exampleEmail4\"\r\n                                bsPrefix=\"form-control-plaintext\"\r\n                                placeholder=\"email@example.com\"\r\n                            />\r\n                        </Form.Group>\r\n                    </div>\r\n\r\n                    <div className=\"col-12\">\r\n                        <Form.Group>\r\n                            <Form.Control\r\n                                type=\"password\"\r\n                                name=\"password\"\r\n                                id=\"examplePassword5\"\r\n                                placeholder=\"Password\"\r\n                            />\r\n                        </Form.Group>\r\n                    </div>\r\n\r\n                    <div className=\"col-12\">\r\n                        <Button color=\"primary\" type=\"submit\">\r\n                            Confirm identity\r\n                        </Button>\r\n                    </div>\r\n                </Form>\r\n\r\n                <h6 className=\"font-13 mt-3\">Auto-sizing</h6>\r\n\r\n                <Form onSubmit={(e) => e.preventDefault()}>\r\n                    <Row className=\"align-items-center gy-2 gx-3\">\r\n                        <Col xs=\"auto\">\r\n                            <Form.Label htmlFor=\"inlineFormInput\" visuallyHidden>\r\n                                Name\r\n                            </Form.Label>\r\n                            <Form.Control className=\"mb-2\" id=\"inlineFormInput\" placeholder=\"Jane Doe\" />\r\n                        </Col>\r\n                        <Col xs=\"auto\">\r\n                            <Form.Label htmlFor=\"inlineFormInputGroup\" visuallyHidden>\r\n                                Username\r\n                            </Form.Label>\r\n                            <InputGroup className=\"mb-2\">\r\n                                <InputGroup.Text>@</InputGroup.Text>\r\n                                <Form.Control id=\"inlineFormInputGroup\" placeholder=\"Username\" />\r\n                            </InputGroup>\r\n                        </Col>\r\n                        <Col xs=\"auto\">\r\n                            <Form.Check type=\"checkbox\" id=\"autoSizingCheck\" className=\"mb-2\" label=\"Remember me\" />\r\n                        </Col>\r\n                        <Col xs=\"auto\">\r\n                            <Button type=\"submit\" className=\"mb-2\">\r\n                                Submit\r\n                            </Button>\r\n                        </Col>\r\n                    </Row>\r\n                </Form>\r\n            </Card.Body>\r\n        </Card>\r\n    );\r\n};\r\n\r\nconst FormGrid = () => {\r\n    return (\r\n        <>\r\n            <Card>\r\n                <Card.Body>\r\n                    <h4 className=\"header-title\">Form grid</h4>\r\n                    <p className=\"sub-header\">\r\n                        You may also swap <code>.row</code> for <code>.row</code>, a variation of our standard grid row\r\n                        that overrides the default column gutters for tighter and more compact layouts.\r\n                    </p>\r\n\r\n                    <Form onSubmit={(e) => e.preventDefault()}>\r\n                        <Row>\r\n                            <Form.Group as={Col} md={6} className=\"mb-2\">\r\n                                <Form.Label>Email</Form.Label>\r\n                                <Form.Control type=\"email\" placeholder=\"Enter email\" />\r\n                            </Form.Group>\r\n\r\n                            <Form.Group as={Col} md={6} className=\"mb-2\">\r\n                                <Form.Label>Password</Form.Label>\r\n                                <Form.Control type=\"password\" placeholder=\"Password\" />\r\n                            </Form.Group>\r\n                        </Row>\r\n\r\n                        <Form.Group className=\"mb-2\">\r\n                            <Form.Label>Address</Form.Label>\r\n                            <Form.Control placeholder=\"1234 Main St\" />\r\n                        </Form.Group>\r\n\r\n                        <Row>\r\n                            <Form.Group as={Col} className=\"mb-2\" md={4}>\r\n                                <Form.Label>State</Form.Label>\r\n                                <Form.Select defaultValue=\"Choose...\">\r\n                                    <option>Choose...</option>\r\n                                    <option>...</option>\r\n                                </Form.Select>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group as={Col} className=\"mb-2\" md={4}>\r\n                                <Form.Label>City</Form.Label>\r\n                                <Form.Control />\r\n                            </Form.Group>\r\n\r\n                            <Form.Group as={Col} className=\"mb-2\" md={4}>\r\n                                <Form.Label>Zip</Form.Label>\r\n                                <Form.Control />\r\n                            </Form.Group>\r\n                        </Row>\r\n\r\n                        <Form.Group className=\"mb-3\" id=\"formGridCheckbox3\">\r\n                            <Form.Check type=\"checkbox\" label=\"Check me out\" id=\"formGridCheckbox3\" />\r\n                        </Form.Group>\r\n\r\n                        <Button variant=\"primary\" type=\"submit\">\r\n                            Sign in\r\n                        </Button>\r\n                    </Form>\r\n                </Card.Body>\r\n            </Card>\r\n        </>\r\n    );\r\n};\r\n\r\nconst BasicForms = () => {\r\n    return (\r\n        <React.Fragment>\r\n            <PageTitle\r\n                breadCrumbItems={[\r\n                    { label: 'Forms', path: '/forms/basic' },\r\n                    { label: 'Form Elements', path: '/forms/basic', active: true },\r\n                ]}\r\n                title={'Form Elements'}\r\n            />\r\n\r\n            <Row>\r\n                <Col xs={12}>\r\n                    <BasicInputElements />\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n                <Col xs={12}>\r\n                    <SelectInput />\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n                <Col xs={12}>\r\n                    <Card>\r\n                        <Card.Body>\r\n                            <h4 className=\"header-title\">Checkboxes &amp; radios</h4>\r\n                            <Row>\r\n                                <Col md={6}>\r\n                                    <div className=\"mt-3\">\r\n                                        <CustomCheckboxes />\r\n                                    </div>\r\n                                </Col>\r\n                                <Col md={6}>\r\n                                    <div className=\"mt-3\">\r\n                                        <CustomRadios />\r\n                                    </div>\r\n                                </Col>\r\n                            </Row>\r\n\r\n                            <Switches />\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n                <Col xs={12}>\r\n                    <InputSizes />\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n                <Col lg={6}>\r\n                    <DefaultForm />\r\n                </Col>\r\n\r\n                <Col lg={6}>\r\n                    <HorizontalForm />\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n                <Col xs={12}>\r\n                    <InlineForm />\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n                <Col xl={6}>\r\n                    <FormGrid />\r\n                </Col>\r\n                <Col xl={6}>\r\n                    <FloatingLabels />\r\n                </Col>\r\n            </Row>\r\n        </React.Fragment>\r\n    );\r\n};\r\nexport default BasicForms;\r\n","import React from 'react';\r\nimport { Row, Col, Breadcrumb } from 'react-bootstrap';\r\nimport classNames from 'classnames';\r\n\r\n// custom hoook\r\nimport { useRedux } from '../hooks/';\r\n\r\n// constants\r\nimport { LayoutTypes } from '../constants/';\r\n\r\ninterface BreadcrumbItems {\r\n    label: string;\r\n    path: string;\r\n    active?: boolean;\r\n}\r\n\r\ninterface PageTitleProps {\r\n    breadCrumbItems: Array<BreadcrumbItems>;\r\n    title: string;\r\n}\r\n\r\n/**\r\n * PageTitle\r\n */\r\nconst PageTitle = (props: PageTitleProps) => {\r\n    const { appSelector } = useRedux();\r\n\r\n    const { layoutType } = appSelector((state) => ({\r\n        layoutType: state.Layout.layoutType,\r\n    }));\r\n\r\n    return (\r\n        <Row>\r\n            <Col xs={12}>\r\n                <div\r\n                    className={classNames('page-title-box', {\r\n                        'page-title-box-alt':\r\n                            layoutType === LayoutTypes.LAYOUT_HORIZONTAL || layoutType === LayoutTypes.LAYOUT_DETACHED,\r\n                    })}\r\n                >\r\n                    <h4 className=\"page-title\">{props.title}</h4>\r\n                    <div className=\"page-title-right\">\r\n                        <Breadcrumb listProps={{ className: 'm-0' }}>\r\n                            <Breadcrumb.Item href=\"/\">Minton</Breadcrumb.Item>\r\n\r\n                            {(props['breadCrumbItems'] || []).map((item, index) => {\r\n                                return item.active ? (\r\n                                    <Breadcrumb.Item active key={index}>\r\n                                        {item.label}\r\n                                    </Breadcrumb.Item>\r\n                                ) : (\r\n                                    <Breadcrumb.Item key={index} href={item.path}>\r\n                                        {item.label}\r\n                                    </Breadcrumb.Item>\r\n                                );\r\n                            })}\r\n                        </Breadcrumb>\r\n                    </div>\r\n                </div>\r\n            </Col>\r\n        </Row>\r\n    );\r\n};\r\n\r\nexport default PageTitle;\r\n","import * as React from 'react';\nconst context = /*#__PURE__*/React.createContext(null);\ncontext.displayName = 'CardHeaderContext';\nexport default context;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DEVICE_SIZES = ['xxl', 'xl', 'lg', 'md', 'sm', 'xs'];\nconst Row = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'row');\n  const sizePrefix = `${decoratedBsPrefix}-cols`;\n  const classes = [];\n  DEVICE_SIZES.forEach(brkPoint => {\n    const propValue = props[brkPoint];\n    delete props[brkPoint];\n    let cols;\n\n    if (propValue != null && typeof propValue === 'object') {\n      ({\n        cols\n      } = propValue);\n    } else {\n      cols = propValue;\n    }\n\n    const infix = brkPoint !== 'xs' ? `-${brkPoint}` : '';\n    if (cols != null) classes.push(`${sizePrefix}${infix}-${cols}`);\n  });\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, decoratedBsPrefix, ...classes)\n  });\n});\nRow.displayName = 'Row';\nexport default Row;","import classNames from 'classnames';\nimport * as React from 'react';\nimport Anchor from '@restart/ui/Anchor';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  active: false,\n  linkProps: {}\n};\nconst BreadcrumbItem = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  active,\n  children,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'li',\n  linkAs: LinkComponent = Anchor,\n  linkProps,\n  href,\n  title,\n  target,\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'breadcrumb-item');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(prefix, className, {\n      active\n    }),\n    \"aria-current\": active ? 'page' : undefined,\n    children: active ? children : /*#__PURE__*/_jsx(LinkComponent, { ...linkProps,\n      href: href,\n      title: title,\n      target: target,\n      children: children\n    })\n  });\n});\nBreadcrumbItem.displayName = 'BreadcrumbItem';\nBreadcrumbItem.defaultProps = defaultProps;\nexport default BreadcrumbItem;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport BreadcrumbItem from './BreadcrumbItem';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  label: 'breadcrumb',\n  listProps: {}\n};\nconst Breadcrumb = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  listProps,\n  children,\n  label,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'nav',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'breadcrumb');\n  return /*#__PURE__*/_jsx(Component, {\n    \"aria-label\": label,\n    className: className,\n    ref: ref,\n    ...props,\n    children: /*#__PURE__*/_jsx(\"ol\", { ...listProps,\n      className: classNames(prefix, listProps == null ? void 0 : listProps.className),\n      children: children\n    })\n  });\n});\nBreadcrumb.displayName = 'Breadcrumb';\nBreadcrumb.defaultProps = defaultProps;\nexport default Object.assign(Breadcrumb, {\n  Item: BreadcrumbItem\n});","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DEVICE_SIZES = ['xxl', 'xl', 'lg', 'md', 'sm', 'xs'];\nexport function useCol({\n  as,\n  bsPrefix,\n  className,\n  ...props\n}) {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'col');\n  const spans = [];\n  const classes = [];\n  DEVICE_SIZES.forEach(brkPoint => {\n    const propValue = props[brkPoint];\n    delete props[brkPoint];\n    let span;\n    let offset;\n    let order;\n\n    if (typeof propValue === 'object' && propValue != null) {\n      ({\n        span,\n        offset,\n        order\n      } = propValue);\n    } else {\n      span = propValue;\n    }\n\n    const infix = brkPoint !== 'xs' ? `-${brkPoint}` : '';\n    if (span) spans.push(span === true ? `${bsPrefix}${infix}` : `${bsPrefix}${infix}-${span}`);\n    if (order != null) classes.push(`order${infix}-${order}`);\n    if (offset != null) classes.push(`offset${infix}-${offset}`);\n  });\n  return [{ ...props,\n    className: classNames(className, ...spans, ...classes)\n  }, {\n    as,\n    bsPrefix,\n    spans\n  }];\n}\nconst Col = /*#__PURE__*/React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n(props, ref) => {\n  const [{\n    className,\n    ...colProps\n  }, {\n    as: Component = 'div',\n    bsPrefix,\n    spans\n  }] = useCol(props);\n  return /*#__PURE__*/_jsx(Component, { ...colProps,\n    ref: ref,\n    className: classNames(className, !spans.length && bsPrefix)\n  });\n});\nCol.displayName = 'Col';\nexport default Col;","/**\n * Returns the owner document of a given element.\n * \n * @param node the element\n */\nexport default function ownerDocument(node) {\n  return node && node.ownerDocument || document;\n}","import { useMemo } from 'react';\n\nvar toFnRef = function toFnRef(ref) {\n  return !ref || typeof ref === 'function' ? ref : function (value) {\n    ref.current = value;\n  };\n};\n\nexport function mergeRefs(refA, refB) {\n  var a = toFnRef(refA);\n  var b = toFnRef(refB);\n  return function (value) {\n    if (a) a(value);\n    if (b) b(value);\n  };\n}\n/**\n * Create and returns a single callback ref composed from two other Refs.\n *\n * ```tsx\n * const Button = React.forwardRef((props, ref) => {\n *   const [element, attachRef] = useCallbackRef<HTMLButtonElement>();\n *   const mergedRef = useMergedRefs(ref, attachRef);\n *\n *   return <button ref={mergedRef} {...props}/>\n * })\n * ```\n *\n * @param refA A Callback or mutable Ref\n * @param refB A Callback or mutable Ref\n * @category refs\n */\n\nfunction useMergedRefs(refA, refB) {\n  return useMemo(function () {\n    return mergeRefs(refA, refB);\n  }, [refA, refB]);\n}\n\nexport default useMergedRefs;","export default !!(typeof window !== 'undefined' && window.document && window.document.createElement);","import React from 'react';\r\nimport { useForm, Resolver, SubmitHandler } from 'react-hook-form';\r\n\r\ninterface VerticalFromProps<TFormValues> {\r\n    defaultValues?: any;\r\n    resolver?: Resolver<TFormValues>;\r\n    children?: any;\r\n    onSubmit: SubmitHandler<TFormValues>;\r\n    formClass?: string;\r\n}\r\n\r\nconst VerticalForm = <TFormValues extends Record<string, any> = Record<string, any>>({\r\n    defaultValues,\r\n    resolver,\r\n    children,\r\n    onSubmit,\r\n    formClass,\r\n}: VerticalFromProps<TFormValues>) => {\r\n    /*\r\n     * form methods\r\n     */\r\n    const methods = useForm<TFormValues>({ defaultValues, resolver });\r\n    const {\r\n        handleSubmit,\r\n        register,\r\n        control,\r\n        formState: { errors },\r\n    } = methods;\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit(onSubmit)} className={formClass} noValidate>\r\n            {Array.isArray(children)\r\n                ? children.map((child) => {\r\n                      return child.props && child.props.name\r\n                          ? React.createElement(child.type, {\r\n                                ...{\r\n                                    ...child.props,\r\n                                    register,\r\n                                    key: child.props.name,\r\n                                    errors,\r\n                                    control,\r\n                                },\r\n                            })\r\n                          : child;\r\n                  })\r\n                : children}\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default VerticalForm;\r\n","import React, { useState, InputHTMLAttributes } from 'react';\r\nimport { Form, InputGroup } from 'react-bootstrap';\r\nimport classNames from 'classnames';\r\n\r\nimport { FieldErrors, Control } from 'react-hook-form';\r\n\r\ninterface FormInputProps extends InputHTMLAttributes<HTMLInputElement> {\r\n    endIcon?: boolean;\r\n    label?: string;\r\n    type?: string;\r\n    name: string;\r\n    comp?: string;\r\n    placeholder?: string;\r\n    register?: any;\r\n    errors?: FieldErrors;\r\n    control?: Control<any>;\r\n    className?: string;\r\n    labelClassName?: string;\r\n    containerClass?: string;\r\n    textClassName?: string;\r\n    refCallback?: any;\r\n    action?: any;\r\n    rows?: number;\r\n}\r\n\r\n/* Password Input with addons */\r\nconst PasswordInput = ({\r\n    name,\r\n    placeholder,\r\n    refCallback,\r\n    errors,\r\n    control,\r\n    register,\r\n    className,\r\n    ...otherProps\r\n}: FormInputProps) => {\r\n    const [showPassword, setShowPassword] = useState<boolean>(false);\r\n\r\n    return (\r\n        <>\r\n            <InputGroup className=\"mb-0\">\r\n                <Form.Control\r\n                    type={showPassword ? 'text' : 'password'}\r\n                    placeholder={placeholder}\r\n                    name={name}\r\n                    id={name}\r\n                    as=\"input\"\r\n                    ref={(r: HTMLInputElement) => {\r\n                        if (refCallback) refCallback(r);\r\n                    }}\r\n                    className={className}\r\n                    isInvalid={errors && errors[name] ? true : false}\r\n                    {...(register ? register(name) : {})}\r\n                    autoComplete={name}\r\n                    {...otherProps}\r\n                />\r\n                <div\r\n                    className={classNames('input-group-text', 'input-group-password', {\r\n                        'show-password': showPassword,\r\n                    })}\r\n                    data-password={showPassword ? 'true' : 'false'}\r\n                >\r\n                    <span\r\n                        className=\"password-eye\"\r\n                        onClick={() => {\r\n                            setShowPassword(!showPassword);\r\n                        }}\r\n                    ></span>\r\n                </div>\r\n            </InputGroup>\r\n\r\n            {errors && errors[name] ? (\r\n                <Form.Control.Feedback type=\"invalid\" className=\"d-block\">\r\n                    {errors[name]['message']}\r\n                </Form.Control.Feedback>\r\n            ) : null}\r\n        </>\r\n    );\r\n};\r\n\r\n// textual form-controls—like inputs, passwords, textareas etc.\r\nconst TextualInput = ({\r\n    type,\r\n    name,\r\n    placeholder,\r\n    endIcon,\r\n    register,\r\n    errors,\r\n    comp,\r\n    rows,\r\n    className,\r\n    refCallback,\r\n    ...otherProps\r\n}: FormInputProps) => {\r\n    return (\r\n        <>\r\n            {type === 'password' && endIcon ? (\r\n                <>\r\n                    <PasswordInput\r\n                        name={name}\r\n                        placeholder={placeholder}\r\n                        refCallback={refCallback}\r\n                        errors={errors!}\r\n                        register={register}\r\n                        className={className}\r\n                        {...otherProps}\r\n                    />\r\n                </>\r\n            ) : (\r\n                <>\r\n                    <Form.Control\r\n                        type={type}\r\n                        placeholder={placeholder}\r\n                        name={name}\r\n                        as={comp}\r\n                        id={name}\r\n                        ref={(r: HTMLInputElement) => {\r\n                            if (refCallback) refCallback(r);\r\n                        }}\r\n                        className={className}\r\n                        isInvalid={errors && errors[name] ? true : false}\r\n                        {...(register ? register(name) : {})}\r\n                        rows={rows}\r\n                        {...otherProps}\r\n                    ></Form.Control>\r\n\r\n                    {errors && errors[name] ? (\r\n                        <Form.Control.Feedback type=\"invalid\" className=\"d-block\">\r\n                            {errors[name]['message']}\r\n                        </Form.Control.Feedback>\r\n                    ) : null}\r\n                </>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\n// non-textual checkbox and radio controls\r\nconst CheckInput = ({\r\n    type,\r\n    label,\r\n    name,\r\n    placeholder,\r\n    register,\r\n    errors,\r\n    comp,\r\n    rows,\r\n    className,\r\n    refCallback,\r\n    ...otherProps\r\n}: FormInputProps) => {\r\n    return (\r\n        <>\r\n            <Form.Check\r\n                type={type}\r\n                label={label}\r\n                name={name}\r\n                id={name}\r\n                ref={(r: HTMLInputElement) => {\r\n                    if (refCallback) refCallback(r);\r\n                }}\r\n                className={className}\r\n                isInvalid={errors && errors[name] ? true : false}\r\n                {...(register ? register(name) : {})}\r\n                {...otherProps}\r\n            />\r\n\r\n            {errors && errors[name] ? (\r\n                <Form.Control.Feedback type=\"invalid\" className=\"d-block\">\r\n                    {errors[name]['message']}\r\n                </Form.Control.Feedback>\r\n            ) : null}\r\n        </>\r\n    );\r\n};\r\n\r\n// handle select controls\r\nconst SelectInput = ({\r\n    type,\r\n    label,\r\n    name,\r\n    placeholder,\r\n    register,\r\n    errors,\r\n    comp,\r\n    className,\r\n    children,\r\n    refCallback,\r\n    ...otherProps\r\n}: FormInputProps) => {\r\n    return (\r\n        <>\r\n            <Form.Select\r\n                type={type}\r\n                label={label}\r\n                name={name}\r\n                id={name}\r\n                ref={(r: HTMLInputElement) => {\r\n                    if (refCallback) refCallback(r);\r\n                }}\r\n                children={children}\r\n                className={className}\r\n                isInvalid={errors && errors[name] ? true : false}\r\n                {...(register ? register(name) : {})}\r\n                {...otherProps}\r\n            />\r\n\r\n            {errors && errors[name] ? (\r\n                <Form.Control.Feedback type=\"invalid\">{errors[name]['message']}</Form.Control.Feedback>\r\n            ) : null}\r\n        </>\r\n    );\r\n};\r\n\r\nconst FormInput = ({\r\n    label,\r\n    type,\r\n    name,\r\n    placeholder,\r\n    endIcon,\r\n    register,\r\n    errors,\r\n    control,\r\n    className,\r\n    labelClassName,\r\n    containerClass,\r\n    refCallback,\r\n    children,\r\n    rows,\r\n    ...otherProps\r\n}: FormInputProps) => {\r\n    // handle input type\r\n    const comp = type === 'textarea' ? 'textarea' : type === 'select' ? 'select' : 'input';\r\n\r\n    const hasEndIcon = endIcon !== undefined ? endIcon : true;\r\n\r\n    return (\r\n        <>\r\n            {type === 'hidden' ? (\r\n                <input type={type} name={name} {...(register ? register(name) : {})} {...otherProps} />\r\n            ) : (\r\n                <>\r\n                    {type === 'select' ? (\r\n                        <Form.Group className={containerClass}>\r\n                            {label ? <Form.Label className={labelClassName}>{label}</Form.Label> : null}\r\n\r\n                            <SelectInput\r\n                                type={type}\r\n                                name={name}\r\n                                placeholder={placeholder}\r\n                                refCallback={refCallback}\r\n                                errors={errors}\r\n                                register={register}\r\n                                comp={comp}\r\n                                className={className}\r\n                                children={children}\r\n                                {...otherProps}\r\n                            />\r\n                        </Form.Group>\r\n                    ) : (\r\n                        <>\r\n                            {type === 'checkbox' || type === 'radio' ? (\r\n                                <Form.Group className={containerClass}>\r\n                                    <CheckInput\r\n                                        type={type}\r\n                                        label={label}\r\n                                        name={name}\r\n                                        placeholder={placeholder}\r\n                                        refCallback={refCallback}\r\n                                        errors={errors}\r\n                                        register={register}\r\n                                        comp={comp}\r\n                                        className={className}\r\n                                        rows={rows}\r\n                                        {...otherProps}\r\n                                    />\r\n                                </Form.Group>\r\n                            ) : (\r\n                                <Form.Group className={containerClass}>\r\n                                    {label ? <Form.Label className={labelClassName}>{label}</Form.Label> : null}\r\n\r\n                                    <TextualInput\r\n                                        type={type}\r\n                                        name={name}\r\n                                        placeholder={placeholder}\r\n                                        endIcon={hasEndIcon}\r\n                                        refCallback={refCallback}\r\n                                        errors={errors}\r\n                                        register={register}\r\n                                        comp={comp}\r\n                                        className={className}\r\n                                        rows={rows}\r\n                                        {...otherProps}\r\n                                    />\r\n                                </Form.Group>\r\n                            )}\r\n                        </>\r\n                    )}\r\n                </>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default FormInput;\r\n","/* eslint-disable no-return-assign */\nimport canUseDOM from './canUseDOM';\nexport var optionsSupported = false;\nexport var onceSupported = false;\n\ntry {\n  var options = {\n    get passive() {\n      return optionsSupported = true;\n    },\n\n    get once() {\n      // eslint-disable-next-line no-multi-assign\n      return onceSupported = optionsSupported = true;\n    }\n\n  };\n\n  if (canUseDOM) {\n    window.addEventListener('test', options, options);\n    window.removeEventListener('test', options, true);\n  }\n} catch (e) {\n  /* */\n}\n\n/**\n * An `addEventListener` ponyfill, supports the `once` option\n * \n * @param node the element\n * @param eventName the event name\n * @param handle the handler\n * @param options event options\n */\nfunction addEventListener(node, eventName, handler, options) {\n  if (options && typeof options !== 'boolean' && !onceSupported) {\n    var once = options.once,\n        capture = options.capture;\n    var wrappedHandler = handler;\n\n    if (!onceSupported && once) {\n      wrappedHandler = handler.__once || function onceHandler(event) {\n        this.removeEventListener(eventName, onceHandler, capture);\n        handler.call(this, event);\n      };\n\n      handler.__once = wrappedHandler;\n    }\n\n    node.addEventListener(eventName, wrappedHandler, optionsSupported ? options : capture);\n  }\n\n  node.addEventListener(eventName, handler, options);\n}\n\nexport default addEventListener;","import addEventListener from './addEventListener';\nimport removeEventListener from './removeEventListener';\n\nfunction listen(node, eventName, handler, options) {\n  addEventListener(node, eventName, handler, options);\n  return function () {\n    removeEventListener(node, eventName, handler, options);\n  };\n}\n\nexport default listen;","/**\n * A `removeEventListener` ponyfill\n * \n * @param node the element\n * @param eventName the event name\n * @param handle the handler\n * @param options event options\n */\nfunction removeEventListener(node, eventName, handler, options) {\n  var capture = options && typeof options !== 'boolean' ? options.capture : options;\n  node.removeEventListener(eventName, handler, capture);\n\n  if (handler.__once) {\n    node.removeEventListener(eventName, handler.__once, capture);\n  }\n}\n\nexport default removeEventListener;"],"sourceRoot":""}