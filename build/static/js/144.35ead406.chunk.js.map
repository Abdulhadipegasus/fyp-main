{"version":3,"sources":["pages/maps/GoogleMaps.tsx","components/PageTitle.tsx"],"names":["BasicMap","_ref","google","_jsx","Card","children","_jsxs","Body","className","id","style","position","Map","initialCenter","lat","lng","zoom","width","height","zoomControlOptions","maps","ControlPosition","LEFT_TOP","WithMarkers","_ref2","overflow","Marker","name","title","LightStyledMap","_ref3","styles","featureType","elementType","stylers","color","lightness","weight","visibility","saturation","DarkStyledMap","_ref4","WithPolygons","_ref5","Polygon","fillColor","fillOpacity","paths","strokeColor","strokeOpacity","strokeWeight","WithPolyline","_ref6","Polyline","path","StreetViewMap","_ref7","mapRef","useRef","ref","map","onReady","mapObj","getStreetView","setPov","heading","pitch","setPosition","setVisible","activateStreetView","ClickableMarkers","_ref8","activeMarker","setActiveMarker","useState","selectedPlace","setSelectedPlace","showingInfoWindow","setShowingInfoWindow","onClick","onBasicMarkerClick","alert","onMarkerClick","props","marker","e","InfoWindow","onClose","onInfoWindowClose","visible","GoogleApiWrapper","apiKey","_ref9","React","Fragment","PageTitle","breadCrumbItems","label","active","Row","Col","lg","appSelector","useRedux","layoutType","state","Layout","xs","classNames","LayoutTypes","LAYOUT_HORIZONTAL","LAYOUT_DETACHED","Breadcrumb","listProps","Item","href","item","index"],"mappings":"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","file":"static/js/144.35ead406.chunk.js","sourcesContent":["import React, { useRef, useState } from 'react';\r\nimport { Row, Col, Card } from 'react-bootstrap';\r\nimport { Map, Marker, GoogleApiWrapper, InfoWindow, Polygon, Polyline } from 'google-maps-react';\r\n\r\n// components\r\nimport PageTitle from '../../components/PageTitle';\r\n\r\ninterface MapContainerProps {\r\n    google: any;\r\n}\r\n\r\nconst BasicMap = ({ google }: MapContainerProps) => {\r\n    return (\r\n        <Card>\r\n            <Card.Body>\r\n                <h4 className=\"header-title mb-3\">Basic</h4>\r\n\r\n                {/* basic map */}\r\n                <div id=\"gmaps-basic\" style={{ position: 'relative' }} className=\"gmaps\">\r\n                    <Map\r\n                        google={google}\r\n                        initialCenter={{ lat: 21.569874, lng: 71.5893798 }}\r\n                        zoom={14}\r\n                        style={{ width: '100%', height: '100%', position: 'relative' }}\r\n                        zoomControlOptions={{\r\n                            position: google.maps.ControlPosition.LEFT_TOP,\r\n                        }}\r\n                    ></Map>\r\n                </div>\r\n            </Card.Body>\r\n        </Card>\r\n    );\r\n};\r\n\r\nconst WithMarkers = ({ google }: MapContainerProps) => {\r\n    return (\r\n        <Card>\r\n            <Card.Body>\r\n                <h4 className=\"header-title mb-3\">Markers</h4>\r\n                <div className=\"gmaps\" style={{ position: 'relative', overflow: 'hidden' }}>\r\n                    <Map\r\n                        google={google}\r\n                        zoom={18}\r\n                        initialCenter={{ lat: 21.569874, lng: 71.5893798 }}\r\n                        style={{ width: '100%', height: '100%', position: 'relative' }}\r\n                        zoomControlOptions={{\r\n                            position: google.maps.ControlPosition.LEFT_TOP,\r\n                        }}\r\n                    >\r\n                        <Marker\r\n                            name=\"SOMA\"\r\n                            position={{ lat: 21.56956, lng: 71.5892598 }}\r\n                            title=\"The marker`s title will appear as a tooltip.\"\r\n                        />\r\n\r\n                        <Marker name=\"Dolores park\" position={{ lat: 21.56969, lng: 71.5893798 }} />\r\n                    </Map>\r\n                </div>\r\n            </Card.Body>\r\n        </Card>\r\n    );\r\n};\r\n\r\nconst LightStyledMap = ({ google }: MapContainerProps) => {\r\n    const mapStyles = [\r\n        {\r\n            featureType: 'water',\r\n            elementType: 'geometry',\r\n            stylers: [{ color: '#e9e9e9' }, { lightness: 17 }],\r\n        },\r\n        {\r\n            featureType: 'landscape',\r\n            elementType: 'geometry',\r\n            stylers: [{ color: '#f5f5f5' }, { lightness: 20 }],\r\n        },\r\n        {\r\n            featureType: 'road.highway',\r\n            elementType: 'geometry.fill',\r\n            stylers: [{ color: '#ffffff' }, { lightness: 17 }],\r\n        },\r\n        {\r\n            featureType: 'road.highway',\r\n            elementType: 'geometry.stroke',\r\n            stylers: [{ color: '#ffffff' }, { lightness: 29 }, { weight: 0.2 }],\r\n        },\r\n        {\r\n            featureType: 'road.arterial',\r\n            elementType: 'geometry',\r\n            stylers: [{ color: '#ffffff' }, { lightness: 18 }],\r\n        },\r\n        {\r\n            featureType: 'road.local',\r\n            elementType: 'geometry',\r\n            stylers: [{ color: '#ffffff' }, { lightness: 16 }],\r\n        },\r\n        {\r\n            featureType: 'poi',\r\n            elementType: 'geometry',\r\n            stylers: [{ color: '#f5f5f5' }, { lightness: 21 }],\r\n        },\r\n        {\r\n            featureType: 'poi.park',\r\n            elementType: 'geometry',\r\n            stylers: [{ color: '#dedede' }, { lightness: 21 }],\r\n        },\r\n        {\r\n            elementType: 'labels.text.stroke',\r\n            stylers: [{ visibility: 'on' }, { color: '#ffffff' }, { lightness: 16 }],\r\n        },\r\n        {\r\n            elementType: 'labels.text.fill',\r\n            stylers: [{ saturation: 36 }, { color: '#333333' }, { lightness: 40 }],\r\n        },\r\n        { elementType: 'labels.icon', stylers: [{ visibility: 'off' }] },\r\n        {\r\n            featureType: 'transit',\r\n            elementType: 'geometry',\r\n            stylers: [{ color: '#f2f2f2' }, { lightness: 19 }],\r\n        },\r\n        {\r\n            featureType: 'administrative',\r\n            elementType: 'geometry.fill',\r\n            stylers: [{ color: '#fefefe' }, { lightness: 20 }],\r\n        },\r\n        {\r\n            featureType: 'administrative',\r\n            elementType: 'geometry.stroke',\r\n            stylers: [{ color: '#fefefe' }, { lightness: 17 }, { weight: 1.2 }],\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <Card>\r\n            <Card.Body>\r\n                <h4 className=\"header-title mb-3\">Ultra Light</h4>\r\n\r\n                <div id=\"ultra-light\" className=\"gmaps\" style={{ position: 'relative', overflow: 'hidden' }}>\r\n                    <Map\r\n                        google={google}\r\n                        zoom={14}\r\n                        initialCenter={{ lat: 40.7295174, lng: -73.9986496 }}\r\n                        style={{ width: '100%', height: '100%', position: 'relative' }}\r\n                        styles={mapStyles}\r\n                        zoomControlOptions={{\r\n                            position: google.maps.ControlPosition.LEFT_TOP,\r\n                        }}\r\n                    ></Map>\r\n                </div>\r\n            </Card.Body>\r\n        </Card>\r\n    );\r\n};\r\n\r\nconst DarkStyledMap = ({ google }: MapContainerProps) => {\r\n    const mapStyles = [\r\n        {\r\n            featureType: 'all',\r\n            elementType: 'labels',\r\n            stylers: [{ visibility: 'on' }],\r\n        },\r\n        {\r\n            featureType: 'all',\r\n            elementType: 'labels.text.fill',\r\n            stylers: [{ saturation: 36 }, { color: '#000000' }, { lightness: 40 }],\r\n        },\r\n        {\r\n            featureType: 'all',\r\n            elementType: 'labels.text.stroke',\r\n            stylers: [{ visibility: 'on' }, { color: '#000000' }, { lightness: 16 }],\r\n        },\r\n        {\r\n            featureType: 'all',\r\n            elementType: 'labels.icon',\r\n            stylers: [{ visibility: 'off' }],\r\n        },\r\n        {\r\n            featureType: 'administrative',\r\n            elementType: 'geometry.fill',\r\n            stylers: [{ color: '#000000' }, { lightness: 20 }],\r\n        },\r\n        {\r\n            featureType: 'administrative',\r\n            elementType: 'geometry.stroke',\r\n            stylers: [{ color: '#000000' }, { lightness: 17 }, { weight: 1.2 }],\r\n        },\r\n        {\r\n            featureType: 'administrative.country',\r\n            elementType: 'labels.text.fill',\r\n            stylers: [{ color: '#e5c163' }],\r\n        },\r\n        {\r\n            featureType: 'administrative.locality',\r\n            elementType: 'labels.text.fill',\r\n            stylers: [{ color: '#c4c4c4' }],\r\n        },\r\n        {\r\n            featureType: 'administrative.neighborhood',\r\n            elementType: 'labels.text.fill',\r\n            stylers: [{ color: '#e5c163' }],\r\n        },\r\n        {\r\n            featureType: 'landscape',\r\n            elementType: 'geometry',\r\n            stylers: [{ color: '#000000' }, { lightness: 20 }],\r\n        },\r\n        {\r\n            featureType: 'poi',\r\n            elementType: 'geometry',\r\n            stylers: [{ color: '#000000' }, { lightness: 21 }, { visibility: 'on' }],\r\n        },\r\n        {\r\n            featureType: 'poi.business',\r\n            elementType: 'geometry',\r\n            stylers: [{ visibility: 'on' }],\r\n        },\r\n        {\r\n            featureType: 'road.highway',\r\n            elementType: 'geometry.fill',\r\n            stylers: [{ color: '#e5c163' }, { lightness: '0' }],\r\n        },\r\n        {\r\n            featureType: 'road.highway',\r\n            elementType: 'geometry.stroke',\r\n            stylers: [{ visibility: 'off' }],\r\n        },\r\n        {\r\n            featureType: 'road.highway',\r\n            elementType: 'labels.text.fill',\r\n            stylers: [{ color: '#ffffff' }],\r\n        },\r\n        {\r\n            featureType: 'road.highway',\r\n            elementType: 'labels.text.stroke',\r\n            stylers: [{ color: '#e5c163' }],\r\n        },\r\n        {\r\n            featureType: 'road.arterial',\r\n            elementType: 'geometry',\r\n            stylers: [{ color: '#000000' }, { lightness: 18 }],\r\n        },\r\n        {\r\n            featureType: 'road.arterial',\r\n            elementType: 'geometry.fill',\r\n            stylers: [{ color: '#575757' }],\r\n        },\r\n        {\r\n            featureType: 'road.arterial',\r\n            elementType: 'labels.text.fill',\r\n            stylers: [{ color: '#ffffff' }],\r\n        },\r\n        {\r\n            featureType: 'road.arterial',\r\n            elementType: 'labels.text.stroke',\r\n            stylers: [{ color: '#2c2c2c' }],\r\n        },\r\n        {\r\n            featureType: 'road.local',\r\n            elementType: 'geometry',\r\n            stylers: [{ color: '#000000' }, { lightness: 16 }],\r\n        },\r\n        {\r\n            featureType: 'road.local',\r\n            elementType: 'labels.text.fill',\r\n            stylers: [{ color: '#999999' }],\r\n        },\r\n        {\r\n            featureType: 'transit',\r\n            elementType: 'geometry',\r\n            stylers: [{ color: '#000000' }, { lightness: 19 }],\r\n        },\r\n        {\r\n            featureType: 'water',\r\n            elementType: 'geometry',\r\n            stylers: [{ color: '#000000' }, { lightness: 17 }],\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <Card>\r\n            <Card.Body>\r\n                <h4 className=\"header-title mb-3\">Dark</h4>\r\n\r\n                <div id=\"dark\" className=\"gmaps\" style={{ position: 'relative', overflow: 'hidden' }}>\r\n                    <Map\r\n                        google={google}\r\n                        zoom={14}\r\n                        initialCenter={{ lat: 40.7295174, lng: -73.9986496 }}\r\n                        style={{ width: '100%', height: '100%', position: 'relative' }}\r\n                        styles={mapStyles}\r\n                        zoomControlOptions={{\r\n                            position: google.maps.ControlPosition.LEFT_TOP,\r\n                        }}\r\n                    ></Map>\r\n                </div>\r\n            </Card.Body>\r\n        </Card>\r\n    );\r\n};\r\n\r\nconst WithPolygons = ({ google }: MapContainerProps) => {\r\n    const polygon = [\r\n        { lat: -12.040397656836609, lng: -77.03373871559225 },\r\n        { lat: -12.040248585302038, lng: -77.03993927003302 },\r\n        { lat: -12.050047116528843, lng: -77.02448169303511 },\r\n        { lat: -12.044804866577001, lng: -77.02154422636042 },\r\n    ];\r\n\r\n    return (\r\n        <Card>\r\n            <Card.Body>\r\n                <h4 className=\"header-title mb-3\">Polygons</h4>\r\n\r\n                <div id=\"gmaps-polygons\" className=\"gmaps\" style={{ position: 'relative', overflow: 'hidden' }}>\r\n                    <Map\r\n                        google={google}\r\n                        initialCenter={{ lat: -12.043333, lng: -77.028333 }}\r\n                        style={{ width: '100%', height: '100%', position: 'relative' }}\r\n                        zoom={14}\r\n                        zoomControlOptions={{\r\n                            position: google.maps.ControlPosition.LEFT_TOP,\r\n                        }}\r\n                    >\r\n                        <Polygon\r\n                            fillColor=\"#BBD8E9\"\r\n                            fillOpacity={0.6}\r\n                            paths={polygon}\r\n                            strokeColor=\"#BBD8E9\"\r\n                            strokeOpacity={1}\r\n                            strokeWeight={3}\r\n                        />\r\n                    </Map>\r\n                </div>\r\n            </Card.Body>\r\n        </Card>\r\n    );\r\n};\r\n\r\nconst WithPolyline = ({ google }: MapContainerProps) => {\r\n    const polyline = [\r\n        { lat: -12.040397656836609, lng: -77.03373871559225 },\r\n        { lat: -12.048138585302038, lng: -77.03593927003302 },\r\n        { lat: -12.044804866577001, lng: -77.02454422636042 },\r\n    ];\r\n\r\n    return (\r\n        <Card>\r\n            <Card.Body>\r\n                <h4 className=\"header-title mb-3\">Polyline</h4>\r\n\r\n                <div id=\"gmaps-polygons\" className=\"gmaps\" style={{ position: 'relative', overflow: 'hidden' }}>\r\n                    <Map\r\n                        google={google}\r\n                        initialCenter={{ lat: -12.043333, lng: -77.028333 }}\r\n                        style={{ width: '100%', height: '100%', position: 'relative' }}\r\n                        zoom={14}\r\n                        zoomControlOptions={{\r\n                            position: google.maps.ControlPosition.LEFT_TOP,\r\n                        }}\r\n                    >\r\n                        <Polyline\r\n                            fillColor=\"#BBD8E9\"\r\n                            fillOpacity={0.6}\r\n                            path={polyline}\r\n                            strokeColor=\"#BBD8E9\"\r\n                            strokeOpacity={1}\r\n                            strokeWeight={3}\r\n                        />\r\n                    </Map>\r\n                </div>\r\n            </Card.Body>\r\n        </Card>\r\n    );\r\n};\r\n\r\nconst StreetViewMap = ({ google }: MapContainerProps) => {\r\n    let mapRef: any = useRef();\r\n\r\n    /**\r\n     * Activate the street view\r\n     */\r\n    const activateStreetView = (position: { lat: number; lng: number }) => {\r\n        if (mapRef) {\r\n            const mapObj = mapRef.map.getStreetView();\r\n            mapObj.setPov({ heading: 34, pitch: 10 });\r\n            mapObj.setPosition(position);\r\n            mapObj.setVisible(true);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Card>\r\n            <Card.Body>\r\n                <h4 className=\"header-title mb-3\">Street View Panoramas Google Map</h4>\r\n\r\n                <div id=\"panorama\" className=\"gmaps\" style={{ position: 'relative', overflow: 'hidden' }}>\r\n                    <Map\r\n                        google={google}\r\n                        ref={(map: any) => (mapRef = map)}\r\n                        zoom={14}\r\n                        initialCenter={{ lat: 40.7295174, lng: -73.9986496 }}\r\n                        style={{ width: '100%', height: '100%', position: 'relative' }}\r\n                        onReady={() => {\r\n                            activateStreetView({ lat: 40.7295174, lng: -73.9986496 });\r\n                        }}\r\n                    ></Map>\r\n                </div>\r\n            </Card.Body>\r\n        </Card>\r\n    );\r\n};\r\n\r\nconst ClickableMarkers = ({ google }: MapContainerProps) => {\r\n    const [activeMarker, setActiveMarker] = useState<any>({});\r\n    const [selectedPlace, setSelectedPlace] = useState<any>({});\r\n    const [showingInfoWindow, setShowingInfoWindow] = useState<boolean>(false);\r\n\r\n    const onInfoWindowClose = () => {\r\n        setActiveMarker(null);\r\n        setShowingInfoWindow(false);\r\n    };\r\n\r\n    // handles operation on marker click\r\n    const onBasicMarkerClick = () => {\r\n        alert('You clicked in this marker');\r\n    };\r\n\r\n    // handles operation on marker click\r\n    const onMarkerClick = (props: any, marker: any, e: any) => {\r\n        setActiveMarker(marker);\r\n        setSelectedPlace(props);\r\n        setShowingInfoWindow(true);\r\n    };\r\n\r\n    return (\r\n        <Card>\r\n            <Card.Body>\r\n                <h4 className=\"header-title mb-3\">Clickable Markers</h4>\r\n                <div className=\"gmaps\" style={{ position: 'relative', overflow: 'hidden' }}>\r\n                    <Map\r\n                        google={google}\r\n                        zoom={18}\r\n                        initialCenter={{ lat: 21.569874, lng: 71.5893798 }}\r\n                        style={{ width: '100%', height: '100%', position: 'relative' }}\r\n                        zoomControlOptions={{\r\n                            position: google.maps.ControlPosition.LEFT_TOP,\r\n                        }}\r\n                    >\r\n                        {/* basic marker */}\r\n                        <Marker\r\n                            title={'This is sweet home.'}\r\n                            name={'Home sweet home!'}\r\n                            onClick={onBasicMarkerClick}\r\n                            position={{ lat: 21.56956, lng: 71.5892598 }}\r\n                        />\r\n\r\n                        {/* clickable marker */}\r\n                        <Marker\r\n                            name=\"Current location\"\r\n                            title={'Marker with InfoWindow'}\r\n                            onClick={onMarkerClick}\r\n                            position={{ lat: 21.56969, lng: 71.5893798 }}\r\n                        />\r\n                        <InfoWindow marker={activeMarker} onClose={onInfoWindowClose} visible={showingInfoWindow}>\r\n                            <div>\r\n                                <p>{selectedPlace.name}</p>\r\n                            </div>\r\n                        </InfoWindow>\r\n                    </Map>\r\n                </div>\r\n            </Card.Body>\r\n        </Card>\r\n    );\r\n};\r\n\r\nconst GoogleMaps = ({ google }: MapContainerProps) => {\r\n    return (\r\n        <React.Fragment>\r\n            <PageTitle\r\n                breadCrumbItems={[\r\n                    { label: 'Maps', path: '/ui/googlemaps' },\r\n                    { label: 'Google Maps', path: '/ui/googlemaps', active: true },\r\n                ]}\r\n                title={'Google Maps'}\r\n            />\r\n\r\n            <Row>\r\n                <Col lg={6}>\r\n                    <BasicMap google={google} />\r\n                </Col>\r\n\r\n                <Col lg={6}>\r\n                    <WithMarkers google={google} />\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n                <Col lg={6}>\r\n                    <LightStyledMap google={google} />\r\n                </Col>\r\n                <Col lg={6}>\r\n                    <DarkStyledMap google={google} />\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n                <Col lg={6}>\r\n                    <WithPolyline google={google} />\r\n                </Col>\r\n                <Col lg={6}>\r\n                    <WithPolygons google={google} />\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n                <Col lg={6}>\r\n                    <StreetViewMap google={google} />\r\n                </Col>\r\n                <Col lg={6}>\r\n                    <ClickableMarkers google={google} />\r\n                </Col>\r\n            </Row>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default GoogleApiWrapper({\r\n    apiKey: 'AIzaSyDsucrEdmswqYrw0f6ej3bf4M4suDeRgNA',\r\n})(GoogleMaps);\r\n","import React from 'react';\r\nimport { Row, Col, Breadcrumb } from 'react-bootstrap';\r\nimport classNames from 'classnames';\r\n\r\n// custom hoook\r\nimport { useRedux } from '../hooks/';\r\n\r\n// constants\r\nimport { LayoutTypes } from '../constants/';\r\n\r\ninterface BreadcrumbItems {\r\n    label: string;\r\n    path: string;\r\n    active?: boolean;\r\n}\r\n\r\ninterface PageTitleProps {\r\n    breadCrumbItems: Array<BreadcrumbItems>;\r\n    title: string;\r\n}\r\n\r\n/**\r\n * PageTitle\r\n */\r\nconst PageTitle = (props: PageTitleProps) => {\r\n    const { appSelector } = useRedux();\r\n\r\n    const { layoutType } = appSelector((state) => ({\r\n        layoutType: state.Layout.layoutType,\r\n    }));\r\n\r\n    return (\r\n        <Row>\r\n            <Col xs={12}>\r\n                <div\r\n                    className={classNames('page-title-box', {\r\n                        'page-title-box-alt':\r\n                            layoutType === LayoutTypes.LAYOUT_HORIZONTAL || layoutType === LayoutTypes.LAYOUT_DETACHED,\r\n                    })}\r\n                >\r\n                    <h4 className=\"page-title\">{props.title}</h4>\r\n                    <div className=\"page-title-right\">\r\n                        <Breadcrumb listProps={{ className: 'm-0' }}>\r\n                            <Breadcrumb.Item href=\"/\">Minton</Breadcrumb.Item>\r\n\r\n                            {(props['breadCrumbItems'] || []).map((item, index) => {\r\n                                return item.active ? (\r\n                                    <Breadcrumb.Item active key={index}>\r\n                                        {item.label}\r\n                                    </Breadcrumb.Item>\r\n                                ) : (\r\n                                    <Breadcrumb.Item key={index} href={item.path}>\r\n                                        {item.label}\r\n                                    </Breadcrumb.Item>\r\n                                );\r\n                            })}\r\n                        </Breadcrumb>\r\n                    </div>\r\n                </div>\r\n            </Col>\r\n        </Row>\r\n    );\r\n};\r\n\r\nexport default PageTitle;\r\n"],"sourceRoot":""}