{"version":3,"sources":["pages/charts/Apex/SparkLineChart.tsx","pages/charts/Apex/LineChart.tsx","pages/charts/Apex/LineGradientChart.tsx","pages/charts/Apex/StackedAreaChart.tsx","pages/charts/Apex/ColumnChart.tsx","pages/charts/Apex/ColumnDataLabelsChart.tsx","pages/charts/Apex/MixedChart.tsx","pages/charts/Apex/BarChart.tsx","pages/charts/Apex/BarChartWithNegativeValues.tsx","pages/charts/Apex/LineColumnAreaChart.tsx","pages/charts/Apex/MultipleYaxisChart.tsx","pages/charts/Apex/BubbleChart.tsx","pages/charts/Apex/ThreeDBubbleChart.tsx","pages/charts/Apex/ScatterChart.tsx","pages/charts/Apex/ScatterDateTimeChart.tsx","pages/charts/Apex/CandleStickChart.tsx","pages/charts/Apex/ComboCandleStickChart.tsx","pages/charts/Apex/PieChart.tsx","pages/charts/Apex/DonutChart.tsx","pages/charts/Apex/DonutPatternedChart.tsx","pages/charts/Apex/RadialBarChart.tsx","pages/charts/Apex/RadialBarMultipleChart.tsx","pages/charts/Apex/CircularGuageChart.tsx","pages/charts/Apex/data.ts","pages/charts/Apex/index.tsx","components/PageTitle.tsx","components/Portlet.tsx","components/Loader.tsx","utils/chart.ts"],"names":["SparkLineChart","_ref","sparkLineChartData","showLoader","colors","titleText","subTitleText","sparkLineChartOptions","chart","type","height","sparkline","enabled","stroke","width","curve","fill","opacity","yaxis","min","title","text","offsetX","style","fontSize","subtitle","offsetY","sparkLineChartSeries","_jsx","_Fragment","children","position","Loader","Chart","options","series","className","LineChart","lineChartWithData","apexLineChartWithLablesData","name","data","data1","data2","BasicPortlet","cardTitle","titleClass","zoom","toolbar","show","dataLabels","align","color","grid","row","borderColor","markers","size","xaxis","categories","max","legend","horizontalAlign","floating","responsive","breakpoint","dir","LineGradientChart","gradientLineChartData","gradient","shade","gradientToColors","shadeIntensity","opacityFrom","opacityTo","stops","strokeWidth","hover","StackedAreaChart","stackedAreaChartData","apexAreaChart2Opts","id","stacked","events","selection","e","console","log","Date","apexAreaChart2Data","data3","ColumnChart","basicColumnChartData","plotOptions","bar","horizontal","columnWidth","padding","bottom","tooltip","y","formatter","val","ColumnDataLabelsChart","columnChartData","labels","axisBorder","axisTicks","crosshairs","colorFrom","colorTo","undefined","inverseColors","MixedChart","mixedChart1Data","apexMixedData","opposite","shared","intersect","toFixed","BarChart","basicBarChartData","states","filter","BarChartWithNegativeValues","barWithNegativeData","barHeight","x","Math","abs","round","Number","LineColumnAreaChart","mixedChart2Data","MultipleYaxisChart","multiYaxisChartData","followCursor","BubbleChart","bubbleChartData","tickAmount","ThreeDBubbleChart","threeDBubbleChartData","data4","rotate","ScatterChart","scatterChartData","ScatterDateTimeChart","scatterDateTimeChartData","data5","CandleStickChart","candleStickChartData","candlestick","upward","downward","ComboCandleStickChart","candleStickChart1Data","candleStickChart2Data","options1","setOptions1","useState","options2","setOptions2","series1","setSeries1","series2","setSeries2","useEffect","autoSelected","brush","target","getTime","ranges","from","to","_jsxs","PieChart","pieChartData","DonutChart","gradientDonutChartData","DonutPatternedChart","patternedDonutChartData","dropShadow","top","left","blur","pattern","RadialBarChart","radarChartData","radialBar","hollow","RadialBarMultipleChart","multiRadarChartData","value","total","label","w","String","CircularGuageChart","gaugeChartData","startAngle","endAngle","dashArray","generateData","baseval","count","yrange","i","floor","random","z","push","generateData1","baseval1","randomizeArray","temporaryValue","randomIndex","array","currentIndex","length","sparklineData","sparkLineData1","sparkLineData2","sparkLineData3","generateDayWiseTimeSeries","candleStickChartData1","candleStickChartLinearData","ApexCharts","isChatInitilized","setIsChatInitilized","window","Apex","right","React","Fragment","PageTitle","breadCrumbItems","path","active","Row","Col","md","xl","xxl","props","appSelector","useRedux","layoutType","state","Layout","xs","classNames","LayoutTypes","LAYOUT_HORIZONTAL","LAYOUT_DETACHED","Breadcrumb","listProps","Item","href","map","item","index","collapse","setCollapse","loading","setLoading","hidden","setHidden","Card","role","Body","Link","onClick","reloadContent","setTimeout","toggleContent","remove","Collapse","in","PortletWithHeader","Header"],"mappings":"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","file":"static/js/128.38bd8507.chunk.js","sourcesContent":["import React from 'react';\r\nimport Chart from 'react-apexcharts';\r\nimport { ApexOptions } from 'apexcharts';\r\n\r\n// components\r\nimport Loader from '../../../components/Loader';\r\n\r\n// data\r\nimport { SparkLineChartData } from './data';\r\n\r\ninterface LineChartProps {\r\n    sparkLineChartData: SparkLineChartData;\r\n    colors: string[];\r\n    titleText: string;\r\n    subTitleText: string;\r\n    showLoader?: boolean;\r\n}\r\n\r\n// simple line chart\r\nconst SparkLineChart = ({ sparkLineChartData, showLoader, colors, titleText, subTitleText }: LineChartProps) => {\r\n    // default options\r\n    const sparkLineChartOptions: ApexOptions = {\r\n        chart: {\r\n            type: 'area',\r\n            height: 160,\r\n            sparkline: {\r\n                enabled: true,\r\n            },\r\n        },\r\n        stroke: {\r\n            width: 2,\r\n            curve: 'straight',\r\n        },\r\n        fill: {\r\n            opacity: 0.2,\r\n        },\r\n        yaxis: {\r\n            min: 0,\r\n        },\r\n        colors: colors,\r\n        title: {\r\n            text: titleText,\r\n            offsetX: 10,\r\n            style: {\r\n                fontSize: '22px',\r\n            },\r\n        },\r\n        subtitle: {\r\n            text: subTitleText,\r\n            offsetX: 10,\r\n            offsetY: 35,\r\n            style: {\r\n                fontSize: '13px',\r\n            },\r\n        },\r\n    };\r\n\r\n    // chart data\r\n    const sparkLineChartSeries: SparkLineChartData[] = [sparkLineChartData];\r\n\r\n    return (\r\n        <>\r\n            {showLoader ? (\r\n                <div style={{ height: 160, position: 'relative' }}>\r\n                    <Loader />\r\n                </div>\r\n            ) : (\r\n                <Chart\r\n                    options={sparkLineChartOptions}\r\n                    series={sparkLineChartSeries}\r\n                    type=\"area\"\r\n                    height={160}\r\n                    className=\"apex-charts\"\r\n                />\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default SparkLineChart;\r\n","import React from 'react';\r\nimport Chart from 'react-apexcharts';\r\nimport { ApexOptions } from 'apexcharts';\r\n\r\n// components\r\nimport { BasicPortlet } from '../../../components/Portlet';\r\nimport Loader from '../../../components/Loader';\r\n\r\n// data\r\nimport { ApexLinearChartData } from './data';\r\n\r\ninterface LineChartProps {\r\n    lineChartWithData: ApexLinearChartData;\r\n    showLoader?: boolean;\r\n}\r\n\r\n// simple line chart\r\nconst LineChart = ({ lineChartWithData, showLoader }: LineChartProps) => {\r\n    // default options\r\n    const apexLineChartWithLables: ApexOptions = {\r\n        chart: {\r\n            height: 380,\r\n            type: 'line',\r\n            zoom: {\r\n                enabled: false,\r\n            },\r\n            toolbar: {\r\n                show: false,\r\n            },\r\n        },\r\n        dataLabels: {\r\n            enabled: false,\r\n        },\r\n        colors: ['#3bafda', '#1abc9c'],\r\n        stroke: {\r\n            width: [3, 3],\r\n            curve: 'smooth',\r\n        },\r\n        title: {\r\n            text: 'Average High & Low Temperature',\r\n            align: 'left',\r\n            style: {\r\n                fontSize: '14px',\r\n                color: '#666',\r\n            },\r\n        },\r\n        grid: {\r\n            row: {\r\n                colors: ['transparent', 'transparent'], // takes an array which will be repeated on columns\r\n                opacity: 0.2,\r\n            },\r\n            borderColor: '#f1f3fa',\r\n        },\r\n        markers: {\r\n            size: 6,\r\n        },\r\n        xaxis: {\r\n            categories: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul'],\r\n            title: {\r\n                text: 'Month',\r\n            },\r\n        },\r\n        yaxis: {\r\n            title: {\r\n                text: 'Temperature',\r\n            },\r\n            min: 5,\r\n            max: 40,\r\n        },\r\n        legend: {\r\n            position: 'top',\r\n            horizontalAlign: 'right',\r\n            floating: true,\r\n            offsetY: -25,\r\n            offsetX: -5,\r\n        },\r\n        responsive: [\r\n            {\r\n                breakpoint: 600,\r\n                options: {\r\n                    chart: {\r\n                        toolbar: {\r\n                            show: false,\r\n                        },\r\n                    },\r\n                    legend: {\r\n                        show: false,\r\n                    },\r\n                },\r\n            },\r\n        ],\r\n    };\r\n\r\n    // chart data\r\n    const apexLineChartWithLablesData = [\r\n        {\r\n            name: 'High - 2018',\r\n            data: lineChartWithData.data1 || [],\r\n        },\r\n        {\r\n            name: 'Low - 2018',\r\n            data: lineChartWithData.data2 || [],\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <BasicPortlet cardTitle=\"Line with Data Labels\" titleClass=\"header-title mb-0\">\r\n            {showLoader ? (\r\n                <div style={{ height: 380, position: 'relative' }}>\r\n                    <Loader />\r\n                </div>\r\n            ) : (\r\n                <Chart\r\n                    options={apexLineChartWithLables}\r\n                    series={apexLineChartWithLablesData}\r\n                    type=\"line\"\r\n                    height={380}\r\n                    className=\"apex-charts\"\r\n                    dir=\"ltr\"\r\n                />\r\n            )}\r\n        </BasicPortlet>\r\n    );\r\n};\r\n\r\nexport default LineChart;\r\n","import React from 'react';\r\nimport Chart from 'react-apexcharts';\r\nimport { ApexOptions } from 'apexcharts';\r\n// components\r\nimport { BasicPortlet } from '../../../components/Portlet';\r\nimport Loader from '../../../components/Loader';\r\n\r\n// data\r\nimport { ApexLinearChartData } from './data';\r\n\r\ninterface LineGradientChartProps {\r\n    gradientLineChartData: ApexLinearChartData;\r\n    showLoader?: boolean;\r\n}\r\n\r\nconst LineGradientChart = ({ gradientLineChartData, showLoader }: LineGradientChartProps) => {\r\n    const options: ApexOptions = {\r\n        chart: {\r\n            height: 380,\r\n            type: 'line',\r\n        },\r\n        stroke: {\r\n            width: [5],\r\n            curve: 'smooth',\r\n        },\r\n        colors: ['#f672a7'],\r\n        xaxis: {\r\n            type: 'datetime',\r\n            categories: [\r\n                '1/11/2000',\r\n                '2/11/2000',\r\n                '3/11/2000',\r\n                '4/11/2000',\r\n                '5/11/2000',\r\n                '6/11/2000',\r\n                '7/11/2000',\r\n                '8/11/2000',\r\n                '9/11/2000',\r\n                '10/11/2000',\r\n                '11/11/2000',\r\n                '12/11/2000',\r\n                '1/11/2001',\r\n                '2/11/2001',\r\n                '3/11/2001',\r\n                '4/11/2001',\r\n                '5/11/2001',\r\n                '6/11/2001',\r\n            ],\r\n        },\r\n        title: {\r\n            text: 'Social Media',\r\n            align: 'left',\r\n            style: {\r\n                fontSize: '14px',\r\n                color: '#666',\r\n            },\r\n        },\r\n        fill: {\r\n            type: 'gradient',\r\n            gradient: {\r\n                shade: 'dark',\r\n                gradientToColors: ['#f672a7'],\r\n                shadeIntensity: 1,\r\n                type: 'vertical',\r\n                opacityFrom: 1,\r\n                opacityTo: 1,\r\n                stops: [0, 100, 100, 100],\r\n            },\r\n        },\r\n        markers: {\r\n            size: 4,\r\n            colors: ['#50a5f1'],\r\n            strokeWidth: 2,\r\n            hover: {\r\n                size: 7,\r\n            },\r\n        },\r\n        yaxis: {\r\n            min: -10,\r\n            max: 40,\r\n            title: {\r\n                text: 'Engagement',\r\n            },\r\n        },\r\n        grid: {\r\n            row: {\r\n                colors: ['transparent', 'transparent'], // takes an array which will be repeated on columns\r\n                opacity: 0.2,\r\n            },\r\n            borderColor: '#185a9d',\r\n        },\r\n        responsive: [\r\n            {\r\n                breakpoint: 600,\r\n                options: {\r\n                    chart: {\r\n                        toolbar: {\r\n                            show: false,\r\n                        },\r\n                    },\r\n                    legend: {\r\n                        show: false,\r\n                    },\r\n                },\r\n            },\r\n        ],\r\n    };\r\n\r\n    const series = [\r\n        {\r\n            name: 'Likes',\r\n            data: gradientLineChartData.data || [],\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <BasicPortlet cardTitle=\"Gradient Line Chart\" titleClass=\"header-title mb-0\">\r\n            {showLoader ? (\r\n                <div style={{ height: 380, position: 'relative' }}>\r\n                    <Loader />\r\n                </div>\r\n            ) : (\r\n                <Chart options={options} series={series} type=\"line\" height={380} className=\"apex-charts\" dir=\"ltr\" />\r\n            )}\r\n        </BasicPortlet>\r\n    );\r\n};\r\n\r\nexport default LineGradientChart;\r\n","import React from 'react';\r\nimport Chart from 'react-apexcharts';\r\nimport { ApexOptions } from 'apexcharts';\r\n\r\n// components\r\nimport Loader from '../../../components/Loader';\r\nimport { BasicPortlet } from '../../../components/Portlet';\r\n\r\n// types\r\nimport { ApexLinearChartData } from './data';\r\n\r\ninterface StackedAreaChartProps {\r\n    stackedAreaChartData: ApexLinearChartData;\r\n    showLoader?: boolean;\r\n}\r\n\r\n// StackedAreaChart\r\nconst StackedAreaChart = ({ stackedAreaChartData, showLoader }: StackedAreaChartProps) => {\r\n    // default options\r\n    const apexAreaChart2Opts: ApexOptions = {\r\n        chart: {\r\n            id: 'apexchart',\r\n            height: 380,\r\n            type: 'area',\r\n            stacked: true,\r\n            events: {\r\n                selection: function (chart, e) {\r\n                    console.log(new Date(e.xaxis.min));\r\n                },\r\n            },\r\n        },\r\n        colors: ['#3bafda', '#1abc9c', '#CED4DC'],\r\n        stroke: {\r\n            width: 2,\r\n            curve: 'smooth',\r\n        },\r\n        fill: {\r\n            type: 'gradient',\r\n            gradient: {\r\n                opacityFrom: 0.6,\r\n                opacityTo: 0.8,\r\n            },\r\n        },\r\n        legend: {\r\n            position: 'top',\r\n            horizontalAlign: 'left',\r\n        },\r\n        xaxis: {\r\n            type: 'datetime',\r\n        },\r\n    };\r\n\r\n    // chart data\r\n    const apexAreaChart2Data = [\r\n        {\r\n            name: 'South',\r\n            data: stackedAreaChartData.data1 || [],\r\n        },\r\n        {\r\n            name: 'North',\r\n            data: stackedAreaChartData.data2 || [],\r\n        },\r\n\r\n        {\r\n            name: 'Central',\r\n            data: stackedAreaChartData.data3 || [],\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <BasicPortlet cardTitle=\"Stacked Area\" titleClass=\"header-title mb-0\">\r\n            {showLoader ? (\r\n                <div style={{ height: 380, position: 'relative' }}>\r\n                    <Loader />\r\n                </div>\r\n            ) : (\r\n                <Chart\r\n                    options={apexAreaChart2Opts}\r\n                    series={apexAreaChart2Data}\r\n                    type=\"area\"\r\n                    height={380}\r\n                    className=\"apex-charts\"\r\n                />\r\n            )}\r\n        </BasicPortlet>\r\n    );\r\n};\r\n\r\nexport default StackedAreaChart;\r\n","import React from 'react';\r\nimport Chart from 'react-apexcharts';\r\nimport { ApexOptions } from 'apexcharts';\r\n\r\n// components\r\nimport Loader from '../../../components/Loader';\r\nimport { BasicPortlet } from '../../../components/Portlet';\r\n\r\n// types\r\nimport { ApexLinearChartData } from './data';\r\n\r\ninterface ColumnChartProps {\r\n    basicColumnChartData: ApexLinearChartData;\r\n    showLoader?: boolean;\r\n}\r\n\r\nconst ColumnChart = ({ basicColumnChartData, showLoader }: ColumnChartProps) => {\r\n    const options: ApexOptions = {\r\n        chart: {\r\n            height: 380,\r\n            type: 'bar',\r\n            toolbar: {\r\n                show: false,\r\n            },\r\n        },\r\n        plotOptions: {\r\n            bar: {\r\n                horizontal: false,\r\n                columnWidth: '55%',\r\n            },\r\n        },\r\n        dataLabels: {\r\n            enabled: false,\r\n        },\r\n        stroke: {\r\n            show: true,\r\n            width: 2,\r\n            colors: ['transparent'],\r\n        },\r\n        colors: ['#3bafda', '#1abc9c', '#CED4DC'],\r\n        xaxis: {\r\n            categories: ['Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct'],\r\n        },\r\n        legend: {\r\n            offsetY: 5,\r\n        },\r\n        yaxis: {\r\n            title: {\r\n                text: '$ (thousands)',\r\n            },\r\n        },\r\n        fill: {\r\n            opacity: 1,\r\n        },\r\n        grid: {\r\n            row: {\r\n                colors: ['transparent', 'transparent'], // takes an array which will be repeated on columns\r\n                opacity: 0.2,\r\n            },\r\n            borderColor: '#f1f3fa',\r\n            padding: {\r\n                bottom: 10,\r\n            },\r\n        },\r\n        tooltip: {\r\n            y: {\r\n                formatter: function (val) {\r\n                    return '$ ' + val + ' thousands';\r\n                },\r\n            },\r\n        },\r\n    };\r\n\r\n    const series = [\r\n        {\r\n            name: 'Net Profit',\r\n            data: basicColumnChartData.data1 || [],\r\n        },\r\n        {\r\n            name: 'Revenue',\r\n            data: basicColumnChartData.data2 || [],\r\n        },\r\n        {\r\n            name: 'Free Cash Flow',\r\n            data: basicColumnChartData.data3 || [],\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <BasicPortlet cardTitle=\"Basic Column Chart\" titleClass=\"header-title mb-0\">\r\n            {showLoader ? (\r\n                <div style={{ height: 380, position: 'relative' }}>\r\n                    <Loader />\r\n                </div>\r\n            ) : (\r\n                <Chart options={options} series={series} type=\"bar\" height={380} className=\"apex-charts\" dir=\"ltr\" />\r\n            )}\r\n        </BasicPortlet>\r\n    );\r\n};\r\n\r\nexport default ColumnChart;\r\n","import React from 'react';\r\nimport Chart from 'react-apexcharts';\r\nimport { ApexOptions } from 'apexcharts';\r\n\r\n// components\r\nimport Loader from '../../../components/Loader';\r\nimport { BasicPortlet } from '../../../components/Portlet';\r\n\r\n// types\r\nimport { ApexLinearChartData } from './data';\r\n\r\ninterface ColumnDataLabelsChartProps {\r\n    columnChartData: ApexLinearChartData;\r\n    showLoader?: boolean;\r\n}\r\n\r\nconst ColumnDataLabelsChart = ({ columnChartData, showLoader }: ColumnDataLabelsChartProps) => {\r\n    const options: ApexOptions = {\r\n        chart: {\r\n            height: 380,\r\n            type: 'bar',\r\n            toolbar: {\r\n                show: false,\r\n            },\r\n        },\r\n        plotOptions: {\r\n            bar: {\r\n                dataLabels: {\r\n                    position: 'top', // top, center, bottom\r\n                },\r\n            },\r\n        },\r\n        colors: ['#3bafda'],\r\n        dataLabels: {\r\n            enabled: true,\r\n            formatter: (val: number) => {\r\n                return val + '%';\r\n            },\r\n            offsetY: -30,\r\n            style: {\r\n                fontSize: '12px',\r\n                colors: ['#304758'],\r\n            },\r\n        },\r\n        xaxis: {\r\n            categories: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\r\n            position: 'top',\r\n            labels: {\r\n                offsetY: -18,\r\n            },\r\n            axisBorder: {\r\n                show: false,\r\n            },\r\n            axisTicks: {\r\n                show: false,\r\n            },\r\n            crosshairs: {\r\n                fill: {\r\n                    type: 'gradient',\r\n                    gradient: {\r\n                        colorFrom: '#D8E3F0',\r\n                        colorTo: '#BED1E6',\r\n                        stops: [0, 100],\r\n                        opacityFrom: 0.4,\r\n                        opacityTo: 0.5,\r\n                    },\r\n                },\r\n            },\r\n            tooltip: {\r\n                enabled: true,\r\n                offsetY: -35,\r\n            },\r\n        },\r\n        fill: {\r\n            gradient: {\r\n                shade: 'light',\r\n                type: 'horizontal',\r\n                shadeIntensity: 0.25,\r\n                gradientToColors: undefined,\r\n                inverseColors: true,\r\n                opacityFrom: 1,\r\n                opacityTo: 1,\r\n                stops: [50, 0, 100, 100],\r\n            },\r\n        },\r\n        yaxis: {\r\n            axisBorder: {\r\n                show: false,\r\n            },\r\n            axisTicks: {\r\n                show: false,\r\n            },\r\n            labels: {\r\n                show: false,\r\n                formatter: (val: number) => {\r\n                    return val + '%';\r\n                },\r\n            },\r\n        },\r\n        title: {\r\n            text: 'Monthly Inflation in Argentina, 2002',\r\n            floating: true,\r\n            offsetY: 350,\r\n            align: 'center',\r\n            style: {\r\n                color: '#444',\r\n            },\r\n        },\r\n        grid: {\r\n            row: {\r\n                colors: ['transparent', 'transparent'], // takes an array which will be repeated on columns\r\n                opacity: 0.2,\r\n            },\r\n            borderColor: '#f1f3fa',\r\n        },\r\n    };\r\n\r\n    const series = [\r\n        {\r\n            name: 'Inflation',\r\n            data: columnChartData.data || [],\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <BasicPortlet cardTitle=\"Column Chart with Datalabels\" titleClass=\"header-title mb-0\">\r\n            {showLoader ? (\r\n                <div style={{ height: 380, position: 'relative' }}>\r\n                    <Loader />\r\n                </div>\r\n            ) : (\r\n                <Chart options={options} series={series} type=\"bar\" height={380} className=\"apex-charts\" dir=\"ltr\" />\r\n            )}\r\n        </BasicPortlet>\r\n    );\r\n};\r\n\r\nexport default ColumnDataLabelsChart;\r\n","import React from 'react';\r\nimport Chart from 'react-apexcharts';\r\nimport { ApexOptions } from 'apexcharts';\r\n\r\n// components\r\nimport Loader from '../../../components/Loader';\r\nimport { BasicPortlet } from '../../../components/Portlet';\r\n\r\n// types\r\nimport { ApexLinearChartData } from './data';\r\n\r\ninterface MixedChartProps {\r\n    mixedChart1Data: ApexLinearChartData;\r\n    showLoader?: boolean;\r\n}\r\n\r\n// Mixed chart\r\nconst MixedChart = ({ mixedChart1Data, showLoader }: MixedChartProps) => {\r\n    // default options\r\n    const apexMixedOpts: ApexOptions = {\r\n        chart: {\r\n            height: 380,\r\n            type: 'line',\r\n        },\r\n        stroke: {\r\n            width: [2],\r\n            curve: 'smooth',\r\n        },\r\n        fill: {\r\n            type: 'solid',\r\n            opacity: [0.35, 1],\r\n        },\r\n        colors: ['#CED4DC', '#3bafda'],\r\n        labels: [\r\n            'Dec 01',\r\n            'Dec 02',\r\n            'Dec 03',\r\n            'Dec 04',\r\n            'Dec 05',\r\n            'Dec 06',\r\n            'Dec 07',\r\n            'Dec 08',\r\n            'Dec 09 ',\r\n            'Dec 10',\r\n            'Dec 11',\r\n        ],\r\n        markers: {\r\n            size: 0,\r\n        },\r\n        legend: {\r\n            offsetY: 7,\r\n        },\r\n        yaxis: [\r\n            {\r\n                title: {\r\n                    text: 'Series A',\r\n                },\r\n            },\r\n            {\r\n                opposite: true,\r\n                title: {\r\n                    text: 'Series B',\r\n                },\r\n            },\r\n        ],\r\n        tooltip: {\r\n            shared: true,\r\n            intersect: false,\r\n            y: {\r\n                formatter: function (y) {\r\n                    if (typeof y !== 'undefined') {\r\n                        return y.toFixed(0) + ' points';\r\n                    }\r\n                    return y;\r\n                },\r\n            },\r\n        },\r\n    };\r\n\r\n    // chart data\r\n    const apexMixedData = [\r\n        {\r\n            name: 'Team A',\r\n            type: 'area',\r\n            data: mixedChart1Data.data1 || [],\r\n        },\r\n        {\r\n            name: 'Team B',\r\n            type: 'line',\r\n            data: mixedChart1Data.data2 || [],\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <BasicPortlet cardTitle=\"Mixed Chart - Line & Area\" titleClass=\"header-title mb-0\">\r\n            {showLoader ? (\r\n                <div style={{ height: 380, position: 'relative' }}>\r\n                    <Loader />\r\n                </div>\r\n            ) : (\r\n                <Chart\r\n                    options={apexMixedOpts}\r\n                    series={apexMixedData}\r\n                    type=\"line\"\r\n                    height={380}\r\n                    className=\"apex-charts\"\r\n                    dir=\"ltr\"\r\n                />\r\n            )}\r\n        </BasicPortlet>\r\n    );\r\n};\r\n\r\nexport default MixedChart;\r\n","import React from 'react';\r\nimport Chart from 'react-apexcharts';\r\nimport { ApexOptions } from 'apexcharts';\r\n\r\n// components\r\nimport Loader from '../../../components/Loader';\r\nimport { BasicPortlet } from '../../../components/Portlet';\r\n\r\n// types\r\nimport { ApexLinearChartData } from './data';\r\n\r\ninterface BarChartProps {\r\n    basicBarChartData: ApexLinearChartData;\r\n    showLoader?: boolean;\r\n}\r\n\r\nconst BarChart = ({ basicBarChartData, showLoader }: BarChartProps) => {\r\n    const options: ApexOptions = {\r\n        chart: {\r\n            height: 380,\r\n            type: 'bar',\r\n            toolbar: {\r\n                show: false,\r\n            },\r\n        },\r\n        colors: ['#1abc9c'],\r\n        plotOptions: {\r\n            bar: {\r\n                horizontal: true,\r\n            },\r\n        },\r\n        dataLabels: {\r\n            enabled: false,\r\n        },\r\n        states: {\r\n            hover: {\r\n                filter: {\r\n                    type: 'none',\r\n                },\r\n            },\r\n        },\r\n        grid: {\r\n            borderColor: '#f1f3fa',\r\n        },\r\n        xaxis: {\r\n            categories: [\r\n                'South Korea',\r\n                'Canada',\r\n                'United Kingdom',\r\n                'Netherlands',\r\n                'Italy',\r\n                'France',\r\n                'Japan',\r\n                'United States',\r\n                'China',\r\n                'Germany',\r\n            ],\r\n        },\r\n    };\r\n\r\n    const series = [\r\n        {\r\n            data: basicBarChartData.data || [],\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <BasicPortlet cardTitle=\"Basic bar chart\" titleClass=\"header-title mb-0\">\r\n            {showLoader ? (\r\n                <div style={{ height: 380, position: 'relative' }}>\r\n                    <Loader />\r\n                </div>\r\n            ) : (\r\n                <Chart options={options} series={series} type=\"bar\" height={380} className=\"apex-charts\" dir=\"ltr\" />\r\n            )}\r\n        </BasicPortlet>\r\n    );\r\n};\r\n\r\nexport default BarChart;\r\n","import React from 'react';\r\nimport Chart from 'react-apexcharts';\r\nimport { ApexOptions } from 'apexcharts';\r\n\r\n// components\r\nimport Loader from '../../../components/Loader';\r\nimport { BasicPortlet } from '../../../components/Portlet';\r\n\r\n// types\r\nimport { ApexLinearChartData } from './data';\r\n\r\ninterface BarChartWithNegativeValuesProps {\r\n    showLoader?: boolean;\r\n    barWithNegativeData: ApexLinearChartData;\r\n}\r\n\r\nconst BarChartWithNegativeValues = ({ barWithNegativeData, showLoader }: BarChartWithNegativeValuesProps) => {\r\n    const options: ApexOptions = {\r\n        chart: {\r\n            height: 380,\r\n            type: 'bar',\r\n            stacked: true,\r\n            toolbar: {\r\n                show: false,\r\n            },\r\n        },\r\n        plotOptions: {\r\n            bar: {\r\n                horizontal: true,\r\n                barHeight: '80%',\r\n            },\r\n        },\r\n        colors: ['#3bafda', '#1abc9c'],\r\n        grid: {\r\n            borderColor: '#f1f3fa',\r\n        },\r\n        dataLabels: {\r\n            enabled: false,\r\n        },\r\n        yaxis: {\r\n            min: -5,\r\n            max: 5,\r\n            title: {\r\n                // text: 'Age',\r\n            },\r\n        },\r\n        stroke: {\r\n            width: 1,\r\n            colors: ['#fff'],\r\n        },\r\n        tooltip: {\r\n            shared: false,\r\n            x: {\r\n                formatter: function (val: any) {\r\n                    return val;\r\n                },\r\n            },\r\n            y: {\r\n                formatter: function (val) {\r\n                    return Math.abs(val) + '%';\r\n                },\r\n            },\r\n        },\r\n        xaxis: {\r\n            categories: [\r\n                '85+',\r\n                '80-84',\r\n                '75-79',\r\n                '70-74',\r\n                '65-69',\r\n                '60-64',\r\n                '55-59',\r\n                '50-54',\r\n                '45-49',\r\n                '40-44',\r\n                '35-39',\r\n                '30-34',\r\n                '25-29',\r\n                '20-24',\r\n                '15-19',\r\n                '10-14',\r\n                '5-9',\r\n                '0-4',\r\n            ],\r\n            title: {\r\n                text: 'Percent',\r\n            },\r\n            labels: {\r\n                formatter: (val: string) => {\r\n                    return Math.abs(Math.round(Number(val))) + '%';\r\n                },\r\n            },\r\n        },\r\n        legend: {\r\n            offsetY: 7,\r\n        },\r\n    };\r\n\r\n    const series = [\r\n        {\r\n            name: 'Males',\r\n            data: barWithNegativeData.data1 || [],\r\n        },\r\n        {\r\n            name: 'Females',\r\n            data: barWithNegativeData.data2 || [],\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <BasicPortlet cardTitle=\"Bar with Negative Values\" titleClass=\"header-title mb-0\">\r\n            {showLoader ? (\r\n                <div style={{ height: 380, position: 'relative' }}>\r\n                    <Loader />\r\n                </div>\r\n            ) : (\r\n                <Chart options={options} series={series} type=\"bar\" height={380} className=\"apex-charts\" dir=\"ltr\" />\r\n            )}\r\n        </BasicPortlet>\r\n    );\r\n};\r\n\r\nexport default BarChartWithNegativeValues;\r\n","import React from 'react';\r\nimport Chart from 'react-apexcharts';\r\nimport { ApexOptions } from 'apexcharts';\r\n\r\n// components\r\nimport Loader from '../../../components/Loader';\r\nimport { BasicPortlet } from '../../../components/Portlet';\r\n\r\n// types\r\nimport { ApexLinearChartData } from './data';\r\n\r\ninterface LineColumnAreaChartProps {\r\n    mixedChart2Data: ApexLinearChartData;\r\n    showLoader?: boolean;\r\n}\r\n\r\nconst LineColumnAreaChart = ({ mixedChart2Data, showLoader }: LineColumnAreaChartProps) => {\r\n    const options: ApexOptions = {\r\n        chart: {\r\n            height: 380,\r\n            type: 'line',\r\n            // padding: {\r\n            //     right: 0,\r\n            //     left: 0\r\n            // },\r\n            stacked: false,\r\n            toolbar: {\r\n                show: false,\r\n            },\r\n        },\r\n        stroke: {\r\n            width: [0, 2, 4],\r\n            curve: 'smooth',\r\n        },\r\n        plotOptions: {\r\n            bar: {\r\n                columnWidth: '50%',\r\n            },\r\n        },\r\n        colors: ['#3bafda', '#1abc9c', '#f672a7'],\r\n        fill: {\r\n            opacity: [0.85, 0.25, 1],\r\n            gradient: {\r\n                inverseColors: false,\r\n                shade: 'light',\r\n                type: 'vertical',\r\n                opacityFrom: 0.85,\r\n                opacityTo: 0.55,\r\n                stops: [0, 100, 100, 100],\r\n            },\r\n        },\r\n        labels: [\r\n            '01/01/2003',\r\n            '02/01/2003',\r\n            '03/01/2003',\r\n            '04/01/2003',\r\n            '05/01/2003',\r\n            '06/01/2003',\r\n            '07/01/2003',\r\n            '08/01/2003',\r\n            '09/01/2003',\r\n            '10/01/2003',\r\n            '11/01/2003',\r\n        ],\r\n        markers: {\r\n            size: 0,\r\n        },\r\n        legend: {\r\n            offsetY: 7,\r\n        },\r\n        xaxis: {\r\n            type: 'datetime',\r\n        },\r\n        yaxis: {\r\n            title: {\r\n                text: 'Points',\r\n            },\r\n        },\r\n        tooltip: {\r\n            shared: true,\r\n            intersect: false,\r\n            y: {\r\n                formatter: function (y) {\r\n                    if (typeof y !== 'undefined') {\r\n                        return y.toFixed(0) + ' points';\r\n                    }\r\n                    return y;\r\n                },\r\n            },\r\n        },\r\n        grid: {\r\n            borderColor: '#f1f3fa',\r\n            padding: {\r\n                bottom: 10,\r\n            },\r\n        },\r\n    };\r\n\r\n    const series = [\r\n        {\r\n            name: 'Team A',\r\n            type: 'column',\r\n            data: mixedChart2Data.data1 || [],\r\n        },\r\n        {\r\n            name: 'Team B',\r\n            type: 'area',\r\n            data: mixedChart2Data.data2 || [],\r\n        },\r\n        {\r\n            name: 'Team C',\r\n            type: 'line',\r\n            data: mixedChart2Data.data3 || [],\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <BasicPortlet cardTitle=\"Line, Column & Area Chart\" titleClass=\"header-title mb-0\">\r\n            {showLoader ? (\r\n                <div style={{ height: 380, position: 'relative' }}>\r\n                    <Loader />\r\n                </div>\r\n            ) : (\r\n                <Chart options={options} series={series} type=\"line\" height={380} className=\"apex-charts\" dir=\"ltr\" />\r\n            )}\r\n        </BasicPortlet>\r\n    );\r\n};\r\n\r\nexport default LineColumnAreaChart;\r\n","import React from 'react';\r\nimport Chart from 'react-apexcharts';\r\nimport { ApexOptions } from 'apexcharts';\r\n\r\n// components\r\nimport Loader from '../../../components/Loader';\r\nimport { BasicPortlet } from '../../../components/Portlet';\r\n\r\n// types\r\nimport { ApexLinearChartData } from './data';\r\n\r\ninterface MultipleYaxisChartProps {\r\n    multiYaxisChartData: ApexLinearChartData;\r\n    showLoader?: boolean;\r\n}\r\n\r\nconst MultipleYaxisChart = ({ multiYaxisChartData, showLoader }: MultipleYaxisChartProps) => {\r\n    const options: ApexOptions = {\r\n        chart: {\r\n            height: 380,\r\n            type: 'line',\r\n            stacked: false,\r\n            toolbar: {\r\n                show: false,\r\n            },\r\n        },\r\n        dataLabels: {\r\n            enabled: false,\r\n        },\r\n        stroke: {\r\n            width: [0, 0, 3],\r\n        },\r\n        xaxis: {\r\n            categories: [2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016],\r\n        },\r\n        colors: ['#3bafda', '#ebf2f6', '#f672a7'],\r\n        yaxis: [\r\n            {\r\n                axisTicks: {\r\n                    show: true,\r\n                },\r\n                axisBorder: {\r\n                    show: true,\r\n                    color: '#675db7',\r\n                },\r\n                labels: {\r\n                    style: {\r\n                        colors: ['#675db7'],\r\n                    },\r\n                },\r\n                title: {\r\n                    text: 'Income (thousand crores)',\r\n                },\r\n            },\r\n\r\n            {\r\n                axisTicks: {\r\n                    show: true,\r\n                },\r\n                axisBorder: {\r\n                    show: true,\r\n                    color: '#23b397',\r\n                },\r\n                labels: {\r\n                    style: {\r\n                        colors: ['#23b397'],\r\n                    },\r\n                    offsetX: 10,\r\n                },\r\n                title: {\r\n                    text: 'Operating Cashflow (thousand crores)',\r\n                },\r\n            },\r\n            {\r\n                opposite: true,\r\n                axisTicks: {\r\n                    show: true,\r\n                },\r\n                axisBorder: {\r\n                    show: true,\r\n                    color: '#e36498',\r\n                },\r\n                labels: {\r\n                    style: {\r\n                        colors: ['#e36498'],\r\n                    },\r\n                },\r\n                title: {\r\n                    text: 'Revenue (thousand crores)',\r\n                },\r\n            },\r\n        ],\r\n        tooltip: {\r\n            followCursor: true,\r\n            y: {\r\n                formatter: function (y) {\r\n                    if (typeof y !== 'undefined') {\r\n                        return y + ' thousand crores';\r\n                    }\r\n                    return y;\r\n                },\r\n            },\r\n        },\r\n        grid: {\r\n            borderColor: '#f1f3fa',\r\n            padding: {\r\n                bottom: 10,\r\n            },\r\n        },\r\n        legend: {\r\n            offsetY: 7,\r\n        },\r\n        responsive: [\r\n            {\r\n                breakpoint: 600,\r\n                options: {\r\n                    yaxis: {\r\n                        show: false,\r\n                    },\r\n                    legend: {\r\n                        show: false,\r\n                    },\r\n                },\r\n            },\r\n        ],\r\n    };\r\n\r\n    const series = [\r\n        {\r\n            name: 'Income',\r\n            type: 'column',\r\n            data: multiYaxisChartData.data1 || [],\r\n        },\r\n        {\r\n            name: 'Cashflow',\r\n            type: 'column',\r\n            data: multiYaxisChartData.data2 || [],\r\n        },\r\n        {\r\n            name: 'Revenue',\r\n            type: 'line',\r\n            data: multiYaxisChartData.data3 || [],\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <BasicPortlet cardTitle=\"Multiple Y-Axis Chart\" titleClass=\"header-title mb-0\">\r\n            {showLoader ? (\r\n                <div style={{ height: 380, position: 'relative' }}>\r\n                    <Loader />\r\n                </div>\r\n            ) : (\r\n                <Chart options={options} series={series} height={380} className=\"apex-charts\" dir=\"ltr\" />\r\n            )}\r\n        </BasicPortlet>\r\n    );\r\n};\r\n\r\nexport default MultipleYaxisChart;\r\n","import React from 'react';\r\nimport Chart from 'react-apexcharts';\r\nimport { ApexOptions } from 'apexcharts';\r\n\r\n// components\r\nimport Loader from '../../../components/Loader';\r\nimport { BasicPortlet } from '../../../components/Portlet';\r\n\r\n// types\r\nimport { ApexLinearChartData } from './data';\r\n\r\ninterface BubbleChartProps {\r\n    bubbleChartData: ApexLinearChartData;\r\n    showLoader?: boolean;\r\n}\r\n\r\nconst BubbleChart = ({ bubbleChartData, showLoader }: BubbleChartProps) => {\r\n    const options: ApexOptions = {\r\n        chart: {\r\n            height: 380,\r\n            type: 'bubble',\r\n            toolbar: {\r\n                show: false,\r\n            },\r\n        },\r\n        dataLabels: {\r\n            enabled: false,\r\n        },\r\n        colors: ['#3bafda', '#1abc9c', '#f672a7'],\r\n        fill: {\r\n            opacity: 0.8,\r\n        },\r\n        xaxis: {\r\n            tickAmount: 12,\r\n            type: 'category',\r\n        },\r\n        yaxis: {\r\n            max: 70,\r\n        },\r\n        grid: {\r\n            borderColor: '#f1f3fa',\r\n            padding: {\r\n                bottom: 10,\r\n            },\r\n        },\r\n        legend: {\r\n            offsetY: 7,\r\n        },\r\n    };\r\n\r\n    const series = [\r\n        {\r\n            name: 'Bubble 1',\r\n            data: bubbleChartData.data1 || [],\r\n        },\r\n        {\r\n            name: 'Bubble 2',\r\n            data: bubbleChartData.data2 || [],\r\n        },\r\n        {\r\n            name: 'Bubble 3',\r\n            data: bubbleChartData.data3 || [],\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <BasicPortlet cardTitle=\"Simple Bubble Chart\" titleClass=\"header-title mb-0\">\r\n            {showLoader ? (\r\n                <div style={{ height: 380, position: 'relative' }}>\r\n                    <Loader />\r\n                </div>\r\n            ) : (\r\n                <Chart options={options} series={series} type=\"bubble\" height={380} className=\"apex-charts\" dir=\"ltr\" />\r\n            )}\r\n        </BasicPortlet>\r\n    );\r\n};\r\n\r\nexport default BubbleChart;\r\n","import React from 'react';\r\nimport Chart from 'react-apexcharts';\r\nimport { ApexOptions } from 'apexcharts';\r\n\r\n// components\r\nimport Loader from '../../../components/Loader';\r\nimport { BasicPortlet } from '../../../components/Portlet';\r\n\r\n// types\r\nimport { ApexLinearChartData } from './data';\r\n\r\ninterface ThreeDBubbleChartProps {\r\n    threeDBubbleChartData: ApexLinearChartData;\r\n    showLoader?: boolean;\r\n}\r\n\r\nconst ThreeDBubbleChart = ({ threeDBubbleChartData, showLoader }: ThreeDBubbleChartProps) => {\r\n    const options: ApexOptions = {\r\n        chart: {\r\n            height: 380,\r\n            type: 'bubble',\r\n            toolbar: {\r\n                show: false,\r\n            },\r\n        },\r\n        dataLabels: {\r\n            enabled: false,\r\n        },\r\n        fill: {\r\n            type: 'gradient',\r\n        },\r\n        xaxis: {\r\n            tickAmount: 12,\r\n            type: 'datetime',\r\n            labels: {\r\n                rotate: 0,\r\n            },\r\n        },\r\n        colors: ['#3bafda', '#1abc9c', '#6559cc', '#f672a7'],\r\n        yaxis: {\r\n            max: 70,\r\n        },\r\n        legend: {\r\n            offsetY: 7,\r\n        },\r\n        grid: {\r\n            borderColor: '#f1f3fa',\r\n            padding: {\r\n                bottom: 10,\r\n            },\r\n        },\r\n    };\r\n\r\n    const series = [\r\n        {\r\n            name: 'Product 1',\r\n            data: threeDBubbleChartData.data1 || [],\r\n        },\r\n        {\r\n            name: 'Product 2',\r\n            data: threeDBubbleChartData.data2 || [],\r\n        },\r\n        {\r\n            name: 'Product 3',\r\n            data: threeDBubbleChartData.data3 || [],\r\n        },\r\n        {\r\n            name: 'Product 4',\r\n            data: threeDBubbleChartData.data4 || [],\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <BasicPortlet cardTitle=\"3D Bubble Chart\" titleClass=\"header-title mb-0\">\r\n            {showLoader ? (\r\n                <div style={{ height: 380, position: 'relative' }}>\r\n                    <Loader />\r\n                </div>\r\n            ) : (\r\n                <Chart options={options} series={series} type=\"bubble\" height={380} className=\"apex-charts\" dir=\"ltr\" />\r\n            )}\r\n        </BasicPortlet>\r\n    );\r\n};\r\n\r\nexport default ThreeDBubbleChart;\r\n","import React from 'react';\r\nimport Chart from 'react-apexcharts';\r\nimport { ApexOptions } from 'apexcharts';\r\n\r\n// components\r\nimport Loader from '../../../components/Loader';\r\nimport { BasicPortlet } from '../../../components/Portlet';\r\n\r\n// types\r\nimport { ApexLinearChartData } from './data';\r\n\r\ninterface ScatterChartProps {\r\n    scatterChartData: ApexLinearChartData;\r\n    showLoader?: boolean;\r\n}\r\n\r\nconst ScatterChart = ({ scatterChartData, showLoader }: ScatterChartProps) => {\r\n    const options: ApexOptions = {\r\n        chart: {\r\n            height: 380,\r\n            type: 'scatter',\r\n            zoom: {\r\n                enabled: false,\r\n            },\r\n        },\r\n        colors: ['#1abc9c', '#f672a7', '#6c757d'],\r\n        xaxis: {\r\n            tickAmount: 10,\r\n        },\r\n        yaxis: {\r\n            tickAmount: 7,\r\n        },\r\n        grid: {\r\n            borderColor: '#f1f3fa',\r\n            padding: {\r\n                bottom: 10,\r\n            },\r\n        },\r\n        legend: {\r\n            offsetY: 7,\r\n        },\r\n        responsive: [\r\n            {\r\n                breakpoint: 600,\r\n                options: {\r\n                    chart: {\r\n                        toolbar: {\r\n                            show: false,\r\n                        },\r\n                    },\r\n                    legend: {\r\n                        show: false,\r\n                    },\r\n                },\r\n            },\r\n        ],\r\n    };\r\n\r\n    const series = [\r\n        {\r\n            name: 'Sample A',\r\n            data: scatterChartData.data1 || [],\r\n        },\r\n        {\r\n            name: 'Sample B',\r\n            data: scatterChartData.data2 || [],\r\n        },\r\n        {\r\n            name: 'Sample C',\r\n            data: scatterChartData.data3 || [],\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <BasicPortlet cardTitle=\"Scatter (XY) Chart\" titleClass=\"header-title mb-0\">\r\n            {showLoader ? (\r\n                <div style={{ height: 380, position: 'relative' }}>\r\n                    <Loader />\r\n                </div>\r\n            ) : (\r\n                <Chart\r\n                    options={options}\r\n                    series={series}\r\n                    type=\"scatter\"\r\n                    height={380}\r\n                    className=\"apex-charts\"\r\n                    dir=\"ltr\"\r\n                />\r\n            )}\r\n        </BasicPortlet>\r\n    );\r\n};\r\n\r\nexport default ScatterChart;\r\n","import React from 'react';\r\nimport Chart from 'react-apexcharts';\r\nimport { ApexOptions } from 'apexcharts';\r\n\r\n// components\r\nimport Loader from '../../../components/Loader';\r\nimport { BasicPortlet } from '../../../components/Portlet';\r\n\r\n// types\r\nimport { ApexLinearChartData } from './data';\r\n\r\ninterface ScatterDateTimeChartProps {\r\n    scatterDateTimeChartData: ApexLinearChartData;\r\n    showLoader?: boolean;\r\n}\r\n\r\nconst ScatterDateTimeChart = ({ scatterDateTimeChartData, showLoader }: ScatterDateTimeChartProps) => {\r\n    const options: ApexOptions = {\r\n        chart: {\r\n            height: 380,\r\n            type: 'scatter',\r\n            zoom: {\r\n                type: 'xy',\r\n            },\r\n        },\r\n        colors: ['#3bafda', '#1abc9c', '#f672a7', '#f672a7', '#6559cc'],\r\n        dataLabels: {\r\n            enabled: false,\r\n        },\r\n        grid: {\r\n            borderColor: '#f1f3fa',\r\n            padding: {\r\n                bottom: 10,\r\n            },\r\n        },\r\n        legend: {\r\n            offsetY: 7,\r\n        },\r\n        xaxis: {\r\n            type: 'datetime',\r\n        },\r\n        yaxis: {\r\n            max: 70,\r\n        },\r\n        responsive: [\r\n            {\r\n                breakpoint: 600,\r\n                options: {\r\n                    chart: {\r\n                        toolbar: {\r\n                            show: false,\r\n                        },\r\n                    },\r\n                    legend: {\r\n                        show: false,\r\n                    },\r\n                },\r\n            },\r\n        ],\r\n    };\r\n\r\n    const series = [\r\n        {\r\n            name: 'Team 1',\r\n            data: scatterDateTimeChartData.data1 || [],\r\n        },\r\n        {\r\n            name: 'Team 2',\r\n            data: scatterDateTimeChartData.data2 || [],\r\n        },\r\n        {\r\n            name: 'Team 3',\r\n            data: scatterDateTimeChartData.data3 || [],\r\n        },\r\n        {\r\n            name: 'Team 4',\r\n            data: scatterDateTimeChartData.data4 || [],\r\n        },\r\n        {\r\n            name: 'Team 5',\r\n            data: scatterDateTimeChartData.data5 || [],\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <BasicPortlet cardTitle=\"Scatter Chart - Datetime\" titleClass=\"header-title mb-0\">\r\n            {showLoader ? (\r\n                <div style={{ height: 380, position: 'relative' }}>\r\n                    <Loader />\r\n                </div>\r\n            ) : (\r\n                <Chart\r\n                    options={options}\r\n                    series={series}\r\n                    type=\"scatter\"\r\n                    height={380}\r\n                    className=\"apex-charts\"\r\n                    dir=\"ltr\"\r\n                />\r\n            )}\r\n        </BasicPortlet>\r\n    );\r\n};\r\n\r\nexport default ScatterDateTimeChart;\r\n","import React from 'react';\r\nimport Chart from 'react-apexcharts';\r\nimport { ApexOptions } from 'apexcharts';\r\n\r\n// components\r\nimport Loader from '../../../components/Loader';\r\nimport { BasicPortlet } from '../../../components/Portlet';\r\n\r\n// types\r\nimport { CandleStickChartData } from './data';\r\n\r\ninterface CandleStickChartProps {\r\n    candleStickChartData: CandleStickChartData;\r\n    showLoader?: boolean;\r\n}\r\n\r\nconst CandleStickChart = ({ candleStickChartData, showLoader }: CandleStickChartProps) => {\r\n    const options: ApexOptions = {\r\n        chart: {\r\n            height: 400,\r\n            type: 'candlestick',\r\n            toolbar: {\r\n                show: false,\r\n            },\r\n        },\r\n        colors: ['#3bafda', '#1abc9c'],\r\n        plotOptions: {\r\n            candlestick: {\r\n                colors: {\r\n                    upward: '#3bafda',\r\n                    downward: '#1abc9c',\r\n                },\r\n            },\r\n        },\r\n        stroke: {\r\n            show: true,\r\n            colors: ['#f1f3fa'],\r\n            width: 1,\r\n        },\r\n        xaxis: {\r\n            type: 'datetime',\r\n        },\r\n        grid: {\r\n            borderColor: '#f1f3fa',\r\n        },\r\n    };\r\n\r\n    const series = [\r\n        {\r\n            data: candleStickChartData.data || [],\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <BasicPortlet cardTitle=\"Simple Candlestick Chart\" titleClass=\"header-title mb-0\">\r\n            {showLoader ? (\r\n                <div style={{ height: 400, position: 'relative' }}>\r\n                    <Loader />\r\n                </div>\r\n            ) : (\r\n                <Chart\r\n                    options={options}\r\n                    series={series}\r\n                    type=\"candlestick\"\r\n                    height={400}\r\n                    className=\"apex-charts\"\r\n                    dir=\"ltr\"\r\n                />\r\n            )}\r\n        </BasicPortlet>\r\n    );\r\n};\r\n\r\nexport default CandleStickChart;\r\n","import React, { useEffect, useState } from 'react';\r\nimport Chart from 'react-apexcharts';\r\nimport { ApexOptions } from 'apexcharts';\r\n\r\n// components\r\nimport Loader from '../../../components/Loader';\r\nimport { BasicPortlet } from '../../../components/Portlet';\r\n\r\n// types\r\nimport { CandleStickChartData } from './data';\r\n\r\ninterface CandleStickChartProps {\r\n    candleStickChart1Data: CandleStickChartData;\r\n    candleStickChart2Data: CandleStickChartData;\r\n    showLoader?: boolean;\r\n}\r\n\r\nconst ComboCandleStickChart = ({ candleStickChart1Data, candleStickChart2Data, showLoader }: CandleStickChartProps) => {\r\n    const [options1, setOptions1] = useState<ApexOptions>({});\r\n    const [options2, setOptions2] = useState<ApexOptions>({});\r\n    const [series1, setSeries1] = useState<any[]>([]);\r\n    const [series2, setSeries2] = useState<any[]>([]);\r\n\r\n    useEffect(() => {\r\n        setOptions1({\r\n            chart: {\r\n                type: 'candlestick',\r\n                height: 240,\r\n                id: 'candles',\r\n                toolbar: {\r\n                    autoSelected: 'pan',\r\n                    show: false,\r\n                },\r\n                zoom: {\r\n                    enabled: false,\r\n                },\r\n            },\r\n            colors: ['#3bafda', '#f7b84b'],\r\n            plotOptions: {\r\n                candlestick: {\r\n                    colors: {\r\n                        upward: '#3bafda',\r\n                        downward: '#f7b84b',\r\n                    },\r\n                },\r\n            },\r\n            xaxis: {\r\n                type: 'datetime',\r\n            },\r\n            grid: {\r\n                borderColor: '#f1f3fa',\r\n            },\r\n        });\r\n\r\n        setOptions2({\r\n            chart: {\r\n                height: 160,\r\n                type: 'bar',\r\n                brush: {\r\n                    enabled: true,\r\n                    target: 'candles',\r\n                },\r\n                selection: {\r\n                    enabled: true,\r\n                    xaxis: {\r\n                        min: new Date('20 Jan 2017').getTime(),\r\n                        max: new Date('10 Dec 2017').getTime(),\r\n                    },\r\n                    fill: {\r\n                        color: '#ccc',\r\n                        opacity: 0.4,\r\n                    },\r\n                    stroke: {\r\n                        color: '#0D47A1',\r\n                    },\r\n                },\r\n            },\r\n            colors: ['#f45454', '#37cde6'],\r\n            dataLabels: {\r\n                enabled: false,\r\n            },\r\n            plotOptions: {\r\n                bar: {\r\n                    columnWidth: '80%',\r\n                    colors: {\r\n                        ranges: [\r\n                            {\r\n                                from: -1000,\r\n                                to: 0,\r\n                                color: '#f45454',\r\n                            },\r\n                            {\r\n                                from: 1,\r\n                                to: 10000,\r\n                                color: '#37cde6',\r\n                            },\r\n                        ],\r\n                    },\r\n                },\r\n            },\r\n            stroke: {\r\n                width: 0,\r\n            },\r\n            xaxis: {\r\n                type: 'datetime',\r\n                axisBorder: {\r\n                    offsetX: 13,\r\n                },\r\n            },\r\n            yaxis: {\r\n                labels: {\r\n                    show: false,\r\n                },\r\n            },\r\n        });\r\n\r\n        setSeries1([\r\n            {\r\n                data: candleStickChart1Data.data || [],\r\n            },\r\n        ]);\r\n\r\n        setSeries2([\r\n            {\r\n                name: 'volume',\r\n                data: candleStickChart2Data.data || [],\r\n            },\r\n        ]);\r\n    }, [candleStickChart1Data.data, candleStickChart2Data.data]);\r\n\r\n    return (\r\n        <BasicPortlet cardTitle=\"Simple Candlestick Chart\" titleClass=\"header-title mb-0\">\r\n            {showLoader ? (\r\n                <div style={{ height: 420, position: 'relative' }}>\r\n                    <Loader />\r\n                </div>\r\n            ) : (\r\n                <>\r\n                    <Chart\r\n                        options={options1}\r\n                        series={series1}\r\n                        type=\"candlestick\"\r\n                        height={250}\r\n                        className=\"apex-charts\"\r\n                        dir=\"ltr\"\r\n                    />\r\n\r\n                    <Chart\r\n                        options={options2}\r\n                        series={series2}\r\n                        type=\"bar\"\r\n                        height={170}\r\n                        className=\"apex-charts\"\r\n                        dir=\"ltr\"\r\n                    />\r\n                </>\r\n            )}\r\n        </BasicPortlet>\r\n    );\r\n};\r\n\r\nexport default ComboCandleStickChart;\r\n","import React from 'react';\r\nimport Chart from 'react-apexcharts';\r\nimport { ApexOptions } from 'apexcharts';\r\n\r\n// components\r\nimport Loader from '../../../components/Loader';\r\nimport { BasicPortlet } from '../../../components/Portlet';\r\n\r\n// types\r\nimport { ApexLinearChartData } from './data';\r\n\r\ninterface PieChartProps {\r\n    pieChartData: ApexLinearChartData;\r\n    showLoader?: boolean;\r\n}\r\n\r\nconst PieChart = ({ pieChartData, showLoader }: PieChartProps) => {\r\n    const options: ApexOptions = {\r\n        labels: ['Series 1', 'Series 2', 'Series 3', 'Series 4', 'Series 5'],\r\n        legend: {\r\n            show: true,\r\n            position: 'bottom',\r\n            horizontalAlign: 'center',\r\n            floating: false,\r\n            fontSize: '14px',\r\n            offsetX: 0,\r\n            offsetY: 7,\r\n        },\r\n        colors: ['#3bafda', '#1abc9c', '#f7b84b', '#6559cc', '#f672a7'],\r\n        responsive: [\r\n            {\r\n                breakpoint: 600,\r\n                options: {\r\n                    chart: {\r\n                        height: 240,\r\n                    },\r\n                    legend: {\r\n                        show: false,\r\n                    },\r\n                },\r\n            },\r\n        ],\r\n    };\r\n\r\n    const series = pieChartData.data || [];\r\n\r\n    return (\r\n        <BasicPortlet cardTitle=\"Simple Pie Chart\" titleClass=\"header-title mb-0\">\r\n            {showLoader ? (\r\n                <div style={{ height: 320, position: 'relative' }}>\r\n                    <Loader />\r\n                </div>\r\n            ) : (\r\n                <Chart options={options} series={series} type=\"pie\" height={320} className=\"apex-charts\" dir=\"ltr\" />\r\n            )}\r\n        </BasicPortlet>\r\n    );\r\n};\r\n\r\nexport default PieChart;\r\n","import React from 'react';\r\nimport Chart from 'react-apexcharts';\r\nimport { ApexOptions } from 'apexcharts';\r\n\r\n// components\r\nimport Loader from '../../../components/Loader';\r\nimport { BasicPortlet } from '../../../components/Portlet';\r\n\r\n// types\r\nimport { ApexLinearChartData } from './data';\r\n\r\ninterface DonutChartProps {\r\n    gradientDonutChartData: ApexLinearChartData;\r\n    showLoader?: boolean;\r\n}\r\n\r\nconst DonutChart = ({ gradientDonutChartData, showLoader }: DonutChartProps) => {\r\n    const options: ApexOptions = {\r\n        legend: {\r\n            show: true,\r\n            position: 'bottom',\r\n            horizontalAlign: 'center',\r\n            floating: false,\r\n            fontSize: '14px',\r\n            offsetX: 0,\r\n            offsetY: 7,\r\n        },\r\n        colors: ['#3bafda', '#1abc9c', '#f7b84b', '#6559cc', '#f672a7'],\r\n        labels: ['Series 1', 'Series 2', 'Series 3', 'Series 4', 'Series 5'],\r\n        responsive: [\r\n            {\r\n                breakpoint: 600,\r\n                options: {\r\n                    chart: {\r\n                        height: 240,\r\n                    },\r\n                    legend: {\r\n                        show: false,\r\n                    },\r\n                },\r\n            },\r\n        ],\r\n        fill: {\r\n            type: 'gradient',\r\n        },\r\n    };\r\n\r\n    const series = gradientDonutChartData.data || [];\r\n\r\n    return (\r\n        <BasicPortlet cardTitle=\"Gradient Donut Chart\" titleClass=\"header-title mb-0\">\r\n            {showLoader ? (\r\n                <div style={{ height: 320, position: 'relative' }}>\r\n                    <Loader />\r\n                </div>\r\n            ) : (\r\n                <Chart options={options} series={series} type=\"donut\" height={320} className=\"apex-charts\" dir=\"ltr\" />\r\n            )}\r\n        </BasicPortlet>\r\n    );\r\n};\r\n\r\nexport default DonutChart;\r\n","import React from 'react';\r\nimport Chart from 'react-apexcharts';\r\nimport { ApexOptions } from 'apexcharts';\r\n\r\n// components\r\nimport Loader from '../../../components/Loader';\r\nimport { BasicPortlet } from '../../../components/Portlet';\r\n\r\n// types\r\nimport { ApexLinearChartData } from './data';\r\n\r\ninterface DonutPatternedChartProps {\r\n    patternedDonutChartData: ApexLinearChartData;\r\n    showLoader?: boolean;\r\n}\r\n\r\nconst DonutPatternedChart = ({ patternedDonutChartData, showLoader }: DonutPatternedChartProps) => {\r\n    const options: ApexOptions = {\r\n        chart: {\r\n            dropShadow: {\r\n                enabled: true,\r\n                color: '#111',\r\n                top: -1,\r\n                left: 3,\r\n                blur: 3,\r\n                opacity: 0.2,\r\n            },\r\n        },\r\n        stroke: {\r\n            show: true,\r\n            width: 2,\r\n        },\r\n        labels: ['Comedy', 'Action', 'SciFi', 'Drama', 'Horror'],\r\n        dataLabels: {\r\n            dropShadow: {\r\n                blur: 3,\r\n                opacity: 0.8,\r\n            },\r\n        },\r\n        fill: {\r\n            type: 'pattern',\r\n            opacity: 1,\r\n            pattern: {\r\n                style: ['verticalLines', 'squares', 'horizontalLines', 'circles', 'slantedLines'],\r\n            },\r\n        },\r\n        states: {\r\n            hover: {\r\n                filter: {\r\n                    type: 'none',\r\n                },\r\n            },\r\n        },\r\n        legend: {\r\n            show: true,\r\n            position: 'bottom',\r\n            horizontalAlign: 'center',\r\n            floating: false,\r\n            fontSize: '14px',\r\n            offsetX: 0,\r\n            offsetY: 7,\r\n        },\r\n        responsive: [\r\n            {\r\n                breakpoint: 600,\r\n                options: {\r\n                    chart: {\r\n                        height: 240,\r\n                    },\r\n                    legend: {\r\n                        show: false,\r\n                    },\r\n                },\r\n            },\r\n        ],\r\n    };\r\n\r\n    const series = patternedDonutChartData.data || [];\r\n    return (\r\n        <BasicPortlet cardTitle=\"Patterned Donut Chart\" titleClass=\"header-title mb-0\">\r\n            {showLoader ? (\r\n                <div style={{ height: 320, position: 'relative' }}>\r\n                    <Loader />\r\n                </div>\r\n            ) : (\r\n                <Chart options={options} series={series} type=\"donut\" height={320} className=\"apex-charts\" dir=\"ltr\" />\r\n            )}\r\n        </BasicPortlet>\r\n    );\r\n};\r\n\r\nexport default DonutPatternedChart;\r\n","import React from 'react';\r\nimport Chart from 'react-apexcharts';\r\nimport { ApexOptions } from 'apexcharts';\r\n\r\n// components\r\nimport Loader from '../../../components/Loader';\r\nimport { BasicPortlet } from '../../../components/Portlet';\r\n\r\n// types\r\nimport { ApexLinearChartData } from './data';\r\n\r\ninterface RadialBarChartProps {\r\n    radarChartData: ApexLinearChartData;\r\n    showLoader?: boolean;\r\n}\r\n\r\nconst RadialBarChart = ({ radarChartData, showLoader }: RadialBarChartProps) => {\r\n    const options: ApexOptions = {\r\n        plotOptions: {\r\n            radialBar: {\r\n                hollow: {\r\n                    size: '70%',\r\n                },\r\n            },\r\n        },\r\n        colors: ['#3bafda'],\r\n        labels: ['CRICKET'],\r\n    };\r\n\r\n    const series = radarChartData.data || [];\r\n\r\n    return (\r\n        <BasicPortlet cardTitle=\"Basic RadialBar Chart\" titleClass=\"header-title mb-0\">\r\n            {showLoader ? (\r\n                <div style={{ height: 350, position: 'relative' }}>\r\n                    <Loader />\r\n                </div>\r\n            ) : (\r\n                <Chart\r\n                    options={options}\r\n                    series={series}\r\n                    type=\"radialBar\"\r\n                    height={350}\r\n                    className=\"apex-charts\"\r\n                    dir=\"ltr\"\r\n                />\r\n            )}\r\n        </BasicPortlet>\r\n    );\r\n};\r\n\r\nexport default RadialBarChart;\r\n","import React from 'react';\r\nimport Chart from 'react-apexcharts';\r\nimport { ApexOptions } from 'apexcharts';\r\n\r\n// components\r\nimport Loader from '../../../components/Loader';\r\nimport { BasicPortlet } from '../../../components/Portlet';\r\n\r\n// types\r\nimport { ApexLinearChartData } from './data';\r\n\r\ninterface RadialBarMultipleChartProps {\r\n    multiRadarChartData: ApexLinearChartData;\r\n    showLoader?: boolean;\r\n}\r\n\r\nconst RadialBarMultipleChart = ({ multiRadarChartData, showLoader }: RadialBarMultipleChartProps) => {\r\n    const options: ApexOptions = {\r\n        plotOptions: {\r\n            radialBar: {\r\n                dataLabels: {\r\n                    name: {\r\n                        fontSize: '22px',\r\n                    },\r\n                    value: {\r\n                        fontSize: '16px',\r\n                    },\r\n                    total: {\r\n                        show: true,\r\n                        label: 'Total',\r\n                        formatter: (w: number) => {\r\n                            // By default this function returns the average of all series. The below is just an example to show the use of custom formatter function\r\n                            return String(249);\r\n                        },\r\n                    },\r\n                },\r\n            },\r\n        },\r\n        labels: ['Apples', 'Oranges', 'Bananas', 'Berries'],\r\n        colors: ['#3bafda', '#f672a7', '#1abc9c', '#f7b84b'],\r\n    };\r\n\r\n    const series = multiRadarChartData.data || [];\r\n\r\n    return (\r\n        <BasicPortlet cardTitle=\"Multiple RadialBars\" titleClass=\"header-title mb-0\">\r\n            {showLoader ? (\r\n                <div style={{ height: 350, position: 'relative' }}>\r\n                    <Loader />\r\n                </div>\r\n            ) : (\r\n                <Chart\r\n                    options={options}\r\n                    series={series}\r\n                    type=\"radialBar\"\r\n                    height={350}\r\n                    className=\"apex-charts\"\r\n                    dir=\"ltr\"\r\n                />\r\n            )}\r\n        </BasicPortlet>\r\n    );\r\n};\r\n\r\nexport default RadialBarMultipleChart;\r\n","import React from 'react';\r\nimport Chart from 'react-apexcharts';\r\nimport { ApexOptions } from 'apexcharts';\r\n\r\n// components\r\nimport Loader from '../../../components/Loader';\r\nimport { BasicPortlet } from '../../../components/Portlet';\r\n\r\n// types\r\nimport { ApexLinearChartData } from './data';\r\n\r\ninterface CircularGuageChartProps {\r\n    gaugeChartData: ApexLinearChartData;\r\n    showLoader?: boolean;\r\n}\r\n\r\nconst CircularGuageChart = ({ gaugeChartData, showLoader }: CircularGuageChartProps) => {\r\n    const options: ApexOptions = {\r\n        plotOptions: {\r\n            radialBar: {\r\n                startAngle: -135,\r\n                endAngle: 135,\r\n                dataLabels: {\r\n                    name: {\r\n                        fontSize: '16px',\r\n                        color: undefined,\r\n                        offsetY: 120,\r\n                    },\r\n                    value: {\r\n                        offsetY: 76,\r\n                        fontSize: '22px',\r\n                        color: undefined,\r\n                        formatter: function (val) {\r\n                            return val + '%';\r\n                        },\r\n                    },\r\n                },\r\n            },\r\n        },\r\n        fill: {\r\n            gradient: {\r\n                shade: 'dark',\r\n                shadeIntensity: 0.15,\r\n                inverseColors: false,\r\n                opacityFrom: 1,\r\n                opacityTo: 1,\r\n                stops: [0, 50, 65, 91],\r\n            },\r\n        },\r\n        stroke: {\r\n            dashArray: 4,\r\n        },\r\n        colors: ['#f1556c'],\r\n        labels: ['Median Ratio'],\r\n        responsive: [\r\n            {\r\n                breakpoint: 380,\r\n                options: {\r\n                    chart: {\r\n                        height: 280,\r\n                    },\r\n                },\r\n            },\r\n        ],\r\n    };\r\n\r\n    const series = gaugeChartData.data || [];\r\n\r\n    return (\r\n        <BasicPortlet cardTitle=\"Stroked Circular Guage\" titleClass=\"header-title mb-0\">\r\n            {showLoader ? (\r\n                <div style={{ height: 375, position: 'relative' }}>\r\n                    <Loader />\r\n                </div>\r\n            ) : (\r\n                <Chart\r\n                    options={options}\r\n                    series={series}\r\n                    type=\"radialBar\"\r\n                    height={375}\r\n                    className=\"apex-charts\"\r\n                    dir=\"ltr\"\r\n                />\r\n            )}\r\n        </BasicPortlet>\r\n    );\r\n};\r\n\r\nexport default CircularGuageChart;\r\n","import { generateDayWiseTimeSeries } from '../../../utils/chart';\r\n\r\nexport interface Range {\r\n    min: number;\r\n    max: number;\r\n}\r\nexport interface Point {\r\n    x: number;\r\n    y: number;\r\n}\r\nexport interface ApexLinearChartData {\r\n    [key: string]: number[] | Point[] | [number, number][];\r\n}\r\nexport interface ApexNonLinearChartData {\r\n    [key: string]: number[];\r\n}\r\n\r\nexport interface SparkLineChartData {\r\n    name: string;\r\n    data: number[];\r\n}\r\n\r\nexport interface CandleStickChartData {\r\n    data: {\r\n        x: Date;\r\n        y: number | number[];\r\n    }[];\r\n}\r\n\r\n/**\r\n * Generates the data\r\n * @param {*} baseval\r\n * @param {*} count\r\n * @param {*} yrange\r\n */\r\nfunction generateData(baseval: number, count: number, yrange: Range): any[] {\r\n    let i = 0;\r\n    let series = [];\r\n    while (i < count) {\r\n        let x = Math.floor(Math.random() * (750 - 1 + 1)) + 1;\r\n        let y = Math.floor(Math.random() * (yrange.max - yrange.min + 1)) + yrange.min;\r\n        let z = Math.floor(Math.random() * (75 - 15 + 1)) + 15;\r\n\r\n        series.push([x, y, z]);\r\n        baseval += 86400000;\r\n        i++;\r\n    }\r\n    return series;\r\n}\r\n\r\n/**\r\n * Generates the alt data\r\n * @param {*} baseval1\r\n * @param {*} count\r\n * @param {*} yrange\r\n */\r\nfunction generateData1(baseval1: number, count: number, yrange: Range): any[] {\r\n    let i = 0;\r\n    let series = [];\r\n    while (i < count) {\r\n        //let x =Math.floor(Math.random() * (750 - 1 + 1)) + 1;;\r\n        let y = Math.floor(Math.random() * (yrange.max - yrange.min + 1)) + yrange.min;\r\n        let z = Math.floor(Math.random() * (75 - 15 + 1)) + 15;\r\n\r\n        series.push([baseval1, y, z]);\r\n        baseval1 += 86400000;\r\n        i++;\r\n    }\r\n    return series;\r\n}\r\n\r\nconst randomizeArray = (data: number[]) => {\r\n    var array = data;\r\n    var currentIndex = array.length,\r\n        temporaryValue,\r\n        randomIndex;\r\n\r\n    while (0 !== currentIndex) {\r\n        randomIndex = Math.floor(Math.random() * currentIndex);\r\n        currentIndex -= 1;\r\n\r\n        temporaryValue = array[currentIndex];\r\n        array[currentIndex] = array[randomIndex];\r\n        array[randomIndex] = temporaryValue;\r\n    }\r\n\r\n    return array;\r\n};\r\n\r\n// data for the sparklines that appear below header area\r\nconst sparklineData = [47, 45, 54, 38, 56, 24, 65, 31, 37, 39, 62, 51, 35, 41, 35, 27, 93, 53, 61, 27, 54, 43, 19, 46];\r\n\r\nconst sparkLineData1: SparkLineChartData = {\r\n    name: 'Minton Sales ',\r\n    data: randomizeArray(sparklineData),\r\n};\r\n\r\nconst sparkLineData2: SparkLineChartData = {\r\n    name: 'Minton Expenses ',\r\n    data: randomizeArray(sparklineData),\r\n};\r\n\r\nconst sparkLineData3: SparkLineChartData = {\r\n    name: 'Net Profits ',\r\n    data: randomizeArray(sparklineData),\r\n};\r\n\r\n// chart options\r\nconst lineChartWithData: ApexLinearChartData = {\r\n    data1: [28, 29, 33, 36, 32, 32, 33],\r\n    data2: [12, 11, 14, 18, 17, 13, 13],\r\n};\r\n\r\nconst gradientLineChartData: ApexLinearChartData = {\r\n    data: [4, 3, 10, 9, 29, 19, 22, 9, 12, 7, 19, 5, 13, 9, 17, 2, 7, 5],\r\n};\r\n\r\nconst stackedAreaChartData: ApexLinearChartData = {\r\n    data1: generateDayWiseTimeSeries(new Date('11 Feb 2019 GMT').getTime(), 20, {\r\n        min: 10,\r\n        max: 60,\r\n    }),\r\n\r\n    data2: generateDayWiseTimeSeries(new Date('11 Feb 2019 GMT').getTime(), 20, {\r\n        min: 10,\r\n        max: 20,\r\n    }),\r\n\r\n    data3: generateDayWiseTimeSeries(new Date('11 Feb 2019 GMT').getTime(), 20, {\r\n        min: 10,\r\n        max: 15,\r\n    }),\r\n};\r\n\r\nconst basicColumnChartData: ApexLinearChartData = {\r\n    data1: [44, 55, 57, 56, 61, 58, 63, 60, 66],\r\n    data2: [76, 85, 101, 98, 87, 105, 91, 114, 94],\r\n    data3: [35, 41, 36, 26, 45, 48, 52, 53, 41],\r\n};\r\n\r\nconst columnChartData: ApexLinearChartData = {\r\n    data: [2.3, 3.1, 4.0, 10.1, 4.0, 3.6, 3.2, 2.3, 1.4, 0.8, 0.5, 0.2],\r\n};\r\n\r\nconst mixedChart1Data: ApexLinearChartData = {\r\n    data1: [44, 55, 31, 47, 31, 43, 26, 41, 31, 47, 33],\r\n    data2: [55, 69, 45, 61, 43, 54, 37, 52, 44, 61, 43],\r\n};\r\n\r\nconst basicBarChartData: ApexLinearChartData = {\r\n    data: [400, 430, 448, 470, 540, 580, 690, 1100, 1200, 1380],\r\n};\r\n\r\nconst barWithNegativeData: ApexLinearChartData = {\r\n    data1: [0.4, 0.65, 0.76, 0.88, 1.5, 2.1, 2.9, 3.8, 3.9, 4.2, 4, 4.3, 4.1, 4.2, 4.5, 3.9, 3.5, 3],\r\n    data2: [\r\n        -0.8, -1.05, -1.06, -1.18, -1.4, -2.2, -2.85, -3.7, -3.96, -4.22, -4.3, -4.4, -4.1, -4, -4.1, -3.4, -3.1, -2.8,\r\n    ],\r\n};\r\n\r\nconst mixedChart2Data: ApexLinearChartData = {\r\n    data1: [23, 11, 22, 27, 13, 22, 37, 21, 44, 22, 30],\r\n    data2: [44, 55, 41, 67, 22, 43, 21, 41, 56, 27, 43],\r\n    data3: [30, 25, 36, 30, 45, 35, 64, 52, 59, 36, 39],\r\n};\r\n\r\nconst multiYaxisChartData: ApexLinearChartData = {\r\n    data1: [1.4, 2, 2.5, 1.5, 2.5, 2.8, 3.8, 4.6],\r\n    data2: [1.1, 3, 3.1, 4, 4.1, 4.9, 6.5, 8.5],\r\n    data3: [20, 29, 37, 36, 44, 45, 50, 58],\r\n};\r\n\r\nconst bubbleChartData: ApexLinearChartData = {\r\n    data1: generateData(new Date('11 Feb 2017 GMT').getTime(), 20, {\r\n        min: 10,\r\n        max: 60,\r\n    }),\r\n\r\n    data2: generateData(new Date('11 Feb 2017 GMT').getTime(), 20, {\r\n        min: 10,\r\n        max: 60,\r\n    }),\r\n    data3: generateData(new Date('11 Feb 2017 GMT').getTime(), 20, {\r\n        min: 10,\r\n        max: 60,\r\n    }),\r\n};\r\n\r\nconst threeDBubbleChartData: ApexLinearChartData = {\r\n    data1: generateData1(new Date('11 Feb 2017 GMT').getTime(), 20, {\r\n        min: 10,\r\n        max: 60,\r\n    }),\r\n\r\n    data2: generateData1(new Date('11 Feb 2017 GMT').getTime(), 20, {\r\n        min: 10,\r\n        max: 60,\r\n    }),\r\n\r\n    data3: generateData1(new Date('11 Feb 2017 GMT').getTime(), 20, {\r\n        min: 10,\r\n        max: 60,\r\n    }),\r\n\r\n    data4: generateData1(new Date('11 Feb 2017 GMT').getTime(), 20, {\r\n        min: 10,\r\n        max: 60,\r\n    }),\r\n};\r\n\r\nconst scatterChartData: ApexLinearChartData = {\r\n    data1: [\r\n        [16.4, 5.4],\r\n        [21.7, 2],\r\n        [25.4, 3],\r\n        [19, 2],\r\n        [10.9, 1],\r\n        [13.6, 3.2],\r\n        [10.9, 7.4],\r\n        [10.9, 0],\r\n        [10.9, 8.2],\r\n        [16.4, 0],\r\n        [16.4, 1.8],\r\n        [13.6, 0.3],\r\n        [13.6, 0],\r\n        [29.9, 0],\r\n        [27.1, 2.3],\r\n        [16.4, 0],\r\n        [13.6, 3.7],\r\n        [10.9, 5.2],\r\n        [16.4, 6.5],\r\n        [10.9, 0],\r\n        [24.5, 7.1],\r\n        [10.9, 0],\r\n        [8.1, 4.7],\r\n        [19, 0],\r\n        [21.7, 1.8],\r\n        [27.1, 0],\r\n        [24.5, 0],\r\n        [27.1, 0],\r\n        [29.9, 1.5],\r\n        [27.1, 0.8],\r\n        [22.1, 2],\r\n    ],\r\n    data2: [\r\n        [6.4, 13.4],\r\n        [1.7, 11],\r\n        [5.4, 8],\r\n        [9, 17],\r\n        [1.9, 4],\r\n        [3.6, 12.2],\r\n        [1.9, 14.4],\r\n        [1.9, 9],\r\n        [1.9, 13.2],\r\n        [1.4, 7],\r\n        [6.4, 8.8],\r\n        [3.6, 4.3],\r\n        [1.6, 10],\r\n        [9.9, 2],\r\n        [7.1, 15],\r\n        [1.4, 0],\r\n        [3.6, 13.7],\r\n        [1.9, 15.2],\r\n        [6.4, 16.5],\r\n        [0.9, 10],\r\n        [4.5, 17.1],\r\n        [10.9, 10],\r\n        [0.1, 14.7],\r\n        [9, 10],\r\n        [12.7, 11.8],\r\n        [2.1, 10],\r\n        [2.5, 10],\r\n        [27.1, 10],\r\n        [2.9, 11.5],\r\n        [7.1, 10.8],\r\n        [2.1, 12],\r\n    ],\r\n    data3: [\r\n        [21.7, 3],\r\n        [23.6, 3.5],\r\n        [24.6, 3],\r\n        [29.9, 3],\r\n        [21.7, 20],\r\n        [23, 2],\r\n        [10.9, 3],\r\n        [28, 4],\r\n        [27.1, 0.3],\r\n        [16.4, 4],\r\n        [13.6, 0],\r\n        [19, 5],\r\n        [22.4, 3],\r\n        [24.5, 3],\r\n        [32.6, 3],\r\n        [27.1, 4],\r\n        [29.6, 6],\r\n        [31.6, 8],\r\n        [21.6, 5],\r\n        [20.9, 4],\r\n        [22.4, 0],\r\n        [32.6, 10.3],\r\n        [29.7, 20.8],\r\n        [24.5, 0.8],\r\n        [21.4, 0],\r\n        [21.7, 6.9],\r\n        [28.6, 7.7],\r\n        [15.4, 0],\r\n        [18.1, 0],\r\n        [33.4, 0],\r\n        [16.4, 0],\r\n    ],\r\n};\r\n\r\nconst scatterDateTimeChartData: ApexLinearChartData = {\r\n    data1: generateDayWiseTimeSeries(new Date('11 Feb 2017 GMT').getTime(), 20, {\r\n        min: 10,\r\n        max: 60,\r\n    }),\r\n\r\n    data2: generateDayWiseTimeSeries(new Date('11 Feb 2017 GMT').getTime(), 20, {\r\n        min: 10,\r\n        max: 60,\r\n    }),\r\n    data3: generateDayWiseTimeSeries(new Date('11 Feb 2017 GMT').getTime(), 30, {\r\n        min: 10,\r\n        max: 60,\r\n    }),\r\n    data4: generateDayWiseTimeSeries(new Date('11 Feb 2017 GMT').getTime(), 10, {\r\n        min: 10,\r\n        max: 60,\r\n    }),\r\n    data5: generateDayWiseTimeSeries(new Date('11 Feb 2017 GMT').getTime(), 30, {\r\n        min: 10,\r\n        max: 60,\r\n    }),\r\n};\r\n\r\nconst candleStickChartData1: CandleStickChartData = {\r\n    data: [\r\n        {\r\n            x: new Date(2016, 1, 1),\r\n            y: [51.98, 56.29, 51.59, 53.85],\r\n        },\r\n        {\r\n            x: new Date(2016, 2, 1),\r\n            y: [53.66, 54.99, 51.35, 52.95],\r\n        },\r\n        {\r\n            x: new Date(2016, 3, 1),\r\n            y: [52.96, 53.78, 51.54, 52.48],\r\n        },\r\n        {\r\n            x: new Date(2016, 4, 1),\r\n            y: [52.54, 52.79, 47.88, 49.24],\r\n        },\r\n        {\r\n            x: new Date(2016, 5, 1),\r\n            y: [49.1, 52.86, 47.7, 52.78],\r\n        },\r\n        {\r\n            x: new Date(2016, 6, 1),\r\n            y: [52.83, 53.48, 50.32, 52.29],\r\n        },\r\n        {\r\n            x: new Date(2016, 7, 1),\r\n            y: [52.2, 54.48, 51.64, 52.58],\r\n        },\r\n        {\r\n            x: new Date(2016, 8, 1),\r\n            y: [52.76, 57.35, 52.15, 57.03],\r\n        },\r\n        {\r\n            x: new Date(2016, 9, 1),\r\n            y: [57.04, 58.15, 48.88, 56.19],\r\n        },\r\n        {\r\n            x: new Date(2016, 10, 1),\r\n            y: [56.09, 58.85, 55.48, 58.79],\r\n        },\r\n        {\r\n            x: new Date(2016, 11, 1),\r\n            y: [58.78, 59.65, 58.23, 59.05],\r\n        },\r\n        {\r\n            x: new Date(2017, 0, 1),\r\n            y: [59.37, 61.11, 59.35, 60.34],\r\n        },\r\n        {\r\n            x: new Date(2017, 1, 1),\r\n            y: [60.4, 60.52, 56.71, 56.93],\r\n        },\r\n        {\r\n            x: new Date(2017, 2, 1),\r\n            y: [57.02, 59.71, 56.04, 56.82],\r\n        },\r\n        {\r\n            x: new Date(2017, 3, 1),\r\n            y: [56.97, 59.62, 54.77, 59.3],\r\n        },\r\n        {\r\n            x: new Date(2017, 4, 1),\r\n            y: [59.11, 62.29, 59.1, 59.85],\r\n        },\r\n        {\r\n            x: new Date(2017, 5, 1),\r\n            y: [59.97, 60.11, 55.66, 58.42],\r\n        },\r\n        {\r\n            x: new Date(2017, 6, 1),\r\n            y: [58.34, 60.93, 56.75, 57.42],\r\n        },\r\n        {\r\n            x: new Date(2017, 7, 1),\r\n            y: [57.76, 58.08, 51.18, 54.71],\r\n        },\r\n        {\r\n            x: new Date(2017, 8, 1),\r\n            y: [54.8, 61.42, 53.18, 57.35],\r\n        },\r\n        {\r\n            x: new Date(2017, 9, 1),\r\n            y: [57.56, 63.09, 57.0, 62.99],\r\n        },\r\n        {\r\n            x: new Date(2017, 10, 1),\r\n            y: [62.89, 63.42, 59.72, 61.76],\r\n        },\r\n        {\r\n            x: new Date(2017, 11, 1),\r\n            y: [61.71, 64.15, 61.29, 63.04],\r\n        },\r\n    ],\r\n};\r\n\r\nconst candleStickChartLinearData: CandleStickChartData = {\r\n    data: [\r\n        {\r\n            x: new Date(2016, 1, 1),\r\n            y: 3.85,\r\n        },\r\n        {\r\n            x: new Date(2016, 2, 1),\r\n            y: 2.95,\r\n        },\r\n        {\r\n            x: new Date(2016, 3, 1),\r\n            y: -12.48,\r\n        },\r\n        {\r\n            x: new Date(2016, 4, 1),\r\n            y: 19.24,\r\n        },\r\n        {\r\n            x: new Date(2016, 5, 1),\r\n            y: 12.78,\r\n        },\r\n        {\r\n            x: new Date(2016, 6, 1),\r\n            y: 22.29,\r\n        },\r\n        {\r\n            x: new Date(2016, 7, 1),\r\n            y: -12.58,\r\n        },\r\n        {\r\n            x: new Date(2016, 8, 1),\r\n            y: -17.03,\r\n        },\r\n        {\r\n            x: new Date(2016, 9, 1),\r\n            y: -19.19,\r\n        },\r\n        {\r\n            x: new Date(2016, 10, 1),\r\n            y: -28.79,\r\n        },\r\n        {\r\n            x: new Date(2016, 11, 1),\r\n            y: -39.05,\r\n        },\r\n        {\r\n            x: new Date(2017, 0, 1),\r\n            y: 20.34,\r\n        },\r\n        {\r\n            x: new Date(2017, 1, 1),\r\n            y: 36.93,\r\n        },\r\n        {\r\n            x: new Date(2017, 2, 1),\r\n            y: 36.82,\r\n        },\r\n        {\r\n            x: new Date(2017, 3, 1),\r\n            y: 29.3,\r\n        },\r\n        {\r\n            x: new Date(2017, 4, 1),\r\n            y: 39.85,\r\n        },\r\n        {\r\n            x: new Date(2017, 5, 1),\r\n            y: 28.42,\r\n        },\r\n        {\r\n            x: new Date(2017, 6, 1),\r\n            y: 37.42,\r\n        },\r\n        {\r\n            x: new Date(2017, 7, 1),\r\n            y: 24.71,\r\n        },\r\n        {\r\n            x: new Date(2017, 8, 1),\r\n            y: 37.35,\r\n        },\r\n        {\r\n            x: new Date(2017, 9, 1),\r\n            y: 32.99,\r\n        },\r\n        {\r\n            x: new Date(2017, 10, 1),\r\n            y: 31.76,\r\n        },\r\n        {\r\n            x: new Date(2017, 11, 1),\r\n            y: 43.04,\r\n        },\r\n    ],\r\n};\r\n\r\nconst pieChartData: ApexNonLinearChartData = {\r\n    data: [44, 55, 41, 17, 15],\r\n};\r\n\r\nconst gradientDonutChartData: ApexNonLinearChartData = {\r\n    data: [44, 55, 41, 17, 15],\r\n};\r\n\r\nconst patternedDonutChartData: ApexNonLinearChartData = {\r\n    data: [44, 55, 41, 17, 15],\r\n};\r\n\r\nconst radarChartData: ApexNonLinearChartData = {\r\n    data: [70],\r\n};\r\n\r\nconst multiRadarChartData: ApexNonLinearChartData = {\r\n    data: [44, 55, 67, 83],\r\n};\r\n\r\nconst gaugeChartData: ApexNonLinearChartData = {\r\n    data: [67],\r\n};\r\n\r\nexport {\r\n    sparkLineData1,\r\n    sparkLineData2,\r\n    sparkLineData3,\r\n    lineChartWithData,\r\n    gradientLineChartData,\r\n    stackedAreaChartData,\r\n    barWithNegativeData,\r\n    basicBarChartData,\r\n    bubbleChartData,\r\n    basicColumnChartData,\r\n    columnChartData,\r\n    mixedChart1Data,\r\n    mixedChart2Data,\r\n    multiYaxisChartData,\r\n    threeDBubbleChartData,\r\n    scatterChartData,\r\n    scatterDateTimeChartData,\r\n    candleStickChartData1,\r\n    candleStickChartLinearData,\r\n    pieChartData,\r\n    patternedDonutChartData,\r\n    gaugeChartData,\r\n    gradientDonutChartData,\r\n    radarChartData,\r\n    multiRadarChartData,\r\n};\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Col, Row } from 'react-bootstrap';\r\n\r\n// components\r\nimport PageTitle from '../../../components/PageTitle';\r\nimport { BasicPortlet } from '../../../components/Portlet';\r\n\r\nimport SparkLineChart from './SparkLineChart';\r\nimport LineChart from './LineChart';\r\nimport LineGradientChart from './LineGradientChart';\r\nimport StackedAreaChart from './StackedAreaChart';\r\nimport ColumnChart from './ColumnChart';\r\nimport ColumnDataLabelsChart from './ColumnDataLabelsChart';\r\nimport MixedChart from './MixedChart';\r\nimport BarChart from './BarChart';\r\nimport BarChartWithNegativeValues from './BarChartWithNegativeValues';\r\nimport LineColumnAreaChart from './LineColumnAreaChart';\r\nimport MultipleYaxisChart from './MultipleYaxisChart';\r\nimport BubbleChart from './BubbleChart';\r\nimport ThreeDBubbleChart from './ThreeDBubbleChart';\r\nimport ScatterChart from './ScatterChart';\r\nimport ScatterDateTimeChart from './ScatterDateTimeChart';\r\nimport CandleStickChart from './CandleStickChart';\r\nimport ComboCandleStickChart from './ComboCandleStickChart';\r\nimport PieChart from './PieChart';\r\nimport DonutChart from './DonutChart';\r\nimport DonutPatternedChart from './DonutPatternedChart';\r\nimport RadialBarChart from './RadialBarChart';\r\nimport RadialBarMultipleChart from './RadialBarMultipleChart';\r\nimport CircularGuageChart from './CircularGuageChart';\r\n\r\n// data\r\nimport {\r\n    sparkLineData1,\r\n    sparkLineData2,\r\n    sparkLineData3,\r\n    lineChartWithData,\r\n    gradientLineChartData,\r\n    stackedAreaChartData,\r\n    basicColumnChartData,\r\n    columnChartData,\r\n    mixedChart1Data,\r\n    basicBarChartData,\r\n    barWithNegativeData,\r\n    mixedChart2Data,\r\n    multiYaxisChartData,\r\n    bubbleChartData,\r\n    threeDBubbleChartData,\r\n    scatterChartData,\r\n    scatterDateTimeChartData,\r\n    candleStickChartData1,\r\n    candleStickChartLinearData,\r\n    pieChartData,\r\n    gradientDonutChartData,\r\n    patternedDonutChartData,\r\n    radarChartData,\r\n    multiRadarChartData,\r\n    gaugeChartData,\r\n} from './data';\r\n\r\nconst ApexCharts = () => {\r\n    const [isChatInitilized, setIsChatInitilized] = useState<boolean>(false);\r\n\r\n    useEffect(() => {\r\n        // set deafult config of apex chart\r\n        if ((window as any).Apex) {\r\n            (window as any).Apex = {\r\n                grid: {\r\n                    padding: {\r\n                        right: 0,\r\n                        left: 0,\r\n                    },\r\n                },\r\n                dataLabels: {\r\n                    enabled: false,\r\n                },\r\n            };\r\n            setIsChatInitilized(true);\r\n        }\r\n        return () => {\r\n            if ((window as any).Apex) {\r\n                (window as any).Apex = {};\r\n            }\r\n        };\r\n    }, []);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <PageTitle\r\n                breadCrumbItems={[\r\n                    { label: 'Charts', path: '/ui/charts/apex' },\r\n                    { label: 'Apexcharts', path: 'ui/charts/apex', active: true },\r\n                ]}\r\n                title={'Apexcharts'}\r\n            />\r\n\r\n            <Row>\r\n                <Col>\r\n                    <BasicPortlet cardTitle=\"Sparkline Charts\" titleClass=\"header-title mb-0\">\r\n                        <Row>\r\n                            <Col md={4}>\r\n                                <SparkLineChart\r\n                                    sparkLineChartData={sparkLineData1}\r\n                                    showLoader={!isChatInitilized}\r\n                                    colors={['#3bafda']}\r\n                                    titleText=\"$424,652\"\r\n                                    subTitleText=\"Total Sales\"\r\n                                />\r\n                            </Col>\r\n                            <Col md={4}>\r\n                                <SparkLineChart\r\n                                    sparkLineChartData={sparkLineData2}\r\n                                    showLoader={!isChatInitilized}\r\n                                    colors={['#DCE6EC']}\r\n                                    titleText=\"$235,312\"\r\n                                    subTitleText=\"Expenses\"\r\n                                />\r\n                            </Col>\r\n                            <Col md={4}>\r\n                                <SparkLineChart\r\n                                    sparkLineChartData={sparkLineData3}\r\n                                    showLoader={!isChatInitilized}\r\n                                    colors={['#1abc9c']}\r\n                                    titleText=\"$135,965\"\r\n                                    subTitleText=\"Profits\"\r\n                                />\r\n                            </Col>\r\n                        </Row>\r\n                    </BasicPortlet>\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n                <Col xl={6}>\r\n                    <LineChart lineChartWithData={lineChartWithData} showLoader={!isChatInitilized} />\r\n                </Col>\r\n                <Col xl={6}>\r\n                    <LineGradientChart gradientLineChartData={gradientLineChartData} showLoader={!isChatInitilized} />\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n                <Col xl={6}>\r\n                    <StackedAreaChart stackedAreaChartData={stackedAreaChartData} showLoader={!isChatInitilized} />\r\n                </Col>\r\n                <Col xl={6}>\r\n                    <ColumnChart basicColumnChartData={basicColumnChartData} showLoader={!isChatInitilized} />\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n                <Col xl={6}>\r\n                    <ColumnDataLabelsChart columnChartData={columnChartData} showLoader={!isChatInitilized} />\r\n                </Col>\r\n                <Col xl={6}>\r\n                    <MixedChart mixedChart1Data={mixedChart1Data} showLoader={!isChatInitilized} />\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n                <Col xl={6}>\r\n                    <BarChart basicBarChartData={basicBarChartData} showLoader={!isChatInitilized} />\r\n                </Col>\r\n                <Col xl={6}>\r\n                    <BarChartWithNegativeValues\r\n                        barWithNegativeData={barWithNegativeData}\r\n                        showLoader={!isChatInitilized}\r\n                    />\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n                <Col xl={6}>\r\n                    <LineColumnAreaChart mixedChart2Data={mixedChart2Data} showLoader={!isChatInitilized} />\r\n                </Col>\r\n                <Col xl={6}>\r\n                    <MultipleYaxisChart multiYaxisChartData={multiYaxisChartData} showLoader={!isChatInitilized} />\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n                <Col xl={6}>\r\n                    <BubbleChart bubbleChartData={bubbleChartData} showLoader={!isChatInitilized} />\r\n                </Col>\r\n                <Col xl={6}>\r\n                    <ThreeDBubbleChart threeDBubbleChartData={threeDBubbleChartData} showLoader={!isChatInitilized} />\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n                <Col xl={6}>\r\n                    <ScatterChart scatterChartData={scatterChartData} showLoader={!isChatInitilized} />\r\n                </Col>\r\n                <Col xl={6}>\r\n                    <ScatterDateTimeChart\r\n                        scatterDateTimeChartData={scatterDateTimeChartData}\r\n                        showLoader={!isChatInitilized}\r\n                    />\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n                <Col xl={6}>\r\n                    <CandleStickChart candleStickChartData={candleStickChartData1} showLoader={!isChatInitilized} />\r\n                </Col>\r\n                <Col xl={6}>\r\n                    <ComboCandleStickChart\r\n                        candleStickChart1Data={candleStickChartData1}\r\n                        candleStickChart2Data={candleStickChartLinearData}\r\n                        showLoader={!isChatInitilized}\r\n                    />\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n                <Col xxl={4} md={6}>\r\n                    <PieChart pieChartData={pieChartData} showLoader={!isChatInitilized} />\r\n                </Col>\r\n                <Col xxl={4} md={6}>\r\n                    <DonutChart gradientDonutChartData={gradientDonutChartData} showLoader={!isChatInitilized} />\r\n                </Col>\r\n                <Col xxl={4} md={6}>\r\n                    <DonutPatternedChart\r\n                        patternedDonutChartData={patternedDonutChartData}\r\n                        showLoader={!isChatInitilized}\r\n                    />\r\n                </Col>\r\n\r\n                <Col xxl={4} md={6}>\r\n                    <RadialBarChart radarChartData={radarChartData} showLoader={!isChatInitilized} />\r\n                </Col>\r\n                <Col xxl={4} md={6}>\r\n                    <RadialBarMultipleChart multiRadarChartData={multiRadarChartData} showLoader={!isChatInitilized} />\r\n                </Col>\r\n                <Col xxl={4} md={6}>\r\n                    <CircularGuageChart gaugeChartData={gaugeChartData} showLoader={!isChatInitilized} />\r\n                </Col>\r\n            </Row>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default ApexCharts;\r\n","import React from 'react';\r\nimport { Row, Col, Breadcrumb } from 'react-bootstrap';\r\nimport classNames from 'classnames';\r\n\r\n// custom hoook\r\nimport { useRedux } from '../hooks/';\r\n\r\n// constants\r\nimport { LayoutTypes } from '../constants/';\r\n\r\ninterface BreadcrumbItems {\r\n    label: string;\r\n    path: string;\r\n    active?: boolean;\r\n}\r\n\r\ninterface PageTitleProps {\r\n    breadCrumbItems: Array<BreadcrumbItems>;\r\n    title: string;\r\n}\r\n\r\n/**\r\n * PageTitle\r\n */\r\nconst PageTitle = (props: PageTitleProps) => {\r\n    const { appSelector } = useRedux();\r\n\r\n    const { layoutType } = appSelector((state) => ({\r\n        layoutType: state.Layout.layoutType,\r\n    }));\r\n\r\n    return (\r\n        <Row>\r\n            <Col xs={12}>\r\n                <div\r\n                    className={classNames('page-title-box', {\r\n                        'page-title-box-alt':\r\n                            layoutType === LayoutTypes.LAYOUT_HORIZONTAL || layoutType === LayoutTypes.LAYOUT_DETACHED,\r\n                    })}\r\n                >\r\n                    <h4 className=\"page-title\">{props.title}</h4>\r\n                    <div className=\"page-title-right\">\r\n                        <Breadcrumb listProps={{ className: 'm-0' }}>\r\n                            <Breadcrumb.Item href=\"/\">Minton</Breadcrumb.Item>\r\n\r\n                            {(props['breadCrumbItems'] || []).map((item, index) => {\r\n                                return item.active ? (\r\n                                    <Breadcrumb.Item active key={index}>\r\n                                        {item.label}\r\n                                    </Breadcrumb.Item>\r\n                                ) : (\r\n                                    <Breadcrumb.Item key={index} href={item.path}>\r\n                                        {item.label}\r\n                                    </Breadcrumb.Item>\r\n                                );\r\n                            })}\r\n                        </Breadcrumb>\r\n                    </div>\r\n                </div>\r\n            </Col>\r\n        </Row>\r\n    );\r\n};\r\n\r\nexport default PageTitle;\r\n","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport classNames from 'classnames';\r\nimport { Card, Collapse } from 'react-bootstrap';\r\n\r\ninterface PortletProps {\r\n    className?: string;\r\n    children?: any;\r\n    cardTitle?: string;\r\n    titleClass?: string;\r\n    headerClass?: string;\r\n}\r\n\r\n/**\r\n * Portlet\r\n */\r\nconst BasicPortlet = (props: PortletProps) => {\r\n    const children = props['children'] || null;\r\n    const cardTitle = props['cardTitle'] || 'Card Title';\r\n\r\n    const [collapse, setCollapse] = useState<boolean>(true);\r\n    const [loading, setLoading] = useState<boolean>(false);\r\n    const [hidden, setHidden] = useState<boolean>(false);\r\n\r\n    /**\r\n     * Toggle the body\r\n     */\r\n    const toggleContent = () => {\r\n        setCollapse(!collapse);\r\n    };\r\n\r\n    /**\r\n     * Reload the content\r\n     */\r\n    const reloadContent = () => {\r\n        setLoading(true);\r\n        setTimeout(() => {\r\n            setLoading(false);\r\n        }, 500 + 300 * (Math.random() * 5));\r\n    };\r\n\r\n    /**\r\n     * remove the portlet\r\n     */\r\n    const remove = () => {\r\n        setHidden(true);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {!hidden ? (\r\n                <Card className={classNames(props['className'])}>\r\n                    {loading && (\r\n                        <div className=\"card-disabled\">\r\n                            <div className=\"card-portlets-loader\">\r\n                                <div className=\"spinner-border text-primary m-2\" role=\"status\"></div>\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n\r\n                    <Card.Body>\r\n                        <div className=\"card-widgets\">\r\n                            <Link to=\"#\" onClick={reloadContent}>\r\n                                <i className=\"mdi mdi-refresh\"></i>\r\n                            </Link>\r\n                            <Link to=\"#\" onClick={toggleContent}>\r\n                                <i\r\n                                    className={classNames('mdi', {\r\n                                        'mdi-minus': collapse,\r\n                                        'mdi-plus': !collapse,\r\n                                    })}\r\n                                ></i>\r\n                            </Link>\r\n                            <Link to=\"#\" onClick={remove}>\r\n                                <i className=\"mdi mdi-close\"></i>\r\n                            </Link>\r\n                        </div>\r\n\r\n                        <h5 className={classNames('mb-0', props['titleClass'])}>{cardTitle}</h5>\r\n\r\n                        <Collapse in={collapse} className=\"pt-3\">\r\n                            {children}\r\n                        </Collapse>\r\n                    </Card.Body>\r\n                </Card>\r\n            ) : null}\r\n        </>\r\n    );\r\n};\r\n\r\nconst PortletWithHeader = (props: PortletProps) => {\r\n    const children = props['children'] || null;\r\n    const cardTitle = props['cardTitle'] || 'Card Title';\r\n\r\n    const [collapse, setCollapse] = useState<boolean>(true);\r\n    const [loading, setLoading] = useState<boolean>(false);\r\n    const [hidden, setHidden] = useState<boolean>(false);\r\n\r\n    /**\r\n     * Toggle the body\r\n     */\r\n    const toggleContent = () => {\r\n        setCollapse(!collapse);\r\n    };\r\n\r\n    /**\r\n     * Reload the content\r\n     */\r\n    const reloadContent = () => {\r\n        setLoading(true);\r\n        setTimeout(() => {\r\n            setLoading(false);\r\n        }, 500 + 300 * (Math.random() * 5));\r\n    };\r\n\r\n    /**\r\n     * remove the portlet\r\n     */\r\n    const remove = () => {\r\n        setHidden(true);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {!hidden ? (\r\n                <Card className={classNames(props['className'])}>\r\n                    {loading && (\r\n                        <div className=\"card-disabled\">\r\n                            <div className=\"card-portlets-loader\">\r\n                                <div className=\"spinner-border text-primary m-2\" role=\"status\"></div>\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n\r\n                    <Card.Header className={classNames(props['headerClass'])}>\r\n                        <div className=\"card-widgets\">\r\n                            <Link to=\"#\" onClick={reloadContent}>\r\n                                <i className=\"mdi mdi-refresh\"></i>\r\n                            </Link>\r\n                            <Link to=\"#\" onClick={toggleContent}>\r\n                                <i\r\n                                    className={classNames('mdi', {\r\n                                        'mdi-minus': collapse,\r\n                                        'mdi-plus': !collapse,\r\n                                    })}\r\n                                ></i>\r\n                            </Link>\r\n                            <Link to=\"#\" onClick={remove}>\r\n                                <i className=\"mdi mdi-close\"></i>\r\n                            </Link>\r\n                        </div>\r\n\r\n                        <h5 className={classNames('mb-0', props['titleClass'])}>{cardTitle}</h5>\r\n                    </Card.Header>\r\n                    <Collapse in={collapse} className=\"pt-3\">\r\n                        <Card.Body>{children}</Card.Body>\r\n                    </Collapse>\r\n                </Card>\r\n            ) : null}\r\n        </>\r\n    );\r\n};\r\n\r\nexport { BasicPortlet, PortletWithHeader };\r\n","import React from 'react';\r\n\r\n/**\r\n * Renders the preloader\r\n */\r\nconst Loader = () => {\r\n    return (\r\n        <div className=\"preloader\" id=\"preloader\">\r\n            <div className=\"status\" id=\"status\">\r\n                <div className=\"spinner\">\r\n                    <div></div>\r\n                    <div></div>\r\n                    <div></div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Loader;\r\n","import { Point, Range } from '../pages/charts/Apex/data';\r\n\r\n/**\r\n * Utilit function to generate day wise series\r\n * @param {*} baseval\r\n * @param {*} count\r\n * @param {*} yrange\r\n */\r\nconst generateDayWiseTimeSeries = (baseval: number, count: number, yrange: Range): Point[] => {\r\n    let i = 0;\r\n    let series: Point[] = [];\r\n    while (i < count) {\r\n        let x = baseval;\r\n        let y = Math.floor(Math.random() * (yrange.max - yrange.min + 1)) + yrange.min;\r\n\r\n        series.push({ x, y });\r\n        baseval += 86400000;\r\n        i++;\r\n    }\r\n    return series;\r\n};\r\n\r\nexport { generateDayWiseTimeSeries };\r\n"],"sourceRoot":""}