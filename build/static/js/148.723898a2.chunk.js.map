{"version":3,"sources":["pages/uikit/Offcanvas.tsx","components/PageTitle.tsx"],"names":["OffCanvasWithBackdrop","_ref","name","scroll","backdrop","show","setShow","useState","toggle","prevState","_jsxs","_Fragment","children","_jsx","Button","variant","onClick","className","Offcanvas","onHide","Header","closeButton","Title","Body","OffcanvasPlacement","_ref2","placement","DefaultOffcanvas","Card","Offcanvases","PageTitle","breadCrumbItems","label","path","active","title","Row","Col","xl","map","props","idx","option","index","appSelector","useRedux","layoutType","state","Layout","xs","classNames","LayoutTypes","LAYOUT_HORIZONTAL","LAYOUT_DETACHED","Breadcrumb","listProps","Item","href","item"],"mappings":"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","file":"static/js/148.723898a2.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport { Row, Col, Card, Offcanvas, Button } from 'react-bootstrap';\r\n\r\n// components\r\nimport PageTitle from '../../components/PageTitle';\r\n\r\ninterface OffcanvasOptions {\r\n    name: string;\r\n    scroll: boolean;\r\n    backdrop: boolean;\r\n}\r\n\r\ninterface PlacementOptions {\r\n    name: string;\r\n    placement?: 'start' | 'end' | 'top' | 'bottom';\r\n}\r\n\r\nconst OffCanvasWithBackdrop = ({ name, scroll, backdrop }: OffcanvasOptions) => {\r\n    const [show, setShow] = useState<boolean>(false);\r\n\r\n    /**\r\n     * handle modal toggle\r\n     */\r\n    const toggle = () => {\r\n        setShow((prevState) => !prevState);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Button variant=\"primary\" onClick={toggle} className=\"me-1\">\r\n                {name}\r\n            </Button>\r\n            <Offcanvas show={show} onHide={toggle} scroll={scroll} backdrop={backdrop}>\r\n                <Offcanvas.Header closeButton>\r\n                    <Offcanvas.Title>Offcanvas</Offcanvas.Title>\r\n                </Offcanvas.Header>\r\n                <Offcanvas.Body>\r\n                    Some text as placeholder. In real life you can have the elements you have chosen. Like, text,\r\n                    images, lists, etc.\r\n                    <h5 className=\"mt-3\">List</h5>\r\n                    <ul className=\"ps-3\">\r\n                        <li className=\"\">Nemo enim ipsam voluptatem quia aspernatur</li>\r\n                        <li className=\"\">Neque porro quisquam est, qui dolorem</li>\r\n                        <li className=\"\">Quis autem vel eum iure qui in ea</li>\r\n                    </ul>\r\n                    <ul className=\"ps-3\">\r\n                        <li className=\"\">At vero eos et accusamus et iusto odio dignissimos</li>\r\n                        <li className=\"\">Et harum quidem rerum facilis</li>\r\n                        <li className=\"\">Temporibus autem quibusdam et aut officiis</li>\r\n                    </ul>\r\n                </Offcanvas.Body>\r\n            </Offcanvas>\r\n        </>\r\n    );\r\n};\r\n\r\nconst OffcanvasPlacement = ({ name, placement }: PlacementOptions) => {\r\n    const [show, setShow] = useState<boolean>(false);\r\n\r\n    /**\r\n     * handle modal toggle\r\n     */\r\n    const toggle = () => {\r\n        setShow((prevState) => !prevState);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Button variant=\"primary\" onClick={toggle}>\r\n                Toggle {name} offcanvas\r\n            </Button>\r\n            <Offcanvas show={show} onHide={toggle} placement={placement}>\r\n                <Offcanvas.Header closeButton>\r\n                    <Offcanvas.Title>Offcanvas {name}</Offcanvas.Title>\r\n                </Offcanvas.Header>\r\n                <Offcanvas.Body>\r\n                    Some text as placeholder. In real life you can have the elements you have chosen. Like, text,\r\n                    images, lists, etc.\r\n                    <h5 className=\"mt-3\">List</h5>\r\n                    <ul className=\"ps-3\">\r\n                        <li className=\"\">Nemo enim ipsam voluptatem quia aspernatur</li>\r\n                        <li className=\"\">Neque porro quisquam est, qui dolorem</li>\r\n                        <li className=\"\">Quis autem vel eum iure qui in ea</li>\r\n                    </ul>\r\n                    <ul className=\"ps-3\">\r\n                        <li className=\"\">At vero eos et accusamus et iusto odio dignissimos</li>\r\n                        <li className=\"\">Et harum quidem rerum facilis</li>\r\n                        <li className=\"\">Temporibus autem quibusdam et aut officiis</li>\r\n                    </ul>\r\n                </Offcanvas.Body>\r\n            </Offcanvas>\r\n        </>\r\n    );\r\n};\r\n\r\nconst DefaultOffcanvas = () => {\r\n    const [show, setShow] = useState<boolean>(false);\r\n\r\n    /**\r\n     * handle modal toggle\r\n     */\r\n    const toggle = () => {\r\n        setShow((prevState) => !prevState);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Card>\r\n                <Card.Body>\r\n                    <h4 className=\"header-title\">Offcanvas</h4>\r\n                    <p className=\"text-muted\">\r\n                        <code>Offcanvas</code> includes support for a header with a close button and an optional body\r\n                        class for some initial padding. We suggest that you include offcanvas headers with dismiss\r\n                        actions whenever possible, or provide an explicit dismiss action.\r\n                    </p>\r\n\r\n                    <Button variant=\"primary\" onClick={toggle}>\r\n                        Launch\r\n                    </Button>\r\n\r\n                    <Offcanvas show={show} onHide={toggle}>\r\n                        <Offcanvas.Header closeButton>\r\n                            <Offcanvas.Title>Offcanvas</Offcanvas.Title>\r\n                        </Offcanvas.Header>\r\n                        <Offcanvas.Body>\r\n                            Some text as placeholder. In real life you can have the elements you have chosen. Like,\r\n                            text, images, lists, etc.\r\n                            <h5 className=\"mt-3\">List</h5>\r\n                            <ul className=\"ps-3\">\r\n                                <li className=\"\">Nemo enim ipsam voluptatem quia aspernatur</li>\r\n                                <li className=\"\">Neque porro quisquam est, qui dolorem</li>\r\n                                <li className=\"\">Quis autem vel eum iure qui in ea</li>\r\n                            </ul>\r\n                            <ul className=\"ps-3\">\r\n                                <li className=\"\">At vero eos et accusamus et iusto odio dignissimos</li>\r\n                                <li className=\"\">Et harum quidem rerum facilis</li>\r\n                                <li className=\"\">Temporibus autem quibusdam et aut officiis</li>\r\n                            </ul>\r\n                        </Offcanvas.Body>\r\n                    </Offcanvas>\r\n                </Card.Body>\r\n            </Card>\r\n        </>\r\n    );\r\n};\r\n\r\nconst Offcanvases = () => {\r\n    const options: OffcanvasOptions[] = [\r\n        {\r\n            name: 'Enable body scrolling',\r\n            scroll: true,\r\n            backdrop: false,\r\n        },\r\n        {\r\n            name: 'Enable backdrop (default)',\r\n            scroll: false,\r\n            backdrop: true,\r\n        },\r\n        {\r\n            name: 'Enable both scrolling & backdrop',\r\n            scroll: true,\r\n            backdrop: true,\r\n        },\r\n    ];\r\n\r\n    const placementOptions: PlacementOptions[] = [\r\n        {\r\n            name: 'top',\r\n            placement: 'top',\r\n        },\r\n        {\r\n            name: 'right',\r\n            placement: 'end',\r\n        },\r\n        {\r\n            name: 'bottom',\r\n            placement: 'bottom',\r\n        },\r\n        {\r\n            name: 'left',\r\n            placement: 'start',\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <>\r\n            <PageTitle\r\n                breadCrumbItems={[\r\n                    { label: 'Base UI', path: '/ui/offcanvas' },\r\n                    { label: 'Offcanvas', path: '/ui/offcanvas', active: true },\r\n                ]}\r\n                title={'Offcanvas'}\r\n            />\r\n\r\n            <Row>\r\n                <Col xl={6}>\r\n                    <DefaultOffcanvas />\r\n\r\n                    <Card>\r\n                        <Card.Body>\r\n                            <h4 className=\"header-title\">Offcanvas Backdrop</h4>\r\n                            <p className=\"text-muted\">\r\n                                Scrolling the <code>&lt;body&gt;</code> element is disabled when an offcanvas and its\r\n                                backdrop are visible. Use the <code>scroll</code> prop to toggle{' '}\r\n                                <code>&lt;body&gt;</code> scrolling and <code>backdrop</code> prop to toggle the\r\n                                backdrop.\r\n                            </p>\r\n\r\n                            <div className=\"button-list\">\r\n                                {(options || []).map((props, idx) => (\r\n                                    <OffCanvasWithBackdrop\r\n                                        key={idx}\r\n                                        name={props.name}\r\n                                        scroll={props.scroll}\r\n                                        backdrop={props.backdrop}\r\n                                    />\r\n                                ))}\r\n                            </div>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n\r\n                <Col xl={6}>\r\n                    <Card>\r\n                        <Card.Body>\r\n                            <h4 className=\"header-title\">Offcanvas Placement</h4>\r\n                            <ul className=\"text-muted\">\r\n                                <li>\r\n                                    <code>start</code> places offcanvas on the left of the viewport\r\n                                </li>\r\n                                <li>\r\n                                    <code>end</code> places offcanvas on the right of the viewport\r\n                                </li>\r\n                                <li>\r\n                                    <code>top</code> places offcanvas on the top of the viewport\r\n                                </li>\r\n                                <li>\r\n                                    <code>bottom</code> places offcanvas on the bottom of the viewport\r\n                                </li>\r\n                            </ul>\r\n\r\n                            <div className=\"button-list\">\r\n                                {(placementOptions || []).map((option, index) => (\r\n                                    <OffcanvasPlacement key={index} placement={option.placement!} name={option.name} />\r\n                                ))}\r\n                            </div>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Offcanvases;\r\n","import React from 'react';\r\nimport { Row, Col, Breadcrumb } from 'react-bootstrap';\r\nimport classNames from 'classnames';\r\n\r\n// custom hoook\r\nimport { useRedux } from '../hooks/';\r\n\r\n// constants\r\nimport { LayoutTypes } from '../constants/';\r\n\r\ninterface BreadcrumbItems {\r\n    label: string;\r\n    path: string;\r\n    active?: boolean;\r\n}\r\n\r\ninterface PageTitleProps {\r\n    breadCrumbItems: Array<BreadcrumbItems>;\r\n    title: string;\r\n}\r\n\r\n/**\r\n * PageTitle\r\n */\r\nconst PageTitle = (props: PageTitleProps) => {\r\n    const { appSelector } = useRedux();\r\n\r\n    const { layoutType } = appSelector((state) => ({\r\n        layoutType: state.Layout.layoutType,\r\n    }));\r\n\r\n    return (\r\n        <Row>\r\n            <Col xs={12}>\r\n                <div\r\n                    className={classNames('page-title-box', {\r\n                        'page-title-box-alt':\r\n                            layoutType === LayoutTypes.LAYOUT_HORIZONTAL || layoutType === LayoutTypes.LAYOUT_DETACHED,\r\n                    })}\r\n                >\r\n                    <h4 className=\"page-title\">{props.title}</h4>\r\n                    <div className=\"page-title-right\">\r\n                        <Breadcrumb listProps={{ className: 'm-0' }}>\r\n                            <Breadcrumb.Item href=\"/\">Minton</Breadcrumb.Item>\r\n\r\n                            {(props['breadCrumbItems'] || []).map((item, index) => {\r\n                                return item.active ? (\r\n                                    <Breadcrumb.Item active key={index}>\r\n                                        {item.label}\r\n                                    </Breadcrumb.Item>\r\n                                ) : (\r\n                                    <Breadcrumb.Item key={index} href={item.path}>\r\n                                        {item.label}\r\n                                    </Breadcrumb.Item>\r\n                                );\r\n                            })}\r\n                        </Breadcrumb>\r\n                    </div>\r\n                </div>\r\n            </Col>\r\n        </Row>\r\n    );\r\n};\r\n\r\nexport default PageTitle;\r\n"],"sourceRoot":""}